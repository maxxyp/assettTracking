{"version":3,"sources":["common/simulation/electron/scenarioStore.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;IASrD;QAGI,uBAAY,YAA2B;YACnC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QACtC,CAAC;QAEM,kCAAU,GAAjB,UAAkB,OAAe;YAC7B,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAEM,qCAAa,GAApB;YACI,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAW,6BAA6B,CAAC,CAAC;QAChF,CAAC;QAEM,oCAAY,GAAnB,UAA0B,KAAa;YACnC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAiB,YAAY,GAAG,KAAK,GAAG,gBAAgB,CAAC,CAAC;QAChG,CAAC;QAjBQ,aAAa;YADzB,qCAAM,CAAC,2BAAY,CAAC;;WACR,aAAa,CAkBzB;QAAD,oBAAC;KAlBD,AAkBC,IAAA;IAlBY,sCAAa","file":"scenarioStore.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport {IScenarioStore} from \"../IScenarioStore\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {Scenario} from \"../models/scenario\";\nimport {AssetService} from \"../../core/services/assetService\";\nimport {IAssetService} from \"../../core/services/IAssetService\";\n\n@inject(AssetService)\nexport class ScenarioStore implements IScenarioStore {\n    private _assetService: IAssetService;\n\n    constructor(assetService: IAssetService) {\n        this._assetService = assetService;\n    }\n\n    public initialise(baseDir: string): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public loadScenarios() : Promise<string[]> {\n        return this._assetService.loadJson<string[]>(\"scenarios/scenarioList.json\");\n    }\n\n    public loadScenario<T, V>(route: string): Promise<Scenario<T, V>> {\n        return this._assetService.loadJson<Scenario<T, V>>(\"scenarios/\" + route + \"/scenario.json\");\n    }\n}\n"],"sourceRoot":"../../.."}