{"version":3,"sources":["common/simulation/view/scenarioItem.ts"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;;;;;;;IAQvD;QAKI,sBAAY,cAA+B;YACvC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QAC1C,CAAC;QAEM,+BAAQ,GAAf,UAAgB,MAA4B;YAA5C,iBAMC;YALG,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;YACzD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,YAAY,CAAC;iBACtD,IAAI,CAAC,UAAC,QAAQ;gBACX,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC7B,CAAC,CAAC,CAAC;QACX,CAAC;QAfQ,YAAY;YADxB,0BAAM,CAAC,+BAAc,CAAC;;WACV,YAAY,CAgBxB;QAAD,mBAAC;KAhBD,AAgBC,IAAA;IAhBY,oCAAY","file":"scenarioItem.js","sourcesContent":["/// <reference path=\"../../.././../typings/app.d.ts\" />\n\nimport {inject} from \"aurelia-framework\";\nimport {ScenarioLoader} from \"../scenarioLoader\";\nimport {IScenarioLoader} from \"../IScenarioLoader\";\nimport {Scenario} from \"../models/scenario\";\n\n@inject(ScenarioLoader)\nexport class ScenarioItem {\n    public scenarioName: string;\n    public scenario: Scenario<any, any>;\n    private _scenarioLoader: IScenarioLoader;\n\n    constructor(scenarioLoader: IScenarioLoader) {\n        this._scenarioLoader = scenarioLoader;\n    }\n\n    public activate(params: { scenario: string }): Promise<void> {\n        this.scenarioName = params.scenario.replace(/\\_/g, \"\\/\");\n        return this._scenarioLoader.loadScenario(this.scenarioName)\n            .then((scenario) => {\n                this.scenario = scenario;\n            });\n    }\n}\n"],"sourceRoot":"../../.."}