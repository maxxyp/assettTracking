{"version":3,"sources":["common/simulation/view/scenarioList.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;IAOrD;QAII,sBAAY,cAA+B;YACvC,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QAC1C,CAAC;QAEM,+BAAQ,GAAf;YAAA,iBAQC;YAPG,MAAM,CAAC,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;gBACrC,KAAI,CAAC,eAAe,CAAC,aAAa,EAAE;qBAC/B,IAAI,CAAC,UAAC,SAAS;oBACZ,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC3B,OAAO,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,gCAAS,GAAhB,UAAiB,QAAgB;YAC7B,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QACxC,CAAC;QApBQ,YAAY;YADxB,0BAAM,CAAC,+BAAc,CAAC;;WACV,YAAY,CAqBxB;QAAD,mBAAC;KArBD,AAqBC,IAAA;IArBY,oCAAY","file":"scenarioList.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport {inject} from \"aurelia-framework\";\nimport {ScenarioLoader} from \"../scenarioLoader\";\nimport {IScenarioLoader} from \"../IScenarioLoader\";\n\n@inject(ScenarioLoader)\nexport class ScenarioList {\n    public scenarios: string[];\n    private _scenarioLoader: IScenarioLoader;\n\n    constructor(scenarioLoader: IScenarioLoader) {\n        this._scenarioLoader = scenarioLoader;\n    }\n\n    public attached(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this._scenarioLoader.listScenarios()\n                .then((scenarios) => {\n                    this.scenarios = scenarios;\n                    resolve();\n                });\n        });\n    }\n\n    public paramName(scenario: string) : string {\n        return scenario.replace(/\\//g, \"_\");\n    }\n}\n"],"sourceRoot":"../../.."}