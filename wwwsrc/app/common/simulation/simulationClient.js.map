{"version":3,"sources":["common/simulation/simulationClient.ts"],"names":[],"mappings":"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","file":"simulationClient.js","sourcesContent":["import {inject} from \"aurelia-framework\";\nimport {Interceptor} from \"aurelia-fetch-client\";\nimport * as Logging from \"aurelia-logging\";\nimport {IScenarioLoader} from \"./IScenarioLoader\";\nimport {ScenarioLoader} from \"./scenarioLoader\";\nimport {UrlParamService} from \"../core/urlParamService\";\nimport {IHttpClient} from \"../core/IHttpClient\";\nimport {IHttpHeader} from \"../core/IHttpHeader\";\nimport { ApiException } from \"../resilience/apiException\";\n\n@inject(ScenarioLoader)\nexport class SimulationClient implements IHttpClient {\n    private _scenarioLoader: IScenarioLoader;\n    private _logger: Logging.Logger;\n\n    constructor(scenarioLoader: IScenarioLoader) {\n        this._scenarioLoader = scenarioLoader;\n        this._logger = Logging.getLogger(\"SimulationClient\");\n    }\n\n    public setup(options: { username?: string, password?: string, noCredentialsHeader?: boolean, defaultQueryParams?: {[index: string]: string} }, interceptor?: Interceptor): void {\n    }\n\n    public fetch(url: string, request?: Request, interceptor?: Interceptor): Promise<Response> {\n        throw(\"not implemented\");\n    }\n\n    public getData<T>(baseEndpoint: string, endPoint: string, params: { [id: string]: any }, breakCache?: boolean, headers?: IHttpHeader[]): Promise<T> {\n        return this.buildUrl(endPoint, params)\n            .spread<T>((endPointWithVariables: string, hasQs: Boolean) => {\n                this._logger.debug(\"GET => \" + endPointWithVariables);\n                if (headers && headers.length > 0) {\n                    this._logger.debug(\"GET Headers => \", headers);\n                }\n                return this._scenarioLoader.get<T>(endPointWithVariables)\n                    .then((response) => {\n                        this._logger.debug(\"GET SUCCESS <= \", response);\n                        return response;\n                    })\n                    .catch((error) => {\n                        if (hasQs) {\n                            this._logger.debug(\"GET ERROR (qs route doesn't exist - attempting fallback) <= \", error);\n                            return this.getData(baseEndpoint, endPoint.split(/[?#]/)[0], this.omitQsKeys(params), breakCache);\n                        }\n                        this._logger.debug(\"GET ERROR <= \", error);\n                        throw this.buildApiError(error, endPointWithVariables, \"getData\");\n                    });\n            });\n    }\n\n    public postData<T, V>(baseEndpoint: string, endPoint: string, params: { [id: string]: any }, data: T, headers?: IHttpHeader[]): Promise<V> {\n        return this.buildUrl(endPoint, params)\n            .spread<V>((endPointWithVariables: string, hasQs: Boolean) => {\n                this._logger.debug(\"POST => \" + endPointWithVariables);\n                if (headers && headers.length > 0) {\n                    this._logger.debug(\"POST Headers => \", headers);\n                }\n                this._logger.debug(\"POST PAYLOAD => \", data);\n                this._logger.debug(JSON.stringify(data, null, 2));\n                return this._scenarioLoader.post<T, V>(endPointWithVariables, data)\n                    .then((response) => {\n                        this._logger.debug(\"POST SUCCESS <= \", response || \"Empty Response\");\n                        return response;\n                    })\n                    .catch((error) => {\n                        if (hasQs) {\n                            this._logger.debug(\"POST ERROR (qs route doesn't exist - attempting fallback) <= \", error);\n                            return this.postData(baseEndpoint, endPoint.split(/[?#]/)[0], this.omitQsKeys(params), data);\n                        }\n                        this._logger.debug(\"POST ERROR <= \", error);\n                        throw this.buildApiError(error, endPointWithVariables, \"postData\");\n                    });\n            });\n    }\n\n    public putData<T, V>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data: T, headers?: IHttpHeader[]): Promise<V> {\n        return this.buildUrl(endPoint, params)\n            .spread<V>((endPointWithVariables: string, hasQs: Boolean) => {\n                this._logger.debug(\"PUT => \" + endPointWithVariables);\n                if (headers && headers.length > 0) {\n                    this._logger.debug(\"PUT Headers => \", headers);\n                }\n                this._logger.debug(\"PUT PAYLOAD => \", data);\n                return this._scenarioLoader.put<T, V>(endPointWithVariables, data)\n                    .then((response) => {\n                        this._logger.debug(\"PUT SUCCESS <= \", response || \"Empty Response\");\n                        return response;\n                    })\n                    .catch((error) => {\n                        if (hasQs) {\n                            this._logger.debug(\"PUT ERROR (qs route doesn't exist - attempting fallback) <= \", error);\n                            return this.putData(baseEndPoint, endPoint.split(/[?#]/)[0], this.omitQsKeys(params), data);\n                        }\n                        this._logger.debug(\"PUT ERROR <= \", error);\n                        throw this.buildApiError(error, endPointWithVariables, \"putData\");\n                    });\n            });\n    }\n\n    private buildApiError(error: {status: string, statusText: string}, endPointWithVariables: string, method: string): ApiException {\n        if (!error) {\n            error = {status: undefined, statusText: \"Empty error object found\"};\n        }\n        return new ApiException(this, method, \"HTTP Response JSON parse error, Error: {0}, HTTP status: {1}, URL: {2}\",\n                            [error.statusText, error.status, endPointWithVariables], null, error.status);\n    }\n\n    private buildUrl(endPoint: string, params: {[index: string]: string}): Promise<(string|boolean)[]> {\n        let endPointWithVariables: string;\n        try {\n            endPointWithVariables = UrlParamService.getParamEndpoint(endPoint, params);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n\n        let hasQs = /\\\\?(.*)=/.test(endPointWithVariables);\n        if (hasQs) {\n            let parts = endPointWithVariables.split(/[?#]/);\n            endPointWithVariables = parts[0] + encodeURIComponent(\"?\" + parts[1]);\n        }\n        return Promise.resolve([endPointWithVariables, hasQs]);\n    }\n\n    private omitQsKeys(params: {[index: string]: string }): {[index: string]: string } {\n        let omittedQsKeys: {[index: string]: string} = {};\n        Object.keys(params).forEach((key) => {\n            let isQsKey = key.indexOf(\"?\") === 0;\n            if (!isQsKey) {\n                omittedQsKeys[key] = params[key];\n            }\n        });\n        return omittedQsKeys;\n    }\n}\n"],"sourceRoot":"../.."}