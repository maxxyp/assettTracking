{"version":3,"sources":["common/ui/elements/buttonList.ts"],"names":[],"mappings":"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","file":"buttonList.js","sourcesContent":["import {bindable, bindingMode} from \"aurelia-framework\";\nimport {ButtonListItem} from \"./models/buttonListItem\";\nimport {IconButtonListItem} from \"./models/iconButtonListItem\";\nimport {Threading} from \"../../core/threading\";\nimport {DOM} from \"aurelia-pal\";\nimport {inject} from \"aurelia-dependency-injection\";\n\n@inject(Element)\nexport class ButtonList {\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public items: ButtonListItem[];\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public buttonLayout: string;\n    @bindable({defaultBindingMode: bindingMode.twoWay})\n    public value: any;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public multiSelect: boolean;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public buttonWidth: string;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public buttonHeight: string;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public values: string[];\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public disabled: boolean;\n\n    private _element: Element;\n\n    private _buttonHasFocus: boolean;\n\n    constructor(element: Element) {\n        this.multiSelect = false;\n        this.buttonWidth = \"auto\";\n        this.buttonHeight = \"auto\";\n        this.buttonLayout = \"horizontal\";\n        this._element = element;\n    }\n\n    public attached(): void {\n        // if we have values and not button list items then convert our values array into a ButtonListItem array.\n        if (this.values) {\n            this.items = [];\n            for (let indexValueItem = 0; indexValueItem < this.values.length; indexValueItem++) {\n                this.items.push(new ButtonListItem(this.values[indexValueItem], this.values[indexValueItem], false));\n            }\n        }\n    }\n\n    public setValue(buttonListItem: ButtonListItem, index: number, event: Event): void {\n        if (!buttonListItem.disabled) {\n            if (!this.multiSelect) {\n                this.value = buttonListItem.value;\n            } else {\n                let pos: number = this.value ? this.value.indexOf(buttonListItem.value) : -1;\n                if (pos > -1) {\n                    this.value.splice(pos, 1);\n                } else {\n                    if (!this.value) {\n                        this.value = [];\n                    }\n                    this.value.push(buttonListItem.value);\n                }\n                /* Do a shallow copy to make the outside world notice the array change */\n                this.value = this.value.slice(0);\n            }\n            if (event) {\n                event.stopPropagation();\n                DOM.dispatchEvent(new Event(\"click\"));\n            }\n        }\n    }\n\n    public isIconButton(buttonListItem: ButtonListItem): boolean {\n        return !!(<IconButtonListItem>buttonListItem)\n                    && (<IconButtonListItem>buttonListItem).iconClassName !== undefined;\n    }\n\n    public blur(index: number) : void {\n        this._buttonHasFocus = false;\n        Threading.nextCycle(() => {\n            if (!this._buttonHasFocus) {\n                this._element.dispatchEvent(DOM.createCustomEvent(\"blur\", {\n                    detail: {\n                        value: this._element\n                    },\n                    bubbles: true\n                }));\n            }\n        });\n    }\n\n    public focus(index: number) : void {\n        this._buttonHasFocus = true;\n    }\n}\n"],"sourceRoot":"../../.."}