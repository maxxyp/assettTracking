{"version":3,"sources":["common/ui/elements/textBox.ts"],"names":[],"mappings":";;;;;;;;;;;;IAOA;QAsBI,iBAAY,OAAgB;YACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAC5B,CAAC;QACM,0BAAQ,GAAf;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;YAC1B,CAAC;QACL,CAAC;QACM,sBAAI,GAAX;YACI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAG,CAAC,iBAAiB,CAAC,MAAM,EAAE;gBACtD,MAAM,EAAE;oBACJ,KAAK,EAAE,IAAI,CAAC,QAAQ;iBACvB;gBACD,OAAO,EAAE,IAAI;aAChB,CAAC,CAAC,CAAC;QACR,CAAC;QArCD;YADC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;8CAC9B;QAErB;YADC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;gDAC5B;QAEvB;YADC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;4DACf;QAEpC;YADC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;iDAC1B;QAEzB;YADC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;iDAC1B;QAEzB;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;4DACjB;QAEpC;YADC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;oDACxB;QAE3B;YADC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;kDAC1B;QAEzB;YADC,6BAAQ,CAAC,EAAC,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAC,CAAC;;6CAC/B;QAlBX,OAAO;YAFnB,kCAAa,CAAC,UAAU,CAAC;YACzB,qCAAM,CAAC,OAAO,CAAC;6CAuBS,OAAO;WAtBnB,OAAO,CAwCnB;QAAD,cAAC;KAxCD,AAwCC,IAAA;IAxCY,0BAAO","file":"textBox.js","sourcesContent":["import {bindable, customElement} from \"aurelia-templating\";\nimport {bindingMode} from \"aurelia-binding\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {DOM} from \"aurelia-pal\";\n\n@customElement(\"text-box\")\n@inject(Element)\nexport class TextBox {\n    @bindable({defaultBindingMode: bindingMode.twoWay})\n    public value: string;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public classes: string;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public hideKeyboardOnEnter: boolean;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public disabled: boolean;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public readonly: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public cancelDefaultSubmit: boolean;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public placeholder: string;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public maxLength: number;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public type: string;\n\n    private _element: Element;\n\n    constructor(element: Element) {\n        this.maxLength = 65535;\n        this.placeholder = \"\";\n        this._element = element;\n    }\n    public attached(): void {\n        if (!this.type) {\n            this.type = \"textbox\";\n        }\n    }\n    public blur() : void {\n        this._element.dispatchEvent(DOM.createCustomEvent(\"blur\", {\n            detail: {\n                value: this._element\n            },\n            bubbles: true\n        }));\n    }\n}\n"],"sourceRoot":"../../.."}