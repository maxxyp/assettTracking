{"version":3,"sources":["common/ui/elements/numberBox.ts"],"names":[],"mappings":"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","file":"numberBox.js","sourcesContent":["import { bindable, customElement } from \"aurelia-templating\";\nimport { bindingMode, observable } from \"aurelia-binding\";\nimport { inject } from \"aurelia-dependency-injection\";\nimport { DOM } from \"aurelia-pal\";\nimport { Threading } from \"../../core/threading\";\nimport { StringHelper } from \"../../core/stringHelper\";\n\n@customElement(\"number-box\")\n@inject(Element)\nexport class NumberBox {\n    @bindable({ defaultBindingMode: bindingMode.twoWay })\n    public value: number;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public classes: string;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public disabled: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public readonly: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public floatAllowed: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public placeholder: string;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public maxLength: number;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public maxValue: number;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public wholePlaces: number;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public decimalPlaces: number;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public hideKeyboardOnEnter: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public cancelDefaultSubmit: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public resetValueForValidation: boolean;\n\n    @observable\n    public inputValue: string;\n    @observable\n    public defaultPlaceholder: string;\n\n    private _element: Element;\n\n    constructor(element: Element) {\n        this.placeholder = \"\";\n        this.defaultPlaceholder = \"\";\n        this._element = element;\n        this.maxLength = 15;\n        this.resetValueForValidation = false;\n    }\n\n    public attached(): void {\n        this.updatePlaceholder();\n    }\n\n    public placeholderChanged(): void {\n        this.updatePlaceholder();\n    }\n\n    public decimalPlacesChanged(): void {\n        this.updatePlaceholder();\n    }\n\n    // warning: if you bind to this you are forced to use a (finite) number type or undefined only\n    // bind your model to this\n    public valueChanged(newValue: number, oldValue: number): void {\n        if (typeof this.value === \"number\" && isFinite(this.value)) {\n            if (newValue > this.maxValue) {\n                if (!this.resetValueForValidation) {\n                    Threading.nextCycle(() => {\n                        this.value = oldValue;\n                    });\n                }\n            } else {\n                if (this.decimalPlaces) {\n                    let actualDecimalPlaces = this.calculatePlaceValues(newValue);\n                    if (actualDecimalPlaces > this.decimalPlaces) {\n                        Threading.nextCycle(() => {\n                            this.value = oldValue; // don't use old value here if it's not valid\n                        });\n                    }\n                    if (oldValue === undefined && !this.resetValueForValidation) {\n                        let inptVal = this.getFormattedInputValue(newValue.toString(), newValue, actualDecimalPlaces, this.decimalPlaces);\n                        if (inptVal !== undefined) {\n                            this.inputValue = inptVal;\n                        }\n                    }\n                }\n            }\n\n            if (this.value !== parseFloat(this.inputValue)) {\n                if (this.decimalPlaces) {\n                    let actualDecimalPlaces = this.calculatePlaceValues(newValue);\n                    let inptVal = this.getFormattedInputValue(newValue.toString(), newValue, actualDecimalPlaces, this.decimalPlaces);\n                    if (inptVal !== undefined) {\n                        this.inputValue = inptVal;\n                    } else {\n                        this.inputValue = this.value.toString();\n                    }\n                } else {\n                    this.inputValue = this.value.toString();\n                }\n            }\n        } else {\n            if (this.inputValue !== \"\") {\n                this.inputValue = \"\";\n            }\n        }\n    }\n\n    // to be used internally, never bind to this\n    public inputValueChanged(newValue: string, oldValue: string): void {\n        let parsedValue = parseFloat(newValue);\n        // use undefined rather than NaN\n        parsedValue = isNaN(parsedValue) ? undefined : parsedValue;\n        if (parsedValue !== this.value) {\n            this.value = parsedValue;\n        }\n    }\n\n    public blur(): void {\n        this.prefixDecimalPlaceWithZero();\n        this._element.dispatchEvent(DOM.createCustomEvent(\"blur\", {\n            detail: {\n                value: this._element\n            },\n            bubbles: true\n        }));\n    }\n\n    private calculatePlaceValues(newValue: number): number {\n        let value = newValue.toString();\n        let usesScientificNotation = value.indexOf(\"e\") !== -1;\n        let actualDecimalPlaces = 0;\n\n        if (usesScientificNotation) {\n            let exponent = parseFloat(value.split(\"e\").pop());\n            if (exponent !== undefined && exponent < 0) {\n                actualDecimalPlaces = Math.abs(exponent);\n            }\n        } else {\n            let decimalPointIndex = value.indexOf(\".\");\n            if (decimalPointIndex !== -1) {\n                actualDecimalPlaces = value.length - decimalPointIndex - 1;\n            }\n        }\n\n        return actualDecimalPlaces;\n    }\n\n    private prefixDecimalPlaceWithZero(): void {\n        if (this.value !== null && this.value !== undefined) {\n            if (this.decimalPlaces) {\n                let actualDecimalPlaces = this.calculatePlaceValues(this.value);\n                let inptVal = this.getFormattedInputValue(this.inputValue, this.value, actualDecimalPlaces, this.decimalPlaces);\n                if (inptVal === undefined) {\n                    this.inputValue = this.value.toString(10);\n                } else {\n                    this.inputValue = inptVal;\n                }\n            } else {\n                this.inputValue = this.value.toString(10);\n            }\n        } else if (this.inputValue !== null && this.inputValue !== undefined) {\n            if (this.inputValue === \".\") {\n                if (this.decimalPlaces !== null && this.decimalPlaces !== undefined) {\n                    this.inputValue = \"0.\" + StringHelper.padRight(\"\", \"0\", this.decimalPlaces);\n                } else {\n                    this.inputValue = \"0\";\n                }\n\n                this.value = parseFloat(this.inputValue);\n            }\n        }\n    }\n\n    private updatePlaceholder(): void {\n        if (!this.placeholder && this.decimalPlaces) {\n            this.defaultPlaceholder = \"0.\" + StringHelper.padRight(\"\", \"0\", this.decimalPlaces);\n        }\n    }\n\n    private getFormattedInputValue(inputValue: string, value: number, actualDecimalPlaces: number, decimalPlaces: number): string {\n        let inputVal: string = undefined;\n        if (inputValue !== undefined && inputValue !== null) {\n            if (actualDecimalPlaces < decimalPlaces) {\n                if (decimalPlaces) {\n                    // postfix zeros to inputValue                        \n                    if (inputValue.indexOf(\".\") !== -1) {\n                        let decimalPlcs = this.calculatePlaceValues(parseFloat(inputValue));\n                        if (decimalPlcs > 0) {\n                            inputVal = parseFloat(inputValue) + StringHelper.padRight(\"\", \"0\", decimalPlaces - actualDecimalPlaces);\n                        } else {\n                            inputVal = parseFloat(inputValue) + \".\" + StringHelper.padRight(\"\", \"0\", decimalPlaces);\n                        }\n                    } else {\n                        inputVal = parseFloat(inputValue) + \".\" + StringHelper.padRight(\"\", \"0\", decimalPlaces);\n                    }\n                } else {\n                    inputVal = inputValue;\n                }\n            }\n        }\n        return inputVal;\n    }\n}\n"],"sourceRoot":"../../.."}