{"version":3,"sources":["common/ui/elements/textArea.ts"],"names":[],"mappings":"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","file":"textArea.js","sourcesContent":["import {bindable, customElement} from \"aurelia-templating\";\r\nimport {bindingMode} from \"aurelia-binding\";\r\nimport {inject} from \"aurelia-dependency-injection\";\r\nimport {DOM} from \"aurelia-pal\";\r\n\r\n@customElement(\"text-area\")\r\n@inject(Element)\r\nexport class TextArea {\r\n    @bindable({ defaultBindingMode: bindingMode.twoWay })\r\n    public value: string;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public classes: string;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public disabled: boolean;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public readonly: boolean;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public placeholder: string;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public spellCheck: boolean;\r\n\r\n    @bindable({defaultBindingMode: bindingMode.oneWay})\r\n    public charactersLeft: string;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public maxlength: number;\r\n    public maxLengthSet: boolean;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public maxlengthText: string;\r\n\r\n    @bindable({defaultBindingMode: bindingMode.oneWay})\r\n    public charactersLeft2: string;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public maxlength2: number;\r\n    public maxLength2Set: boolean;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public maxlength2Text: string;\r\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\r\n    public maxlength2ExceededText: string;\r\n\r\n    private _element: Element;\r\n    private _defaultMaxLength: number ;\r\n\r\n    constructor(element: Element) {\r\n        this._defaultMaxLength = this.maxlength = this.maxlength2 = 65535;\r\n        this.maxLengthSet = false;\r\n        this.maxlengthText = \"characters left\";\r\n        this.spellCheck = true;\r\n        this.placeholder = \"\";\r\n        this._element = element;\r\n    }\r\n\r\n    public attached() : void {\r\n        this.updateCharCount();\r\n    }\r\n\r\n    public valueChanged(newValue: string, oldValue: string): void {\r\n        this.updateCharCount();\r\n    }\r\n\r\n    public maxlengthChanged(newValue: string, oldValue: string): void {\r\n        if (newValue) {\r\n            this.maxlength = parseInt(newValue, 10);\r\n            this.maxLengthSet = true;\r\n            this.updateCharCount();\r\n        } else {\r\n            this.maxlength = this._defaultMaxLength;\r\n            this.maxLengthSet = false;\r\n        }\r\n    }\r\n\r\n    public maxlength2Changed(newValue: string, oldValue: string): void {\r\n        if (newValue) {\r\n            this.maxlength2 = parseInt(newValue, 10);\r\n            this.maxLength2Set = true;\r\n            this.updateCharCount();\r\n        } else {\r\n            this.maxlength2 = this._defaultMaxLength;\r\n            this.maxLength2Set = false;\r\n        }\r\n    }\r\n\r\n    public updateCharCount(): void {\r\n        if (this.maxLengthSet) {\r\n            let totalLength: number = (this.value ? this.value.length : 0);\r\n            let val: number = this.maxlength - totalLength;\r\n\r\n            if (val >= 0) {\r\n                this.charactersLeft = `${val} ${this.maxlengthText}`;\r\n            } else if (val < 0) {\r\n                let truncval = this.value.substr(0, this.maxlength);\r\n                this.value = truncval;\r\n            }\r\n\r\n            if (this.maxLength2Set && this.maxlength2 < this.maxlength) {\r\n                let val2: number = this.maxlength2 - totalLength;\r\n                if (val2 > 0) {\r\n                    this.charactersLeft2 = `(${val2} ${this.maxlength2Text})`;\r\n                } else if (val2 < 0) {\r\n                    this.charactersLeft2 = `(${this.maxlength2ExceededText})`;\r\n                } else {\r\n                    this.charactersLeft2 = \"\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public blur() : void {\r\n        this._element.dispatchEvent(DOM.createCustomEvent(\"blur\", {\r\n            detail: {\r\n                value: this._element\r\n            },\r\n            bubbles: true\r\n        }));\r\n    }\r\n}\r\n"],"sourceRoot":"../../.."}