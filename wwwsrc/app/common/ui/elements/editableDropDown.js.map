{"version":3,"sources":["common/ui/elements/editableDropDown.ts"],"names":[],"mappings":"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","file":"editableDropDown.js","sourcesContent":["import {bindable} from \"aurelia-templating\";\nimport {bindingMode} from \"aurelia-binding\";\nimport {StringHelper} from \"../../core/stringHelper\";\n\nconst CARET_ID: string = \"editable-dropdown-caret\";\n\nexport class EditableDropDown {\n\n    @bindable({defaultBindingMode: bindingMode.twoWay})\n    public value: string;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public disabled: boolean;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public items: string [];\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public placeholder: string;\n\n    public filterList: string [];\n    public isOpen: boolean;\n    public keyDown: (event: KeyboardEvent) => void;\n\n    private readonly _clickCheck: (event: Event) => void;\n\n    constructor(element: HTMLElement) {\n\n        this.filterList = [];\n\n        this.keyDown = (event: KeyboardEvent) => {\n\n            if (event.keyCode === 13) { // enter key press\n                event.preventDefault();\n                this.checkAddNewItem(this.value);\n                this.filterList = [];\n            }\n\n            this.isOpen = false;\n        };\n\n        this._clickCheck = (event: Event) => {\n\n            if (event.srcElement.id !== CARET_ID) {\n                event.preventDefault();\n                this.filterList = [];\n            }\n        };\n    }\n\n    public attached(): void {\n\n        this.isOpen = !this.value;\n\n        if (!this.placeholder) {\n            this.placeholder = \"Please select or type...\";\n        }\n\n        document.addEventListener(\"keydown\", this.keyDown);\n        document.addEventListener(\"click\", this._clickCheck);\n    }\n\n    public detached(): void {\n        document.removeEventListener(\"keydown\", this.keyDown);\n        document.removeEventListener(\"click\", this._clickCheck);\n\n    }\n\n    public select(item: string, index: number): void {\n\n        if (StringHelper.isEmptyOrUndefinedOrNull(item)) {\n            return;\n        }\n\n        if (this.filterList && this.filterList.length > 0) {\n            this.value = this.filterList[index];\n        } else {\n            this.value = item;\n        }\n\n        this.filterList = [];\n        this.isOpen = false;\n    }\n\n    public toggleCaret(): void {\n\n        if (this.disabled) {\n            return;\n        }\n\n        const {isOpen, filterList} = this;\n        const {length: listHasItems} = filterList;\n\n        if (!isOpen && listHasItems) {\n            this.clickOpen();\n            return;\n        }\n\n        if (!isOpen && !listHasItems) {\n            this.clickClose();\n            return;\n        }\n\n        if (isOpen && !listHasItems) {\n            this.filterList = this.getItems();\n        }\n    }\n\n    public blurListener(event: any): void {\n\n        this.checkAddNewItem(this.value);\n       // this.select(this.value,0);\n    }\n\n    public search(): boolean {\n\n        this.isOpen = true;\n\n        if (this.value && this.items) {\n            this.filterList = this.getItems(this.value);\n            return true;\n        }\n\n        this.filterList = this.items;\n        return true;\n    }\n\n    private checkAddNewItem(item: string): void {\n\n        if (StringHelper.isEmptyOrUndefinedOrNull(item)) {\n            return;\n        }\n\n        const index = this.items.findIndex(i => i === item);\n\n        if (index === -1) {\n            this.items = [...this.items, item];\n        }\n    }\n\n    private clickClose(): void {\n\n        if (this.isOpen) {\n            return;\n        }\n\n        this.isOpen = true;\n        this.value = undefined;\n        this.filterList = [];\n    }\n\n    private clickOpen(): void {\n\n        this.isOpen = true;\n        this.filterList = this.getItems();\n    }\n\n    private getItems(searchStr: string = null): string [] {\n\n        const filteredItems = this.items.filter(a => a && a.trim().length > 0);\n\n        if (StringHelper.isEmptyOrUndefinedOrNull(searchStr)) {\n            return filteredItems;\n        }\n\n        return filteredItems.filter(a => a.toUpperCase().indexOf(searchStr.toUpperCase()) > -1);\n    }\n\n}\n"],"sourceRoot":"../../.."}