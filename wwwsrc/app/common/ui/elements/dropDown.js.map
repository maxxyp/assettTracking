{"version":3,"sources":["common/ui/elements/dropDown.ts"],"names":[],"mappings":"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","file":"dropDown.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport { bindable, bindingMode, customElement } from \"aurelia-framework\";\nimport { computedFrom, observable } from \"aurelia-binding\";\nimport { inject } from \"aurelia-dependency-injection\";\nimport { Threading } from \"../../core/threading\";\nimport { DOM } from \"aurelia-pal\";\nimport { DropdownType } from \"./models/dropdownType\";\n\n@customElement(\"drop-down\")\n@inject(Element)\nexport class DropDown {\n    private static _ID_PROPERTY: string = \"_id\";\n    private static _SHOW_ALL_ITEMS: string = \"All\";\n    private static _ALPHABET_ITEMS: string = \"All,0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z\";\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public placeholder: string;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public limit: number;\n\n    @bindable({defaultBindingMode: bindingMode.twoWay})\n    public value: string;\n\n    @bindable({defaultBindingMode: bindingMode.twoWay})\n    public valueItem: any;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public disabled: boolean;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public readonly: boolean;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public values: any[];\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public valueProperty: string;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public textProperty: string;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public searchProperties: string[];\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public crossClass: string;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public caretClass: string;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public clearOnSelect: boolean;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public formatTextValue: string;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public errorMessage: string;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public showErrorMessage: boolean;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public noFilter: boolean;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public dropdownType: DropdownType;\n\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public minItemsToCategoriseSmashButtons: number;\n\n    @bindable({defaultBindingMode: bindingMode.twoWay})\n    public filterCount: number;\n\n    @observable\n    public valueText: string;\n    public item: any;\n    public errorMsg: string;\n    public showSmash: boolean;\n    public heightStyle: string;\n    public alphabets: { [index: string]: any };\n\n    public showDropDown: boolean;\n    public filteredValues: any[];\n    public lookupItems: HTMLElement;\n    public selectedId: number;\n    public focusListener: (event: FocusEvent) => void;\n    public blurListener: (event: FocusEvent) => void;\n    public keyDown: (event: KeyboardEvent) => void;\n    public alphabetKeys: string[];\n\n    private _hasFocus: boolean;\n    private _element: HTMLElement;\n    private _lastShow: number;\n    private _clickCheck: () => void;\n\n    // following related smash buttons and grouping items alphanumerically\n    private _selectedAlphabetLetter: string;\n\n    constructor(element: HTMLElement) {\n        this.noFilter = false;\n        this.showSmash = false;\n        this.minItemsToCategoriseSmashButtons = -1;\n        this.heightStyle = \"\";\n        this._element = element;\n        this.selectedId = -1;\n        this.showDropDown = false;\n        this.filteredValues = [];\n        this.filterCount = 0;\n\n        this.keyDown = (event: KeyboardEvent) => {\n            if (this.showDropDown) {\n                if (event.keyCode === 9) { // tab key press\n                    this.checkForListValue();\n                    this.closeDropdown();\n                }\n                if (event.keyCode === 13) { // enter key press\n                    event.preventDefault();\n                    if (this.selectedId > -1) {\n                        this.select(this.filteredValues[this.selectedId][DropDown._ID_PROPERTY]);\n                    } else {\n                        this.checkForListValue();\n                    }\n                    this.closeDropdown();\n                }\n                if (event.keyCode === 27) { // escape key press\n                    event.preventDefault();\n                    this.checkForListValue();\n                    this.closeDropdown();\n                }\n                if (event.keyCode === 38) { // up key press\n                    event.preventDefault();\n                    if (this.selectedId > 0) {\n                        this.selectedId--;\n                        this.lookupItems.scrollTop = this.lookupItems.scrollTop - this.findItemHeight();\n                    }\n                }\n                if (event.keyCode === 40) { // down key press\n                    event.preventDefault();\n                    if (this.selectedId < this.filteredValues.length - 1) {\n                        this.selectedId++;\n                        if (this.selectedId > 1) {\n                            this.lookupItems.scrollTop = this.lookupItems.scrollTop + this.findItemHeight();\n                        }\n                    }\n                }\n            } else {\n                if (event.keyCode === 40 && this._hasFocus) { // down key press\n                    event.preventDefault();\n                    this.openDropdown();\n                }\n            }\n        };\n        this._clickCheck = () => {\n            if (new Date().getTime() - this._lastShow > 500) {\n                this.closeDropdown();\n                this.checkForListValue();\n            }\n        };\n        this.focusListener = () => {\n            this._element.children[0].classList.add(\"ctrl-focus\");\n            this._hasFocus = true;\n        };\n        this.blurListener = () => {\n            this._element.children[0].classList.remove(\"ctrl-focus\");\n            this._hasFocus = false;\n            Threading.nextCycle(() => {\n                if (!this._hasFocus) {\n                    this.blur();\n                }\n            });\n        };\n\n    }\n\n    public attached(): void {\n        if (this.dropdownType === DropdownType.smashbuttons) {\n            this.noFilter = true;\n        }\n\n        if (!this.caretClass) {\n            this.caretClass = \"fa-caret-down\";\n        }\n        if (!this.crossClass) {\n            this.crossClass = \"fa-close\";\n        }\n        if (!this.placeholder) {\n            this.placeholder = \"Please select or type...\";\n        }\n        if (!this.searchProperties) {\n            this.searchProperties = [this.textProperty];\n        }\n        if (this.values) {\n            this.addIdsToObjectArray();\n        }\n        if (!this.limit) {\n            this.limit = 99999;\n        }\n\n        this.processValue(this.value);\n\n        this.setupAlphabeticalKeys();\n\n        document.addEventListener(\"keydown\", this.keyDown);\n    }\n\n    public detached(): void {\n        document.removeEventListener(\"click\", this._clickCheck);\n        document.removeEventListener(\"keydown\", this.keyDown);\n    }\n\n    public openDropdown(): void {\n        this.selectedId = -1;\n        this._lastShow = new Date().getTime();\n        this.showDropDown = true;\n        this.filterCount = this.filteredValues.length;\n        document.addEventListener(\"click\", this._clickCheck);\n    }\n\n    public closeDropdown(): void {\n        this.showDropDown = false;\n        document.removeEventListener(\"click\", this._clickCheck);\n        if (!this.value) {\n            this.filterCount = 0;\n        }        \n    }\n\n    public valuesChanged(): void {\n        this.addIdsToObjectArray();\n        this.resetFiltered();\n        this.setupAlphabeticalKeys();\n    }\n\n    public valueChanged(newValue: any, oldValue: any): void {\n        this.processValue(newValue);\n    }\n\n    public valueTextChanged(newValue: string, oldValue: string): void {\n        if (newValue === \"\") {\n            this.value = undefined;\n            this.item = undefined;\n            this.valueItem = undefined;\n            this.filterCount = this.filteredValues.length;\n        }\n        this.filterValues();\n\n        this.errorMsg = (this.showErrorMessage && newValue !== \"\" && this.filteredValues.length === 0) ? this.errorMessage : undefined;\n    }\n\n    public select(id: number): void {\n        if (id > -1) {\n            let currentId: number = this.values.map((v: any) => {\n                return v[DropDown._ID_PROPERTY];\n            }).indexOf(id);\n            if (this.clearOnSelect) {\n                this.valueText = \"\";\n            } else {\n                this.valueText = this.formatValueTextString(id - 1);\n            }\n            this.value = this.values[currentId][this.valueProperty];\n            this.item = this.values[id];\n            this.valueItem = this.values[currentId];\n            this.closeDropdown();\n            this.lookupItems.scrollTop = 0;\n            this.resetFiltered();\n\n            /* Allow the current value to propogate before clearing it */\n            if (this.clearOnSelect) {\n                Threading.nextCycle(() => {\n                    this.value = undefined;\n                });\n            }\n        }\n    }\n\n    public filterValues(): void {\n        this.selectedId = -1;\n        this.resetFiltered();\n        if (this.valueText && this.valueText.length > 0) {\n            this.filteredValues = this.filteredValues.filter((value) => {\n                let found: boolean = false;\n                let keywords: string[] = this.valueText.toLocaleLowerCase().split(\" \");\n                for (let index = 0; index < this.searchProperties.length; index++) {\n                    let foundCount: number = 0;\n                    let property = this.searchProperties[index];\n                    for (let keywordsCount: number = 0; keywordsCount < keywords.length; keywordsCount++) {\n                        if (value && value[property] && value[property].toString().toLowerCase().indexOf(keywords[keywordsCount].toLowerCase()) > -1\n                            || this.formatValueTextString(value._id - 1).toString().toLowerCase().indexOf(keywords[keywordsCount].toLowerCase()) > -1) {\n                            foundCount++;\n                        }\n                    }\n                    if (foundCount >= keywords.length) {\n                        found = true;\n                        break;\n                    }\n                }\n                return found;\n            });\n            this.filterCount = this.filteredValues.length;\n            this.openDropdown();\n        }\n    }\n\n    public toggleDropdown(): void {\n        if (!this.disabled) {\n            if (this.dropdownType === DropdownType.smashbuttons) {\n                if (this.isDoubleHeightNeeded(this.filteredValues, this.textProperty)) {\n                    this.heightStyle = \"height:100px !important\";\n                }\n                this.showSmash = true;\n            } else {\n                if (this.showDropDown) {\n                    this.closeDropdown();\n                } else {\n                    this.openDropdown();\n                }\n            }\n        }\n    }\n\n    public blur(): void {\n        this._element.dispatchEvent(DOM.createCustomEvent(\"blur\", {\n            detail: {\n                value: this._element\n            },\n            bubbles: true\n        }));\n    }\n\n    public smashButtonsSetValue(selectedValue: string): void {\n        this.value = selectedValue;\n        this.showSmash = false;\n    }\n\n    public cancel(): void {\n        if (this.dropdownType === DropdownType.smashbuttons) {\n            this.selectAlphabetLetter(DropDown._SHOW_ALL_ITEMS);\n        }\n        this.showSmash = false;\n    }\n\n    public selectAlphabetLetter(alphabetLetter: string): void {\n\n        if (alphabetLetter === DropDown._SHOW_ALL_ITEMS) {\n            this.filteredValues = [...this.values];\n            this._selectedAlphabetLetter = alphabetLetter;\n            return;\n        }\n\n        if (this.alphabets[alphabetLetter].length > 0) {\n            this.filteredValues = this.alphabets[alphabetLetter];\n            this._selectedAlphabetLetter = alphabetLetter;\n        }\n    }\n\n    public get currentAlphabetLetter(): string {\n        return this._selectedAlphabetLetter;\n    }\n\n    @computedFrom(\"showSmash\", \"values\")\n    public get showCategories(): boolean {\n        const noItems = this.values ? this.values.length : 0;\n        return this.minItemsToCategoriseSmashButtons === -1 || noItems >= this.minItemsToCategoriseSmashButtons;\n    }\n\n    private checkForListValue(): void {\n        let foundPos: number = this.values.map((v: any) => {\n            return this.formatValueTextString(v._id - 1);\n        }).indexOf(this.valueText);\n\n        if (foundPos > -1) {\n            this.valueText = this.formatValueTextString(foundPos); // this.values[foundPos][this.textProperty];\n            this.value = this.values[foundPos][this.valueProperty];\n            this.item = this.values[foundPos];\n            this.valueItem = this.values[foundPos];\n        } else {\n            this.valueText = \"\";\n            this.value = undefined;\n            this.item = undefined;\n            this.valueItem = undefined;\n            this.filterCount = this.filteredValues.length;\n        }\n        this.closeDropdown();\n        this.resetFiltered();\n    }\n\n    private formatValueTextString(valueId: number): string {\n        if (this.formatTextValue && valueId > -1) {\n            let val = this.formatTextValue.replace(/\\((.+?)\\)/g, (match, idx) => {\n                return this.values[valueId][idx];\n            });\n\n            if (val.trim().indexOf(\"/\") === val.trim().length - 1) {\n                return this.values[valueId][this.textProperty];\n            }\n            return val;\n        } else if (valueId === -1) {\n            return \"\";\n        } else {\n            return this.values[valueId][this.textProperty];\n        }\n    }\n\n    private processValue(newValue: any): void {\n        if (this.values) {\n            let foundPos: number = this.values.map((v: any) => {\n                return v[this.valueProperty];\n            }).indexOf(newValue);\n\n            if (foundPos > -1 && !this.clearOnSelect) {\n                newValue = this.values[foundPos][this.valueProperty];\n                this.valueText = this.formatValueTextString(foundPos);\n                this.item = this.values[foundPos];\n            } else if (foundPos > -1 && this.clearOnSelect) {\n                newValue = this.values[foundPos][this.valueProperty];\n                this.valueText = \"\";\n                this.item = this.values[foundPos];\n            } else {\n                newValue = undefined;\n                this.valueText = \"\";\n                this.item = undefined;\n            }\n\n            this.closeDropdown();\n            this.resetFiltered();\n        }\n    }\n\n    private findItemHeight(): number {\n        let item: HTMLElement;\n        item = <HTMLElement>this.lookupItems.children[this.selectedId];\n        return item.offsetHeight;\n    }\n\n    private isDoubleHeightNeeded(items: any[], textProperty: string): boolean {\n        let result: boolean = false;\n        items.forEach(item => {\n            if (item[textProperty].length > 30) {\n                result = true;\n            }\n        });\n        return result;\n    }\n\n    private resetFiltered(): void {\n        this.filteredValues = [];\n        if (this.values && this.values.length > 0) {\n            this.values.forEach(value => {\n                if (!value[this.textProperty]) {\n                    value[this.textProperty] = value[this.valueProperty];\n                }\n                if (value[this.textProperty] && value[this.valueProperty]) {\n                    this.filteredValues.push(value);\n                }\n            });\n\n            // this.filteredValues.sort();\n        }\n    }\n\n    private addIdsToObjectArray(): void {\n        for (let index = 0; index < this.values.length; index++) {\n            let valueItem = this.values[index];\n            valueItem[DropDown._ID_PROPERTY] = index + 1;\n        }\n    }\n\n    private setupAlphabeticalKeys(): void {\n\n        if (this.dropdownType !== DropdownType.smashbuttons) {\n            return;\n        }\n\n        if (!this.values || this.values.length === 0) {\n            return;\n        }\n\n        // initialise alphabet categories used for smash buttons\n\n        this.alphabetKeys = DropDown._ALPHABET_ITEMS.split(\",\");\n        this.alphabets = {};\n\n        for (let ch of this.alphabetKeys) {\n            this.alphabets[ch] = [];\n        }\n        this._selectedAlphabetLetter = DropDown._SHOW_ALL_ITEMS;\n\n        this.values.forEach(v => {\n            if (v && v[this.textProperty] && v[this.textProperty].length > 0) {\n\n                const text = v[this.textProperty].trim(); // need to remove trailing spaces\n                const letter = text.charAt(0).toUpperCase();\n\n                if (this.alphabets[letter]) {\n                    this.alphabets[letter].push(v);\n                }\n            }\n        });\n    }\n}\n"],"sourceRoot":"../../.."}