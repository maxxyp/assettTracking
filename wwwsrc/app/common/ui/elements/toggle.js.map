{"version":3,"sources":["common/ui/elements/toggle.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;IAKrD;QAMI;YACI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACvB,CAAC;QAEM,4BAAW,GAAlB,UAAmB,QAAiB;YAChC,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,CAAC;QAZS;YADT,4BAAQ,CAAC,EAAE,kBAAkB,EAAE,+BAAW,CAAC,MAAM,EAAE,CAAC;YACpD,4BAAQ;;6CAAuB;QACtB;YAAT,4BAAQ;;kDAA2B;QAC1B;YAAT,4BAAQ;;mDAA4B;QAJ5B,MAAM;YADlB,iCAAa,CAAC,QAAQ,CAAC;;WACX,MAAM,CAelB;QAAD,aAAC;KAfD,AAeC,IAAA;IAfY,wBAAM","file":"toggle.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport {customElement, bindable, bindingMode} from \"aurelia-framework\";\n\n@customElement(\"toggle\")\nexport class Toggle {\n    @bindable({ defaultBindingMode: bindingMode.twoWay })\n    @bindable public value: boolean;\n    @bindable public isTrueText: string;\n    @bindable public isFalseText: string;\n\n    constructor() {\n        this.isTrueText = \"Yes\";\n        this.isFalseText = \"No\";\n        this.value = false;\n    }\n\n    public toggleClick(newValue: boolean): void {\n        this.value = newValue;\n    }\n}\n"],"sourceRoot":"../../.."}