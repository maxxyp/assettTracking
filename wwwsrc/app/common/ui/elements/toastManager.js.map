{"version":3,"sources":["common/ui/elements/toastManager.ts"],"names":[],"mappings":"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","file":"toastManager.js","sourcesContent":["import { customElement } from \"aurelia-templating\";\nimport { IToastItem } from \"./models/IToastItem\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { inject } from \"aurelia-dependency-injection\";\nimport { UiConstants } from \"./constants/uiConstants\";\nimport { Threading } from \"../../core/threading\";\nimport { ToastPosition } from \"./models/toastPosition\";\nimport { ISoundService } from \"../services/ISoundService\";\nimport { SoundService } from \"../services/soundService\";\n\nconst FADE_OUT_TIME = 900;\nconst ONE_SECOND_MS = 1000;\n\n@customElement(\"toast-manager\")\n@inject(EventAggregator, SoundService)\nexport class ToastManager {\n    public toasts: IToastItem[];\n    public toastPosition: string;\n\n    private _eventAggregator: EventAggregator;\n    private _lastCloseDelay: number;\n    private _lastFadeOutDelay: number;\n    private _soundService: ISoundService;\n\n    constructor(eventAggregator: EventAggregator, soundService: ISoundService) {\n        this.toasts = [];\n        this._eventAggregator = eventAggregator;\n        this._soundService = soundService;\n\n        this._eventAggregator.subscribe(UiConstants.TOAST_ADDED, (toast: IToastItem) => {\n            if (toast) {\n                let lastToast = this.toasts.length > 0 && this.toasts[0];\n                if (!toast.position) {\n                    this.toastPosition = ToastPosition[4];\n                } else {\n                    this.toastPosition = ToastPosition[toast.position];\n                }\n                if (lastToast && lastToast.content === toast.content) {\n                    if (this._lastCloseDelay) {\n                        Threading.stopDelay(this._lastCloseDelay);\n                        this.setUpDelay(lastToast);\n                    }\n                    if (this._lastFadeOutDelay) {\n                        Threading.stopDelay(this._lastFadeOutDelay);\n                    }\n                    return;\n                }\n                if (toast.notificationSound) {\n                    this._soundService.play(toast.notificationSound);\n                }\n                this.toasts.unshift(toast);\n                this.setUpDelay(toast);\n                this.setToastAction(toast);\n            }\n        });\n    }\n\n    public closeToast(toast: IToastItem): void {\n        toast.style += \" fade-out\";\n        this._lastFadeOutDelay = Threading.delay(() => {\n            let toastPos = this.toasts.indexOf(toast);\n            if (toastPos >= 0) {\n                this.toasts.splice(toastPos, 1);\n                if (toast.id) {\n                    this._eventAggregator.publish(UiConstants.TOAST_REMOVED, toast);\n                }\n            }\n        }, FADE_OUT_TIME);\n    }\n\n    private setUpDelay(toast: IToastItem): void {\n        const autoDismiss: boolean = toast.autoDismiss === undefined ? true : toast.autoDismiss;\n        if (autoDismiss && toast.dismissTime) {\n            this._lastCloseDelay = Threading.delay(() => this.closeToast(toast), toast.dismissTime * ONE_SECOND_MS);\n        }\n    }\n\n    private setToastAction(toast: IToastItem): void {\n        if (toast.toastAction) {\n            if (!toast.toastAction.label) {\n                toast.toastAction.label = \"Details\";\n            }\n            if (!toast.toastAction.action) {\n                toast.toastAction.isExpanded = false;\n                toast.toastAction.action = (t) => {\n                    if (t) {\n                        t.toastAction.isExpanded = !t.toastAction.isExpanded;\n                        Threading.stopDelay(this._lastCloseDelay);\n                    }\n                };\n            }\n        }\n    }\n}\n"],"sourceRoot":"../../.."}