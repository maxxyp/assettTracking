{"version":3,"sources":["common/ui/validators/isDateWithFormat.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;;IAKrD;QAAsC,oCAAc;QAChD,0BAAY,UAAkB;mBAC1B,kBACI,UAAU,EACV,UAAC,QAAgB,EAAE,gBAAwB;gBACvC,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;YAC1E,CAAC,EACD,sCAAsC,GAAG,UAAU,EACnD,gCAAgC,CACnC;QACL,CAAC;QACL,uBAAC;IAAD,CAXA,AAWC,CAXqC,mCAAc,GAWnD;IAXY,4CAAgB","file":"isDateWithFormat.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport * as moment from \"moment\";\nimport {ValidationRule} from \"aurelia-validation\";\n\nexport class IsDateWithFormat extends ValidationRule {\n    constructor(dateFormat: string) {\n        super(\n            dateFormat,\n            (newValue: string, dateStringFormat: string) => {\n                return newValue && moment(newValue, dateStringFormat, true).isValid();\n            },\n            \"This is not a valid date format for \" + dateFormat,\n            \"IsDateWithFormatValidationRule\"\n        );\n    }\n}\n"],"sourceRoot":"../../.."}