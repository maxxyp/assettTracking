{"version":3,"sources":["common/ui/views/about.ts"],"names":[],"mappings":"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","file":"about.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport {AssetService} from \"../../core/services/assetService\";\nimport {IAssetService} from \"../../core/services/IAssetService\";\nimport {inject, singleton} from \"aurelia-dependency-injection\";\nimport {AboutData} from \"./models/aboutData\";\nimport {ReleaseNote} from \"./models/releaseNote\";\nimport {PlatformHelper} from \"../../core/platformHelper\";\n\n@inject(AssetService)\n@singleton()\nexport class About {\n    public appName: string;\n    public version: string;\n    public buildType: string;\n    public description: string;\n    public copyright: string;\n    public releaseNotes: ReleaseNote[];\n    public additionalViewModels: {viewModel: string, model: any}[];\n\n    public toggleReleaseDetailState: boolean;\n    public toggleReleaseDetailIcon: \"minus\" | \"plus\";\n    public toggleReleaseDetailText: \"Hide Detail\" | \"Show Detail\";\n\n    private _assetService: IAssetService;\n\n    constructor(assetService: IAssetService) {\n        this._assetService = assetService;\n\n        this.appName =  \"\";\n        this.description =  \"\";\n        this.copyright = \"\";\n        this.version = PlatformHelper.appVersion;\n        this.buildType = PlatformHelper.buildType;\n        this.additionalViewModels = [];\n        this.toggleReleaseDetail(false);\n    }\n\n    public addViewModel(viewModel: string, model?: any): void {\n        this.additionalViewModels.push({ viewModel, model });\n    }\n\n    public attached(): Promise<void> {\n        return this._assetService.loadJson<AboutData>(\"about.json\")\n            .then((about: AboutData) => {\n                this.appName = about.name;\n                this.description = about.description;\n                this.copyright = about.copyright;\n                if (about.releaseNotes && about.releaseNotes.length > 0) {\n                    this.releaseNotes = about.releaseNotes\n                        .sort((rn1, rn2) => this.semVerCompareDesc(rn1.version, rn2.version));\n                }\n            });\n    }\n\n    public toggleReleaseDetail(force?: boolean): void {\n        this.toggleReleaseDetailState = force !== undefined ? force : !this.toggleReleaseDetailState;\n        this.toggleReleaseDetailIcon = this.toggleReleaseDetailState ? \"minus\" : \"plus\";\n        this.toggleReleaseDetailText = this.toggleReleaseDetailState ? \"Hide Detail\" : \"Show Detail\";\n    }\n\n    private semVerCompareDesc(a: string, b: string): number {\n        let i: number, diff: number;\n        let regExStrip0 = /(\\.0+)+$/;\n        let segmentsA = a.replace(regExStrip0, \"\").split(\"\");\n        let segmentsB = b.replace(regExStrip0, \"\").split(\"\");\n        let l = Math.min(segmentsB.length, segmentsA.length);\n\n        for (i = 0; i < l; i++) {\n            diff = parseInt(segmentsB[i], 10) - parseInt(segmentsA[i], 10);\n            if (diff) {\n                return diff;\n            }\n        }\n        return segmentsB.length - segmentsA.length;\n    }\n}\n"],"sourceRoot":"../../.."}