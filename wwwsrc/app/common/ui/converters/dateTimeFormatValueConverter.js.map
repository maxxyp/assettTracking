{"version":3,"sources":["common/ui/converters/dateTimeFormatValueConverter.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;IAIrD;QAAA;QAYA,CAAC;QAVU,6CAAM,GAAb,UAAc,KAAU,EAAE,MAAe;YACrC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACR,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACV,MAAM,GAAG,wBAAwB,CAAC;gBACtC,CAAC;gBACD,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QACL,mCAAC;IAAD,CAZA,AAYC,IAAA;IAZY,oEAA4B","file":"dateTimeFormatValueConverter.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport * as moment from \"moment\";\n\nexport class DateTimeFormatValueConverter {\n\n    public toView(value: any, format?: string): any {\n        if (value) {\n            if (!format) {\n                format = \"D MMMM YYYY [at] HH:mm\";\n            }\n            return moment(value).format(format);\n        } else {\n            return value;\n        }\n    }\n}\n"],"sourceRoot":"../../.."}