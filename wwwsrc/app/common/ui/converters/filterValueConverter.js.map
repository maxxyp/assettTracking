{"version":3,"sources":["common/ui/converters/filterValueConverter.ts"],"names":[],"mappings":";;;IAAA;QAAA;QAuCA,CAAC;QAtCU,qCAAM,GAAb,UAAc,KAAY,EAAE,QAAgB,EAAE,GAAW;YACrD,EAAE,CAAC,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,CAAC;gBACf,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACX,IAAI,mBAAiB,GAAa,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACjD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAS;wBAC1B,IAAI,WAAW,GAAG,CAAC,CAAC;wBACpB,GAAG,CAAC,CAAmB,UAAiB,EAAjB,sBAAA,mBAAiB,EAAjB,+BAAiB,EAAjB,IAAiB;4BAAnC,IAAI,UAAU,0BAAA;4BACf,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE;iCAC3B,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC1C,WAAW,EAAE,CAAC;4BAClB,CAAC;yBACJ;wBACD,EAAE,CAAC,CAAC,WAAW,KAAK,mBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;4BAC3C,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,MAAM,CAAC,KAAK,CAAC;wBACjB,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,mBAAiB,GAAa,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACjD,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,UAAC,IAAS;wBAC1B,IAAI,WAAW,GAAG,CAAC,CAAC;wBACpB,GAAG,CAAC,CAAmB,UAAiB,EAAjB,sBAAA,mBAAiB,EAAjB,+BAAiB,EAAjB,IAAiB;4BAAnC,IAAI,UAAU,0BAAA;4BACf,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE;iCACjC,OAAO,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gCAC1C,WAAW,EAAE,CAAC;4BAClB,CAAC;yBACJ;wBACD,EAAE,CAAC,CAAC,WAAW,KAAK,mBAAiB,CAAC,MAAM,CAAC,CAAC,CAAC;4BAC3C,MAAM,CAAC,IAAI,CAAC;wBAChB,CAAC;wBACD,MAAM,CAAC,KAAK,CAAC;oBACjB,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC;QACL,2BAAC;IAAD,CAvCA,AAuCC,IAAA;IAvCY,oDAAoB","file":"filterValueConverter.js","sourcesContent":["export class FilterValueConverter {\n    public toView(array: any[], property: string, exp: string): any[] {\n        if (array && exp) {\n            if (property) {\n                let splitSearchString: string[] = exp.split(\" \");\n                return array.filter((item: any): boolean => {\n                    let searchCount = 0;\n                    for (let searchItem of splitSearchString) {\n                        if (item[property].toLowerCase()\n                            .indexOf(searchItem.toLowerCase()) > -1) {\n                            searchCount++;\n                        }\n                    }\n                    if (searchCount === splitSearchString.length) {\n                        return true;\n                    } else {\n                        return false;\n                    }\n                });\n            } else {\n                let splitSearchString: string[] = exp.split(\" \");\n                return array.filter((item: any): boolean => {\n                    let searchCount = 0;\n                    for (let searchItem of splitSearchString) {\n                        if (JSON.stringify(item).toLowerCase()\n                            .indexOf(searchItem.toLowerCase()) > -1) {\n                            searchCount++;\n                        }\n                    }\n                    if (searchCount === splitSearchString.length) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n        } else {\n            return array;\n        }\n    }\n}\n"],"sourceRoot":"../../.."}