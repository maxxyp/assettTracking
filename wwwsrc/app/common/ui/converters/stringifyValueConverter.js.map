{"version":3,"sources":["common/ui/converters/stringifyValueConverter.ts"],"names":[],"mappings":";;;IAAA;QAAA;QA2BA,CAAC;QA1BU,wCAAM,GAAb,UAAc,CAAM;YAChB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACJ,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;gBAC3C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;gBAC/E,IAAI,GAAG,IAAI,CAAC,OAAO,CACf,wGAAwG,EACtG,UAAC,KAAK;oBACJ,IAAI,GAAG,GAAG,QAAQ,CAAC;oBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACnB,GAAG,GAAG,KAAK,CAAC;wBAChB,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,GAAG,GAAG,QAAQ,CAAC;wBACnB,CAAC;oBACL,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAClC,GAAG,GAAG,SAAS,CAAC;oBACpB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC5B,GAAG,GAAG,MAAM,CAAC;oBACjB,CAAC;oBACD,MAAM,CAAC,gBAAgB,GAAG,GAAG,GAAG,KAAK,GAAG,KAAK,GAAG,SAAS,CAAC;gBAC9D,CAAC,CAAC,CAAC;gBACP,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,EAAE,CAAC;YACd,CAAC;QACL,CAAC;QACL,8BAAC;IAAD,CA3BA,AA2BC,IAAA;IA3BY,0DAAuB","file":"stringifyValueConverter.js","sourcesContent":["export class StringifyValueConverter {\n    public toView(o: any): string {\n        if (o) {\n            let json = JSON.stringify(o, undefined, 4);\n            json = json.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n            json = json.replace(\n                /(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g\n                , (match) => {\n                    let cls = \"number\";\n                    if (/^\"/.test(match)) {\n                        if (/:$/.test(match)) {\n                            cls = \"key\";\n                        } else {\n                            cls = \"string\";\n                        }\n                    } else if (/true|false/.test(match)) {\n                        cls = \"boolean\";\n                    } else if (/null/.test(match)) {\n                        cls = \"null\";\n                    }\n                    return \"<span class=\\\"\" + cls + \"\\\">\" + match + \"</span>\";\n                });\n            return json;\n        } else {\n            return \"\";\n        }\n    }\n}\n"],"sourceRoot":"../../.."}