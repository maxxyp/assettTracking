{"version":3,"sources":["common/ui/attributes/timeOnly.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;;;;;;;;;;;IAQrD;QAA8B,4BAAa;QACvC,kBAAY,OAAyB;mBACjC,kBAAM,OAAO,CAAC;QAClB,CAAC;QAEM,mCAAgB,GAAvB,UAAwB,KAAqB;YACzC,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACxD,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QACpF,CAAC;QAEM,kCAAe,GAAtB,UAAuB,KAAoB;YACvC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,SAAS,GAAG,OAAO,KAAK,6BAAa,CAAC,OAAO,IAAI,OAAO,KAAK,6BAAa,CAAC,SAAS,CAAC;YAEzF,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACb,WAAW;gBACX,EAAE,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,KAAK,KAAK,GAAG,CAAC,CAAC,CAAC;oBAC5C,SAAS,GAAG,IAAI,CAAC;gBACrB,CAAC;YACL,CAAC;YAED,EAAE,CAAC,CAAC,SAAS,IAAI,OAAO,KAAK,6BAAa,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;gBAClF,SAAS,GAAG,KAAK,CAAC;YACtB,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QA1BQ,QAAQ;YAFpB,oCAAe,CAAC,WAAW,CAAC;YAC5B,qCAAM,CAAC,OAAO,CAAC;6CAES,gBAAgB;WAD5B,QAAQ,CA2BpB;QAAD,eAAC;KA3BD,AA2BC,CA3B6B,6BAAa,GA2B1C;IA3BY,4BAAQ","file":"timeOnly.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport {customAttribute} from \"aurelia-templating\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {AttributeBase} from \"./attributeBase\";\n\n@customAttribute(\"time-only\")\n@inject(Element)\nexport class TimeOnly extends AttributeBase {\n    constructor(element: HTMLInputElement) {\n        super(element);\n    }\n\n    public clipboardIsValid(event: ClipboardEvent): boolean {\n        let clipboardData = event.clipboardData.getData(\"Text\");\n        return /^\\d+$/.test(clipboardData) || (/^[0-9]*[:][0-9]+$/.test(clipboardData));\n    }\n\n    public eventKeyIsValid(event: KeyboardEvent): boolean {\n        let keyType = this.defineKeyType(event);\n        let isAllowed = keyType === AttributeBase.CONTROL || keyType === AttributeBase.NUMERICAL;\n\n        if (!isAllowed) {\n            /* Colon */\n            if (event.which === 16 || event.which === 186) {\n                isAllowed = true;\n            }\n        }\n\n        if (isAllowed && keyType === AttributeBase.NUMERICAL && this.exceedsMaxLength(5, 1)) {\n            isAllowed = false;\n        }\n\n        return isAllowed;\n    }\n}\n"],"sourceRoot":"../../.."}