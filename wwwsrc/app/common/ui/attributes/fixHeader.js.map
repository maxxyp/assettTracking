{"version":3,"sources":["common/ui/attributes/fixHeader.ts"],"names":[],"mappings":"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","file":"fixHeader.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\nimport { inject } from \"aurelia-framework\";\nimport { bindable, customAttribute } from \"aurelia-templating\";\nimport { IAssetService } from \"../../core/services/IAssetService\";\nimport { AssetService } from \"../../core/services/assetService\";\nimport { FixedHeaderConfigItem } from \"./models/fixedHeaderConfigItem\";\nimport { AttributeConstants } from \"./constants/attributeConstants\";\nimport { EventAggregator, Subscription } from \"aurelia-event-aggregator\";\nimport { Router } from \"aurelia-router\";\nimport { Threading } from \"../../core/threading\";\n\n // must be less than the aurelia dialog overlay z-index of 1000 otherwise it renders above dialogs\nconst Z_INDEX = 999;\n\n@customAttribute(\"fix-header\")\n@inject(Element, AssetService, EventAggregator, Router)\n\nexport class FixHeader {\n\n    public isFloating: boolean;\n    @bindable\n    public isAlt: boolean;\n\n    private _topOffset: number;\n    private _leftOffset: number;\n    private _rightOffset: number;\n    private _transitionTime: number;\n    private _enableForRoutePartial: string;\n\n    private _element: HTMLElement;\n    private _assetService: IAssetService;\n    private _eventAggregator: EventAggregator;\n    private _elementConfig: FixedHeaderConfigItem;\n    private _router: Router;\n    private _additionalStyle: string;\n    private _timer: number;\n    private _subscriptions: Subscription[];\n\n    constructor(element: HTMLElement, assetService: IAssetService, eventAggregator: EventAggregator, router: Router) {\n        this._assetService = assetService;\n        this._element = element;\n        this._topOffset = 0;\n        this._leftOffset = 0;\n        this._rightOffset = 0;\n        this._transitionTime = 0;\n        this.isFloating = false;\n        this._eventAggregator = eventAggregator;\n        this._router = router;\n        this._subscriptions = [];\n    }\n\n    public attached(): void {\n        this._assetService.loadJson<FixedHeaderConfigItem[]>(\"services/fixedHeader/fixedHeaderConfig.json\").then((config) => {\n            if (config) {\n                this._elementConfig = config.find(item => item.selector === this._element.id);\n                if (this._elementConfig) {\n                    this._topOffset = this._elementConfig.topOffset;\n                    this._leftOffset = this._elementConfig.leftOffset;\n                    this._rightOffset = this._elementConfig.rightOffset;\n                    this._additionalStyle = this._elementConfig.additionalStyle;\n                    this._enableForRoutePartial = this._elementConfig.enableForRoutePartial;\n                    this._transitionTime = this._elementConfig.transitionTime;\n                    this._element.setAttribute(\"style\", \"transition: all \" + this._transitionTime + \"ms ease-in-out; display:none;\");\n                    this._timer = Threading.startTimer(() => this.checkFreezeFrame(), 50);\n                    if (!this.isAlt) {\n                        this._topOffset = this._elementConfig.topOffset;\n                        this._leftOffset = this._elementConfig.leftOffset;\n                        this._rightOffset = this._elementConfig.rightOffset;\n                        this._transitionTime = this._elementConfig.transitionTime;\n                        this._additionalStyle = this._elementConfig.additionalStyle;\n                    } else {\n                        this._topOffset = this._elementConfig.altTopOffset;\n                        this._leftOffset = this._elementConfig.altLeftOffset;\n                        this._rightOffset = this._elementConfig.altRightOffset;\n                        this._transitionTime = this._elementConfig.transitionTime;\n                        this._additionalStyle = this._elementConfig.additionalStyle;\n                    }\n                }\n            }\n            this._subscriptions.push(this._eventAggregator.subscribe(\"router:navigation:success\", () => this.resetLayout()));\n            this._subscriptions.push(this._eventAggregator.subscribe(AttributeConstants.FULL_SCREEN_TOGGLE, (isAlt: boolean) => {\n\n                if (!isAlt) {\n                    this._topOffset = this._elementConfig.topOffset;\n                    this._leftOffset = this._elementConfig.leftOffset;\n                    this._rightOffset = this._elementConfig.rightOffset;\n                    this._transitionTime = this._elementConfig.transitionTime;\n                    this._additionalStyle = this._elementConfig.additionalStyle;\n                } else {\n                    this._topOffset = this._elementConfig.altTopOffset;\n                    this._leftOffset = this._elementConfig.altLeftOffset;\n                    this._rightOffset = this._elementConfig.altRightOffset;\n                    this._transitionTime = this._elementConfig.transitionTime;\n                    this._additionalStyle = this._elementConfig.additionalStyle;\n                }\n\n                this.isFloating = false;\n                this.resetLayout();\n                this.checkFreezeFrame();\n            }));\n        });\n\n    }\n\n    public detached(): void {\n        Threading.stopTimer(this._timer);\n        this._subscriptions.forEach(subscription => subscription.dispose());\n        this._subscriptions = [];\n    }\n\n    private resetLayout(): void {\n        this.isFloating = false;\n        let top = \" display: none; \";\n        this._element.setAttribute(\"style\", top);\n    }\n\n    private checkFragment(enableForRoutePartialList: string, extractedFragment: string): boolean {\n        let partialList = enableForRoutePartialList.split(\",\");\n        let result: boolean = false;\n        for (let partialCount = 0; partialCount < partialList.length; partialCount++) {\n            if (!!~extractedFragment.indexOf(partialList[partialCount], 0)) {\n                result = true;\n                break;\n            } else {\n                result = false;\n            }\n        }\n        return result;\n    }\n\n    private extractFragment(router: Router): string {\n        let fragmentParts = router.currentInstruction.fragment.split(\"/\");\n        if (fragmentParts.length === 1) {\n            return fragmentParts[0];\n        } else {\n\n            for (let fragmentCount = 0; fragmentCount < fragmentParts.length; fragmentCount++) {\n                if (Number(fragmentParts[fragmentCount]) || (fragmentParts[fragmentCount].length === 36 && fragmentParts[fragmentCount].indexOf(\"-\") === 8)) {\n                    fragmentParts[fragmentCount] = \"item\";\n                }\n            }\n            return fragmentParts.join(\"/\");\n        }\n    }\n    private updateStyle(setFixed: boolean): void {\n        if (this.checkFragment(this._elementConfig.enableForRoutePartial, this.extractFragment(this._router)) || !this._enableForRoutePartial) {\n            let top: string;\n            if (setFixed) {\n                top = \"z-index:\" + Z_INDEX + \"; position:fixed; top:\" + this._topOffset + \"px; left:\" + this._leftOffset + \"px; right:\"\n                    + this._rightOffset + \"px;transition: all \" + this._transitionTime + \"ms ease-in-out; \"\n                    + this._additionalStyle;\n            } else {\n                top = \" display: none; \"\n                    + this._additionalStyle;\n            }\n            this._element.setAttribute(\"style\", top);\n            this.isFloating = setFixed;\n        } else {\n            this.isFloating = false;\n        }\n    }\n\n    private checkFreezeFrame(): void {\n\n        if (this._element.nextElementSibling.getBoundingClientRect().top <= this._topOffset) {\n            this.updateStyle(true);\n        } else if (this._element.nextElementSibling.getBoundingClientRect().top  >= this._topOffset && this.isFloating) {\n            this.updateStyle(false);\n        }\n\n    }\n}\n"],"sourceRoot":"../../.."}