{"version":3,"sources":["common/ui/attributes/numericOnly.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;;;;;;;;;;;IASrD;QAAiC,+BAAa;QAU1C,qBAAY,OAAyB;YAArC,YACI,kBAAM,OAAO,CAAC,SAGjB;YADG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;QAC5B,CAAC;QAEM,sCAAgB,GAAvB,UAAwB,KAAqB;YACzC,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACxD,IAAI,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,mBAAmB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YAE5G,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACZ,IAAI,SAAS,GAAG,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,CAAC;gBAC/D,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;YACvE,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAEM,qCAAe,GAAtB,UAAuB,KAAoB;YACvC,IAAI,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,SAAS,GAAG,OAAO,KAAK,6BAAa,CAAC,OAAO,IAAI,OAAO,KAAK,6BAAa,CAAC,SAAS,CAAC;YAEzF,yDAAyD;YACzD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,OAAO,KAAK,6BAAa,CAAC,WAAW,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACnG,SAAS,GAAG,IAAI,CAAC;YACrB,CAAC;YAED,EAAE,CAAC,CAAC,SAAS,IAAI,CAAC,OAAO,KAAK,6BAAa,CAAC,SAAS,IAAI,OAAO,KAAK,6BAAa,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC9F,IAAI,SAAS,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;gBACnD,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;YACpD,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAEO,sCAAgB,GAAxB,UAAyB,SAAiB,EAAE,SAAiB;YACzD,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC;gBACrD,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC;gBAC3D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAC1D,CAAC;QACN,CAAC;QAhDD;YADC,6BAAQ;;uDACkB;QAE3B;YADC,6BAAQ;;sDACgB;QAEzB;YADC,6BAAQ;;0DACoB;QAE7B;YADC,6BAAQ;;wDACkB;QARlB,WAAW;YAFvB,oCAAe,CAAC,cAAc,CAAC;YAC/B,qCAAM,CAAC,OAAO,CAAC;6CAWS,gBAAgB;WAV5B,WAAW,CAmDvB;QAAD,kBAAC;KAnDD,AAmDC,CAnDgC,6BAAa,GAmD7C;IAnDY,kCAAW","file":"numericOnly.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport {customAttribute} from \"aurelia-templating\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {bindable} from \"aurelia-templating\";\nimport {AttributeBase} from \"./attributeBase\";\n\n@customAttribute(\"numeric-only\")\n@inject(Element)\nexport class NumericOnly extends AttributeBase {\n    @bindable\n    public allowFloat: boolean;\n    @bindable\n    public maxLength: number;\n    @bindable\n    public decimalPlaces: number;\n    @bindable\n    public wholePlaces: number;\n\n    constructor(element: HTMLInputElement) {\n        super(element);\n\n        this.allowFloat = false;\n    }\n\n    public clipboardIsValid(event: ClipboardEvent): boolean {\n        let clipboardData = event.clipboardData.getData(\"Text\");\n        let isAllowed = /^\\d+$/.test(clipboardData) || (this.allowFloat && /^[0-9]*[.][0-9]+$/.test(clipboardData));\n\n        if (isAllowed) {\n            let valueMask = this.valueMaskFromClipboardData(clipboardData);\n            isAllowed = this.inputLengthValid(clipboardData.length, valueMask);\n        }\n\n        return isAllowed;\n    }\n\n    public eventKeyIsValid(event: KeyboardEvent): boolean {\n        let keyType = this.defineKeyType(event);\n        let isAllowed = keyType === AttributeBase.CONTROL || keyType === AttributeBase.NUMERICAL;\n\n        /* One dot only for float, keyboard dot and numpad dot */\n        if (this.allowFloat && keyType === AttributeBase.DECIMALMARK && this._element.value.indexOf(\".\") < 0) {\n            isAllowed = true;\n        }\n\n        if (isAllowed && (keyType === AttributeBase.NUMERICAL || keyType === AttributeBase.DECIMALMARK)) {\n            let valueMask = this.valueMaskFromKeyType(keyType);\n            isAllowed = this.inputLengthValid(1, valueMask);\n        }\n\n        return isAllowed;\n    }\n\n    private inputLengthValid(addLength: number, valueMask: string): boolean {\n        return !(this.exceedsMaxLength(this.maxLength, addLength) ||\n            this.exceedsMaxDecimalPlaces(this.decimalPlaces, valueMask) ||\n            this.exceedsMaxWholePlaces(this.wholePlaces, valueMask)\n        );\n    }\n}\n"],"sourceRoot":"../../.."}