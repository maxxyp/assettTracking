{"version":3,"sources":["common/ui/attributes/attributeBase.ts"],"names":[],"mappings":"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","file":"attributeBase.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nexport abstract class AttributeBase {\n\n    public static NUMERICAL: string = \"numerical\";\n    public static DECIMALMARK: string = \"decimalmark\";\n    public static CONTROL: string = \"control\";\n\n    protected _element: HTMLInputElement;\n\n    private _keyDown: (event: KeyboardEvent) => void;\n    private _paste: (event: ClipboardEvent) => void;\n\n    constructor(element: HTMLInputElement) {\n        this._element = element;\n\n        this._keyDown = (event) => {\n            if (!this.eventKeyIsValid(event)) {\n                event.preventDefault();\n            }\n        };\n        this._paste = (event) => {\n            if (!this.clipboardIsValid(event)) {\n                event.preventDefault();\n            }\n        };\n    }\n\n    public attached(): void {\n        this._element.addEventListener(\"keydown\", this._keyDown);\n        this._element.addEventListener(\"paste\", this._paste);\n    }\n\n    public detached(): void {\n        this._element.removeEventListener(\"keydown\", this._keyDown);\n        this._element.removeEventListener(\"paste\", this._paste);\n    }\n\n    public abstract clipboardIsValid(event: ClipboardEvent): boolean;\n\n    public abstract eventKeyIsValid(event: KeyboardEvent): boolean;\n\n    protected defineKeyType(event: KeyboardEvent): string {\n        let keyType: string;\n        if (this.keyboardEventIsNumerical(event)) {\n            keyType = AttributeBase.NUMERICAL;\n        } else if (this.keyboardEventIsDecimalMark(event)) {\n            keyType = AttributeBase.DECIMALMARK;\n        } else if (this.keyboardEventIsControl(event)) {\n            keyType = AttributeBase.CONTROL;\n        }\n        return keyType;\n    }\n\n    protected exceedsMaxLength(maxLength: number, addLength: number): boolean {\n        return this.exceedsMax(this.numericalLengthOfElement(), maxLength, addLength);\n    }\n\n    protected exceedsMaxDecimalPlaces(maxLength: number, valueMask: string): boolean {\n        return maxLength && this.calculateDecimalPlaceValues(valueMask) > maxLength;\n    }\n\n    protected exceedsMaxWholePlaces(maxLength: number, valueMask: string): boolean {\n        return maxLength && this.calculateWholePlaceValues(valueMask) > maxLength;\n    }\n\n    protected keyboardEventIsNumerical(event: KeyboardEvent): boolean {\n        return (\n            (event.which >= 48 && event.which <= 57 && !event.shiftKey) || /* Digits */\n            (event.which >= 96 && event.which <= 105) /* NumPad */\n        );\n    }\n\n    protected keyboardEventIsDecimalMark(event: KeyboardEvent): boolean {\n        return (event.which === 190 || event.which === 110);\n    }\n\n    protected keyboardEventIsControl(event: KeyboardEvent): boolean {\n        return (event.which === 8 || /* Backspace */\n            event.which === 9 || /* Tab */\n            event.which === 46 || /* Delete */\n            event.which === 35 || /* End */\n            event.which === 36 || /* Home */\n            event.which === 37 || /* Left arrow */\n            event.which === 39 || /* right arrow */\n            (event.which === 67 && event.ctrlKey) || /* Ctrl-C copy */\n            (event.which === 88 && event.ctrlKey) || /* Ctrl-X cut */\n            (event.which === 86 && event.ctrlKey) || /* Ctrl-V paste */\n            (event.which === 65 && event.ctrlKey) || /* Ctrl-A select all */\n            (event.which === 45 && event.shiftKey) /* Shift-Insert paste */\n        );\n    }\n\n    protected valueMaskFromKeyType(keyType: string): string {\n        if (this._element && this._element.value !== undefined) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n\n            try {\n                selectionStart = this._element.selectionStart || this._element.value.length;\n                selectionEnd = this._element.selectionEnd || this._element.value.length;\n            } catch (e) {\n                selectionStart = this._element.value.length;\n                selectionEnd = this._element.value.length;\n            }\n\n            let firstPart = this._element.value.substring(0, selectionStart);\n            let lastPart = this._element.value.substring(selectionEnd, this._element.value.length);\n            let newKey = keyType === AttributeBase.DECIMALMARK ? \".\" : \"9\";\n            return firstPart + newKey + lastPart;\n        } else {\n            return \"\";\n        }\n    }\n\n    protected valueMaskFromClipboardData(clipboardData: string): string {\n        if (this._element && this._element.value !== undefined) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n\n            try {\n                selectionStart = this._element.selectionStart || this._element.value.length;\n                selectionEnd = this._element.selectionEnd || this._element.value.length;\n            } catch (e) {\n                selectionStart = this._element.value.length;\n                selectionEnd = this._element.value.length;\n            }\n            \n            let firstPart = this._element.value.substring(0, selectionStart);\n            let lastPart = this._element.value.substring(selectionEnd, this._element.value.length);\n            return firstPart + clipboardData + lastPart;\n        } else {\n            return \"\";\n        }\n    }\n\n    private exceedsMax(currentLength: number, maxLength: number, addLength: number): boolean {\n        let exceeds: boolean = false;\n\n        if (maxLength) {\n            let selectionLength = 0;\n\n            try {\n                selectionLength = this._element.selectionEnd && this._element.selectionStart ?\n                this._element.selectionEnd - this._element.selectionStart : 0;\n            } catch (e) {\n            }\n\n            let newLength: number;\n            if (selectionLength === 0) {\n                newLength = currentLength + addLength;\n            } else {\n                newLength = (currentLength - selectionLength) + addLength;\n            }\n\n            if (newLength > maxLength) {\n                exceeds = true;\n            }\n        }\n\n        return exceeds;\n    }\n\n    private numericalLengthOfElement(): number {\n        if (this._element && this._element.value !== undefined) {\n            return this._element.value.replace(/\\D/g, \"\").length;\n        } else {\n            return 0;\n        }\n    }\n\n    private calculateDecimalPlaceValues(value: string): number {\n        let actualDecimalPlaces = 0;\n\n        let decimalPointIndex = value.indexOf(\".\");\n        if (decimalPointIndex !== -1) {\n            actualDecimalPlaces = value.length - decimalPointIndex - 1;\n        }\n\n        return actualDecimalPlaces;\n    }\n\n    private calculateWholePlaceValues(value: string): number {\n        let actualWholePlaces = value.length;\n\n        let decimalPointIndex = value.indexOf(\".\");\n        if (decimalPointIndex !== -1) {\n            actualWholePlaces = decimalPointIndex;\n        }\n\n        return actualWholePlaces;\n    }\n}\n"],"sourceRoot":"../../.."}