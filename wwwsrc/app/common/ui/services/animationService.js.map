{"version":3,"sources":["common/ui/services/animationService.ts"],"names":[],"mappings":"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","file":"animationService.js","sourcesContent":["import { inject } from \"aurelia-framework\";\nimport { CssAnimator } from \"aurelia-animator-css\";\nimport { Threading } from \"../../../common/core/threading\";\nimport { IAnimationService } from \"./IAnimationService\";\n@inject(CssAnimator)\nexport class AnimationService implements IAnimationService {\n    private _cssAnimator: CssAnimator;\n    private _targetElement: HTMLElement;\n    private _itemArray: any[];\n    private _swipeDirection: string;\n    private _inClass: string;\n    private _outClass: string;\n    private _animationTime: number;\n    private _itemPosition: number;\n\n    constructor(cssAnimator: CssAnimator) {\n        this._cssAnimator = cssAnimator;\n    }\n    public swipe(element: HTMLElement,\n        itemArray: any[],\n        itemPosition: number,\n        swipeDirection: string,\n        inClass: string,\n        outClass: string,\n        animationTime = 300\n    ): Promise<number> {\n        return new Promise<number>((resolve, reject) => {\n            this._targetElement = element;\n            this._itemArray = itemArray;\n            this._itemPosition = itemPosition;\n            this._swipeDirection = swipeDirection;\n            this._inClass = inClass;\n            this._outClass = outClass;\n            this._animationTime = animationTime;\n            if (swipeDirection === \"left\") {\n                if (this._itemPosition >= 0 && this._itemPosition < this._itemArray.length - 1) {\n                    this.animateSwipe()\n                        .then(() => {\n                            this._itemPosition++;\n                            resolve(this._itemPosition);\n                        });\n                } else {\n                    this.animate(this._targetElement, \"shake-animation\", 300)\n                        .then(() => {\n                            reject();\n                        });\n                }\n            } else if (swipeDirection === \"right\") {\n                if (this._itemPosition > 0) {\n                    this.animateSwipe()\n                        .then(() => {\n                            this._itemPosition--;\n                            resolve(this._itemPosition);\n                        });\n                } else {\n                    this.animate(this._targetElement, \"shake-animation\", 300)\n                        .then(() => {\n                            reject();\n                        });\n                }\n            } else {\n                reject();\n            }\n        });\n    }\n    public animate(element: HTMLElement, animateClass: string, animationTime = 300): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this._cssAnimator.addClass(element, animateClass);\n            Threading.delay(() => {\n                this._cssAnimator.removeClass(element, animateClass);\n                resolve();\n            }, animationTime);\n        });\n    }\n\n    private animateSwipe(): Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            this._cssAnimator.removeClass(this._targetElement, this._swipeDirection);\n            this._cssAnimator.addClass(this._targetElement, this._outClass);\n            resolve();\n            Threading.delay(() => {\n                this._cssAnimator.removeClass(this._targetElement, this._outClass);\n                this._cssAnimator.addClass(this._targetElement, this._inClass);\n                Threading.delay(() => {\n                    this._cssAnimator.removeClass(this._targetElement, this._inClass);\n                }, this._animationTime);\n            }, this._animationTime);\n        });\n    }\n}\n"],"sourceRoot":"../../.."}