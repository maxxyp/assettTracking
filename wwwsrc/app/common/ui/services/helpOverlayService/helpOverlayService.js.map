{"version":3,"sources":["common/ui/services/helpOverlayService/helpOverlayService.ts"],"names":[],"mappings":"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","file":"helpOverlayService.js","sourcesContent":["import { observable, inject, TemplatingEngine } from \"aurelia-framework\";\r\nimport { Threading } from \"../../../core/threading\";\r\nimport { IAssetService } from \"../../../core/services/IAssetService\";\r\nimport { AssetService } from \"../../../core/services/assetService\";\r\nimport { HelpOverlayConfig } from \"./helpOverlayConfig\";\r\nimport { HelpOverlayStep } from \"./helpOverlayStep\";\r\nimport { Router } from \"aurelia-router\";\r\nimport { EventAggregator } from \"aurelia-event-aggregator\";\r\nimport { AnalyticsConstants } from \"../../../analytics/analyticsConstants\";\r\n\r\nconst TOGGLE_HELP_LABEL: string = \"Toggle Help\";\r\n\r\n@inject(TemplatingEngine, AssetService, EventAggregator, Router)\r\nexport class HelpOverlayService {\r\n    @observable\r\n    public stepNumber: number;\r\n    @observable\r\n    public steps: HelpOverlayStep[];\r\n    @observable\r\n    public currentStep: HelpOverlayStep;\r\n    @observable\r\n    public editedConfigString: string;\r\n    public helpActivated: boolean;\r\n    @observable\r\n    public showAllSteps: boolean;\r\n    @observable\r\n    public helpOverlayConfig: HelpOverlayConfig[];\r\n    @observable\r\n    public adminActivated: boolean;\r\n    private _templatingEngine: TemplatingEngine;\r\n    private _assetService: IAssetService;\r\n    private _parentID: number;\r\n    private _eventAggregator: EventAggregator;\r\n    private _fragmentArray: string[];\r\n\r\n    constructor(templatingEngine: TemplatingEngine, assetService: IAssetService, eventAggregator: EventAggregator, router: Router) {\r\n        this.stepNumber = 0;\r\n        this._parentID = 0;\r\n        this._templatingEngine = templatingEngine;\r\n        this._assetService = assetService;\r\n        this.helpActivated = false;\r\n        this._eventAggregator = eventAggregator;\r\n        this._eventAggregator.subscribe(\"router:navigation:complete\", () => this.handleRouteChanged(router));\r\n        this.loadHelpOverlayAssets().then((jsonSource) => {\r\n            if (jsonSource) {\r\n                this.helpOverlayConfig = jsonSource;\r\n            } else {\r\n                this.helpOverlayConfig = [];\r\n            }\r\n        });\r\n    }\r\n    public showAllStepsChanged(): void {\r\n        if (this.helpOverlayConfig) {\r\n            let pageConfigIndex: number = this.helpOverlayConfig.map((v: HelpOverlayConfig) => v.page).indexOf(this._fragmentArray.join(\"/\"));\r\n            this.helpOverlayConfig[pageConfigIndex].allSteps = this.showAllSteps;\r\n        }\r\n    }\r\n    public helpOverlayConfigChanged(): void {\r\n        if (this._fragmentArray) {\r\n            let helpOverlayConfigItem = this.helpOverlayConfig.find((s) => s.page === this._fragmentArray.join(\"/\"));\r\n            if (helpOverlayConfigItem) {\r\n                this.showAllSteps = helpOverlayConfigItem.allSteps;\r\n                this.steps = helpOverlayConfigItem.steps;\r\n                this.stepNumber = 0;\r\n                this._parentID = 0;\r\n                this.removeElements();\r\n                this.currentStep = helpOverlayConfigItem.steps[0];\r\n                if (this.showAllSteps) {\r\n                    this.processAllSteps();\r\n                } else {\r\n                    this.processNextStep(1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    public getNextStep(): void {\r\n        let onNextfunc: Function;\r\n        if (this.currentStep) {\r\n            if (this.currentStep.onNext) {\r\n                // check the okToClick class.\r\n                if (this.currentStep.onNextOkToClickClass) {\r\n                    let okToClickClassList: DOMTokenList = document.querySelector(this.currentStep.onNext).classList;\r\n                    if (okToClickClassList.contains(this.currentStep.onNextOkToClickClass)) {\r\n                        onNextfunc = new Function(\"document.querySelector(\\\"\" + this.currentStep.onNext + \"\\\")\" + this.currentStep.onNextAction);\r\n                        onNextfunc();\r\n                    }\r\n                } else {\r\n                    onNextfunc = new Function(\"document.querySelector(\\\"\" + this.currentStep.onNext + \"\\\")\" + this.currentStep.onNextAction);\r\n                    onNextfunc();\r\n                }\r\n            }\r\n            if (this.stepNumber < this.steps.length) {\r\n                this.processNextStep(1);\r\n            }\r\n        } else {\r\n            this.processNextStep(1);\r\n        }\r\n    }\r\n\r\n    public toggleHelp(): void {\r\n        this.helpActivated = !this.helpActivated;\r\n        this.stepNumber = 0;\r\n        this.removeElements();\r\n        if (this.helpActivated) {\r\n            if (this.showAllSteps) {\r\n                this.processAllSteps();\r\n            } else {\r\n                this.processNextStep(1);\r\n            }\r\n        }\r\n\r\n        this._eventAggregator.publish(AnalyticsConstants.ANALYTICS_EVENT, {\r\n            category: AnalyticsConstants.HELP_OVERLAY_CATEGORY,\r\n            action: AnalyticsConstants.CLICK_ACTION,\r\n            label: TOGGLE_HELP_LABEL,\r\n            metric: AnalyticsConstants.METRIC\r\n        });\r\n    }\r\n\r\n    public toggleHelpAdmin(): void {\r\n        this.adminActivated = !this.adminActivated;\r\n    }\r\n\r\n    public getPreviousStep(): void {\r\n        let onPreviousfunc: Function;\r\n        if (this.currentStep.onPrevious) {\r\n            // check the okToClick class.\r\n            if (this.currentStep.onPreviousOkToClickClass) {\r\n                let okToClickClassList: DOMTokenList = document.querySelector(this.currentStep.onPrevious).classList;\r\n                if (okToClickClassList.contains(this.currentStep.onPreviousOkToClickClass)) {\r\n                    onPreviousfunc = new Function(\"document.querySelector(\\\"\" + this.currentStep.onPrevious + \"\\\")\" + this.currentStep.onPreviousAction);\r\n                    onPreviousfunc();\r\n                }\r\n            } else {\r\n                onPreviousfunc = new Function(\"document.querySelector(\\\"\" + this.currentStep.onPrevious + \"\\\")\" + this.currentStep.onPreviousAction);\r\n                onPreviousfunc();\r\n            }\r\n        }\r\n        let testStep: HelpOverlayStep = this.steps[this.stepNumber - 2];\r\n        if (!testStep.parentStep) {\r\n            this.processNextStep(-1);\r\n        } else {\r\n\r\n            this.processNextStep(testStep.parentStep - this.currentStep.id);\r\n        }\r\n    }\r\n\r\n    public removeElements(): void {\r\n        let className = \"help-overlay\";\r\n        let elements = document.getElementsByTagName(className);\r\n        while (elements.length > 0) {\r\n            elements[0].parentNode.removeChild(elements[0]);\r\n        }\r\n    }\r\n\r\n    public addStep(newStep: HelpOverlayStep): void {\r\n        let helpOverlayConfigItem = this.helpOverlayConfig.find((s) => s.page === this._fragmentArray.join(\"/\"));\r\n        if (helpOverlayConfigItem) {\r\n            helpOverlayConfigItem.steps.push(newStep);\r\n        } else {\r\n            let newSteps: HelpOverlayStep[] = [];\r\n            newSteps.push(new HelpOverlayStep(1));\r\n            this.helpOverlayConfig.push(new HelpOverlayConfig(this._fragmentArray.join(\"/\"), newSteps));\r\n            helpOverlayConfigItem = this.helpOverlayConfig.find((s) => s.page === this._fragmentArray.join(\"/\"));\r\n        }\r\n        this.currentStep = helpOverlayConfigItem.steps[helpOverlayConfigItem.steps.length - 1];\r\n        this.stepNumber = helpOverlayConfigItem.steps.length;\r\n        this.steps = helpOverlayConfigItem.steps;\r\n        this.updateEditedConfigString();\r\n        this.processStep();\r\n    }\r\n\r\n    public removeStep(idToRemove: number): void {\r\n        let itemToRemoveArrayLocation: number;\r\n        let helpOverlayConfigItem = this.helpOverlayConfig.find((s) => s.page === this._fragmentArray.join(\"/\"));\r\n        // check for child steps\r\n        let childSteps = helpOverlayConfigItem.steps.filter((s) => ~~s.parentStep === idToRemove);\r\n        childSteps.forEach(stepItem => {\r\n            itemToRemoveArrayLocation = helpOverlayConfigItem.steps.map((v: HelpOverlayStep) => v.id).indexOf(stepItem.id);\r\n            helpOverlayConfigItem.steps.splice(itemToRemoveArrayLocation, 1);\r\n        });\r\n        itemToRemoveArrayLocation = helpOverlayConfigItem.steps.map((v: HelpOverlayStep) => v.id).indexOf(idToRemove);\r\n        helpOverlayConfigItem.steps.splice(itemToRemoveArrayLocation, 1);\r\n        this.stepNumber = Math.max(this.stepNumber - 1, 1);\r\n        this.currentStep = helpOverlayConfigItem.steps[Math.max(this.stepNumber - 1, 0)];\r\n        this.steps = helpOverlayConfigItem.steps;\r\n        this.reOrderIds();\r\n        this.updateEditedConfigString();\r\n        if (this.currentStep) {\r\n            this.processStep();\r\n        }\r\n    }\r\n\r\n    public insertStep(idToinsertAfter: number): void {\r\n        if (!idToinsertAfter) {\r\n            idToinsertAfter = 1;\r\n        }\r\n        let helpOverlayConfigItem = this.helpOverlayConfig.find((s) => s.page === this._fragmentArray.join(\"/\"));\r\n        helpOverlayConfigItem.steps.splice(idToinsertAfter, 0, new HelpOverlayStep(idToinsertAfter + 1));\r\n        this.currentStep = helpOverlayConfigItem.steps[idToinsertAfter];\r\n        this.steps = helpOverlayConfigItem.steps;\r\n        this.stepNumber = idToinsertAfter + 1;\r\n        this.reOrderIds();\r\n        this.updateEditedConfigString();\r\n        this.processStep();\r\n    }\r\n    public updateEditedConfigString(): void {\r\n        this.editedConfigString = JSON.stringify(this.helpOverlayConfig);\r\n    }\r\n\r\n    public processNextStep(direction: number, forceNext: boolean = false): void {\r\n        if (this.steps) {\r\n            this.stepNumber = Math.min(Math.max(this.stepNumber += direction, 1), this.steps.length);\r\n            this.checkStep(forceNext).then((nextOverlayStep: HelpOverlayStep) => {\r\n                this.currentStep = nextOverlayStep;\r\n                this.currentStep.showCircle = true;\r\n                this.processStep();\r\n                if (!this.currentStep.parentStep) {\r\n                    this._parentID = this.currentStep.id;\r\n                }\r\n            }).catch(() => {\r\n                if (this.stepNumber > 0 && this.stepNumber < this.steps.length) {\r\n                    this.processNextStep(direction);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    private reOrderIds(): void {\r\n        for (let index = 0; index < this.steps.length; index++) {\r\n            let step: HelpOverlayStep = this.steps[index];\r\n            step.id = index + 1;\r\n        }\r\n    }\r\n    private handleRouteChanged(router: Router): void {\r\n        this._fragmentArray = router.currentInstruction.fragment.split(\"/\").slice(1);\r\n        for (let i = 0; i < this._fragmentArray.length; i++) {\r\n            /* if the fragmet contains digits then treat it as an id based on the previous item */\r\n            if (/\\d/.test(this._fragmentArray[i]) && i >= 1) {\r\n                let previous = this._fragmentArray[i - 1];\r\n                if (previous.charAt(previous.length - 1) === \"s\") {\r\n                    previous = previous.substr(0, previous.length - 1);\r\n                }\r\n                this._fragmentArray[i] = previous + \"details\";\r\n            }\r\n        }\r\n        if (this.helpOverlayConfig) {\r\n            let helpOverlayConfig = this.helpOverlayConfig.find((s) => s.page === this._fragmentArray.join(\"/\"));\r\n            if (helpOverlayConfig) {\r\n                this.steps = helpOverlayConfig.steps;\r\n                this.showAllSteps = helpOverlayConfig.allSteps;\r\n                this.stepNumber = 0;\r\n                this._parentID = 0;\r\n                this.removeElements();\r\n                if (this.helpActivated) {\r\n                    if (this.showAllSteps) {\r\n                        this.processAllSteps();\r\n                    } else {\r\n                        this.processNextStep(1);\r\n                    }\r\n                }\r\n            } else {\r\n                this.currentStep = undefined;\r\n                this.steps = undefined;\r\n                this.removeElements();\r\n            }\r\n        }\r\n    }\r\n\r\n    private processStep(): void {\r\n        if (!this.showAllSteps) {\r\n            this.removeElements();\r\n            try {\r\n                let newOverlayElement = this.createHelpOverlay(this.currentStep.selector);\r\n                if (newOverlayElement && this.currentStep.parentScollSelector) {\r\n                    this.scrollToStepLocation(newOverlayElement).then(() => this._templatingEngine.enhance(newOverlayElement));\r\n                } else {\r\n                    this._templatingEngine.enhance(newOverlayElement);\r\n                }\r\n            } catch (e) {\r\n                // swallow the error. this may happen if navigating is forced when the element cannot display.\r\n            }\r\n        }\r\n    }\r\n\r\n    private loadHelpOverlayAssets(): Promise<HelpOverlayConfig[]> {\r\n        return this._assetService.loadJson<HelpOverlayConfig[]>(\"services/helpOverlay/overlayConfig.json\");\r\n    }\r\n\r\n    private scrollToStepLocation(overLayElement: Element): Promise<void> {\r\n        /* tslint:disable:promise-must-complete */\r\n        return new Promise<void>((resolve, reject) => {\r\n            let positionToScrollTo: number;\r\n            let currentPosition: number;\r\n            currentPosition = document.querySelector(this.currentStep.parentScollSelector).scrollTop;\r\n            positionToScrollTo = overLayElement.getBoundingClientRect().top;\r\n            if (currentPosition < positionToScrollTo) {\r\n                let scrollThread = Threading.startTimer(() => {\r\n                    if (currentPosition < positionToScrollTo - this.currentStep.scrollOffset) {\r\n                        currentPosition = currentPosition + 7;\r\n                        document.querySelector(this.currentStep.parentScollSelector).scrollTop = currentPosition;\r\n                    } else {\r\n                        Threading.stopTimer(scrollThread);\r\n                        resolve();\r\n                    }\r\n                }, 1);\r\n            } else {\r\n                let scrollThread = Threading.startTimer(() => {\r\n                    if (currentPosition > positionToScrollTo + ~~this.currentStep.scrollOffset) {\r\n                        currentPosition = currentPosition - 7;\r\n                        document.querySelector(this.currentStep.parentScollSelector).scrollTop = currentPosition;\r\n                    } else {\r\n                        Threading.stopTimer(scrollThread);\r\n                        resolve();\r\n                    }\r\n                }, 1);\r\n            }\r\n        });\r\n        /* tslint:enable:promise-must-complete */\r\n    }\r\n\r\n    private checkStep(forceNext: boolean = false): Promise<HelpOverlayStep> {\r\n        let testStepNumber: number = this.stepNumber;\r\n        let testStep: HelpOverlayStep = this.steps[testStepNumber - 1];\r\n        if (this._parentID === ~~testStep.parentStep || !testStep.parentStep || forceNext) {\r\n            return this.elementCheck(testStep, forceNext);\r\n        }\r\n        return Promise.reject(testStep);\r\n    }\r\n\r\n    private elementCheck(testStep: HelpOverlayStep, forceNext: boolean): Promise<HelpOverlayStep> {\r\n        return new Promise<HelpOverlayStep>((resolve, reject) => {\r\n            let elapsedTime: number = 0;\r\n            if (testStep.selectorWaitTimeout && !forceNext) {\r\n                let timer = Threading.startTimer(() => {\r\n                    if (elapsedTime < testStep.selectorWaitTimeout) {\r\n                        if (document.querySelector(testStep.selector)) {\r\n                            Threading.stopTimer(timer);\r\n                            resolve(testStep);\r\n                        }\r\n                    } else {\r\n                        Threading.stopTimer(timer);\r\n                        reject();\r\n                    }\r\n                    elapsedTime = elapsedTime + 10;\r\n                }, 10);\r\n            } else {\r\n                if (document.querySelector(testStep.selector) || forceNext) {\r\n                    resolve(testStep);\r\n                } else {\r\n                    reject();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private processAllSteps(): void {\r\n        this.removeElements();\r\n        this.pushOverlaySteps().then((promises) => {\r\n            this.stepNumber = 0;\r\n            this.processNextStep(1);\r\n        }).catch((promises) => {\r\n            this.stepNumber = 0;\r\n            this.processNextStep(1);\r\n        });\r\n    }\r\n    private pushOverlaySteps(): Promise<any> {\r\n        let promiseArray: Promise<HelpOverlayStep>[] = [];\r\n        if (this.steps) {\r\n            for (let stepCount = 1; stepCount <= this.steps.length; stepCount++) {\r\n                let step: HelpOverlayStep = this.steps[stepCount - 1];\r\n                promiseArray.push(this.elementCheck(step, false));\r\n            }\r\n        }\r\n        return Promise.each(promiseArray, ((step) => {\r\n            this.stepNumber = step.id;\r\n            let newOverlayElement = this.createHelpOverlay(step.selector);\r\n            this._templatingEngine.enhance(newOverlayElement);\r\n        }));\r\n\r\n    }\r\n\r\n    private createHelpOverlay(selector: string): Element {\r\n        let newElement: Element;\r\n        let el = document.createElement(\"help-overlay\");\r\n        return newElement = <Element>document.querySelector(selector).appendChild(el);\r\n    }\r\n}\r\n"],"sourceRoot":"../../../.."}