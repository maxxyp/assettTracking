{"version":3,"sources":["common/ui/services/helpOverlayService/helpOverlay.ts"],"names":[],"mappings":";;;;;;;;;;;;IAMA;QAMI,qBAAY,kBAAsC,EAAE,eAAgC;YAApF,iBAMC;YALG,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;YAC7C,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,UAAU,GAAG,CAAC,CAAC;YAC5D,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,eAAe,EAAE,CAAC,UAAC,EAAU,IAAO,KAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC9F,CAAC;QAEM,8BAAQ,GAAf,UAAgB,CAAQ;YACpB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,eAAe,EAAE,CAAC;YACxB,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;QAC1C,CAAC;QAEM,kCAAY,GAAnB,UAAoB,CAAQ;YACxB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,eAAe,EAAE,CAAC;YACxB,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,eAAe,EAAE,CAAC;QAC9C,CAAC;QAEM,iCAAW,GAAlB,UAAmB,CAAQ;YACvB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACJ,CAAC,CAAC,eAAe,EAAE,CAAC;YACxB,CAAC;QACL,CAAC;QACM,mCAAa,GAApB;YACI,IAAI,CAAC,WAAW,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC;YACrC,IAAI,CAAC,kBAAkB,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;YAC5D,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,eAAe,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;YACvE,CAAC;QACL,CAAC;QACO,6BAAO,GAAf,UAAgB,QAAgB;YAC5B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;YAC7B,CAAC;QACL,CAAC;QAxCD;YADC,8BAAU;;0DACkB;QAJpB,WAAW;YAFvB,0BAAM,CAAC,uCAAkB,EAAE,0CAAe,CAAC;YAC3C,iCAAa,CAAC,cAAc,CAAC;6CAOM,uCAAkB,EAAmB,0CAAe;WAN3E,WAAW,CA6CvB;QAAD,kBAAC;KA7CD,AA6CC,IAAA;IA7CY,kCAAW","file":"helpOverlay.js","sourcesContent":["import { customElement } from \"aurelia-framework\";\nimport { observable, inject } from \"aurelia-framework\";\nimport { HelpOverlayService } from \"./helpOverlayService\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\n@inject(HelpOverlayService, EventAggregator)\n@customElement(\"help-overlay\")\nexport class HelpOverlay {\n    public showContent: boolean;\n    public helpOverlayService: HelpOverlayService;\n    @observable\n    public stepArrayItem: number;\n    private _eventAggregator: EventAggregator;\n    constructor(helpOverlayService: HelpOverlayService, eventAggregator: EventAggregator) {\n        this.helpOverlayService = helpOverlayService;\n        this.showContent = false;\n        this.stepArrayItem = this.helpOverlayService.stepNumber - 1;\n        this._eventAggregator = eventAggregator;\n        this._eventAggregator.subscribe(\"openedOverlay\", ((id: number) => { this.closeMe(id); }));\n    }\n\n    public nextStep(e: Event): void {\n        if (e) {\n            e.stopPropagation();\n        }\n        this.helpOverlayService.getNextStep();\n    }\n\n    public previousStep(e: Event): void {\n        if (e) {\n            e.stopPropagation();\n        }\n        this.helpOverlayService.getPreviousStep();\n    }\n\n    public manageClick(e: Event): void {\n        if (e) {\n            e.stopPropagation();\n        }\n    }\n    public toggleContent(): void {\n        this.showContent = !this.showContent;\n        this.helpOverlayService.stepNumber = this.stepArrayItem + 1;\n        if (this.showContent) {\n            this._eventAggregator.publish(\"openedOverlay\", this.stepArrayItem);\n        }\n    }\n    private closeMe(openedId: number): void {\n        if (this.stepArrayItem !== openedId) {\n            this.showContent = false;\n        }\n    }\n}   \n"],"sourceRoot":"../../../.."}