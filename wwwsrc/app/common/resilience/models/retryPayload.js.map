{"version":3,"sources":["common/resilience/models/retryPayload.ts"],"names":[],"mappings":";;;IAEA;QAAA;QAiCA,CAAC;QAhBiB,qBAAQ,GAAtB,UAAuB,GAAQ;YAC3B,IAAI,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;YAEtC,MAAM,CAAC,MAAM,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;YAEjC,YAAY,CAAC,WAAW,GAAG,uBAAU,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACvE,YAAY,CAAC,UAAU,GAAG,uBAAU,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACrE,YAAY,CAAC,aAAa,GAAG,uBAAU,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAE3E,gGAAgG;YAChG,+DAA+D;YAC/D,YAAY,CAAC,yBAAyB,GAAG,YAAY,CAAC,yBAAyB,IAAI,CAAC,CAAC;YACrF,YAAY,CAAC,sBAAsB,GAAG,YAAY,CAAC,sBAAsB,IAAI,CAAC,CAAC;YAC/E,YAAY,CAAC,WAAW,GAAG,YAAY,CAAC,WAAW,IAAI,IAAI,IAAI,EAAE,CAAC;YAClE,MAAM,CAAC,YAAY,CAAC;QACxB,CAAC;QACL,mBAAC;IAAD,CAjCA,AAiCC,IAAA;IAjCY,oCAAY","file":"retryPayload.js","sourcesContent":["import {IHttpHeader} from \"../../core/IHttpHeader\";\nimport { DateHelper } from \"../../../hema/core/dateHelper\";\nexport class RetryPayload {\n    public correlationId: string;\n    public httpMethod: \"GET\" | \"POST\" | \"PUT\";\n    public createdTime: Date;\n    public expiryTime: Date;\n    public lastRetryTime: Date;\n    public routeName: string;\n    public headers: IHttpHeader[];\n    public params: { [id: string]: any };\n    public data: any;\n    public isRetrying: boolean;\n    \n    public lastFailureMessage: string;\n    public lastKnownFailureStatus: string;\n    public failureWithStatusCount: number;\n    public failureWithoutStatusCount: number;\n\n    public static fromJson(raw: any): RetryPayload {\n        let retryPayload = new RetryPayload();\n\n        Object.assign(retryPayload, raw);\n\n        retryPayload.createdTime = DateHelper.convertDateTime(raw.createdTime);\n        retryPayload.expiryTime = DateHelper.convertDateTime(raw.expiryTime);\n        retryPayload.lastRetryTime = DateHelper.convertDateTime(raw.lastRetryTime);\n\n        // for backwards compatibility (if we have old versions of RetryPayload in storage they will not\n        //  have the counts initialised, so ensure initialisation here)\n        retryPayload.failureWithoutStatusCount = retryPayload.failureWithoutStatusCount || 0;\n        retryPayload.failureWithStatusCount = retryPayload.failureWithStatusCount || 0;\n        retryPayload.createdTime = retryPayload.createdTime || new Date();\n        return retryPayload;\n    }\n}\n"],"sourceRoot":"../../.."}