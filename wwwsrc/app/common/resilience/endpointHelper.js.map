{"version":3,"sources":["common/resilience/endpointHelper.ts"],"names":[],"mappings":";;;IAIA;QAAA;QAyCA,CAAC;QAxCiB,oCAAqB,GAAnC,UAAoC,oBAA2C,EAAE,aAAuB;YACpG,IAAI,WAAW,GAAW,CAAC,EACvB,eAAe,GAAW,CAAC,CAAC;YAEhC,IAAI,MAAM,GAAG,oBAAoB,CAAC,gBAAgB,EAAE,CAAC;YAErD,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;oBAChB,aAAa,CAAC,OAAO,CAAC,UAAA,YAAY;wBAC9B,IAAI,qBAAqB,GAAa,cAAc,CAAC,0BAA0B,CAAC,2BAAY,CAAC,YAAY,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC;wBAEjI,EAAE,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC;4BACxB,WAAW,IAAI,qBAAqB,CAAC,CAAC,CAAC,CAAC;4BACxC,eAAe,IAAI,qBAAqB,CAAC,CAAC,CAAC,CAAC;wBAChD,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC;YAED,MAAM,CAAC,EAAC,WAAW,aAAA,EAAE,eAAe,iBAAA,EAAC,CAAC;QAC1C,CAAC;QAEa,yCAA0B,GAAxC,UAAyC,qBAA6C;YAClF,IAAI,eAAe,GAAa,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAEvC,EAAE,CAAC,CAAC,qBAAqB;gBACrB,qBAAqB,CAAC,OAAO;gBAC7B,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC;gBAE/B,eAAe,CAAC,CAAC,CAAC,IAAI,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC;gBAE1D,IAAI,WAAS,GAAG,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,YAAY,EAA5B,CAA4B,CAAC,CAAC;gBAE3F,EAAE,CAAC,CAAC,WAAS,CAAC,CAAC,CAAC;oBACZ,eAAe,CAAC,CAAC,CAAC,IAAI,qBAAqB,CAAC,MAAM,CAAC,MAAM,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,MAAM,KAAK,WAAS,CAAC,IAAI,EAA/B,CAA+B,CAAC,CAAC,MAAM,CAAC;gBAC/G,CAAC;YACL,CAAC;YAED,MAAM,CAAC,eAAe,CAAC;QAC3B,CAAC;QACL,qBAAC;IAAD,CAzCA,AAyCC,IAAA;IAzCY,wCAAc","file":"endpointHelper.js","sourcesContent":["import {IConfigurationService} from \"../core/services/IConfigurationService\";\nimport {IEndpointConfiguration} from \"./models/IEndpointConfiguration\";\nimport {ObjectHelper} from \"../core/objectHelper\";\n\nexport class EndpointHelper {\n    public static appRequiresSimulation(configurationService: IConfigurationService, endpointNames: string[]): { totalRoutes: number, simulatedRoutes: number} {\n        let totalRoutes: number = 0,\n            simulatedRoutes: number = 0;\n\n        let config = configurationService.getConfiguration();\n\n        if (config) {\n            if (endpointNames) {\n                endpointNames.forEach(endpointName => {\n                    let singleSimulationCount: number[] = EndpointHelper.endpointRequiresSimulation(ObjectHelper.getPathValue(config, endpointName));\n\n                    if (singleSimulationCount) {\n                        totalRoutes += singleSimulationCount[0];\n                        simulatedRoutes += singleSimulationCount[1];\n                    }\n                });\n            }\n        }\n\n        return {totalRoutes, simulatedRoutes};\n    }\n\n    public static endpointRequiresSimulation(endpointConfiguration: IEndpointConfiguration): number[] {\n        let simulationCount: number[] = [0, 0];\n\n        if (endpointConfiguration &&\n            endpointConfiguration.clients &&\n            endpointConfiguration.routes) {\n\n            simulationCount[0] += endpointConfiguration.routes.length;\n\n            let simClient = endpointConfiguration.clients.find(client => client.type === \"simulation\");\n\n            if (simClient) {\n                simulationCount[1] += endpointConfiguration.routes.filter(route => route.client === simClient.name).length;\n            }\n        }\n\n        return simulationCount;\n    }\n}\n"],"sourceRoot":"../.."}