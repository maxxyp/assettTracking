{"version":3,"sources":["common/geo/google/googleMapsService.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;;IAOrD;QAAuC,qCAAuC;QAC1E;mBACI,kBAAM,mBAAmB,EAAE,mBAAmB,CAAC;QACnD,CAAC;QAEM,2CAAe,GAAtB,UAAuB,MAA4B,EAAE,WAAiC;YAClF,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,MAAM;gBACjC,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YACtD,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,qCAAS,GAAhB,UAAiB,QAA8B;YAC3C,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,MAAM;gBAChC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,4CAAgB,GAAvB,UAAwB,MAA4B,EAAE,WAAiC;YACnF,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,MAAM;gBAChC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,0CAAc,GAArB,UAAsB,OAAe;YACjC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,MAAM;gBACjC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACzC,CAAC,CAAC,CAAC;QACP,CAAC;QACL,wBAAC;IAAD,CA5BA,AA4BC,CA5BsC,yCAAmB,GA4BzD;IA5BY,8CAAiB","file":"googleMapsService.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport {DistanceTime} from \"../../geo/models/distanceTime\";\nimport {IGoogleMapsService} from \"./IGoogleMapsService\";\nimport {GeoPosition} from \"../../geo/models/geoPosition\";\nimport {PlatformServiceBase} from \"../../core/platformServiceBase\";\n\nexport class GoogleMapsService extends PlatformServiceBase<IGoogleMapsService> implements IGoogleMapsService {\n    constructor() {\n        super(\"common/geo/google\", \"GoogleMapsService\");\n    }\n\n    public getDistanceTime(origin: string | GeoPosition, destination: string | GeoPosition): Promise<DistanceTime> {\n        return this.loadModule().then(module => {\n           return module.getDistanceTime(origin, destination);\n        });\n    }\n\n    public launchMap(location: string | GeoPosition): Promise<void> {\n        return this.loadModule().then(module => {\n            return module.launchMap(location);\n        });\n    }\n\n    public launchDirections(origin: string | GeoPosition, destination: string | GeoPosition): Promise<void> {\n        return this.loadModule().then(module => {\n            return module.launchDirections(origin, destination);\n        });\n    }\n\n    public getGeoPosition(address: string): Promise<GeoPosition> {\n        return this.loadModule().then(module => {\n           return module.getGeoPosition(address);\n        });\n    }\n}\n"],"sourceRoot":"../../.."}