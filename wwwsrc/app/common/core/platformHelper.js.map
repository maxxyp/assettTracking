{"version":3,"sources":["common/core/platformHelper.ts"],"names":[],"mappings":"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","file":"platformHelper.js","sourcesContent":["/// <reference path=\"../../../typings/app.d.ts\" />\n\nexport class PlatformHelper {\n    public static navigatorAppVersion: string;\n    public static navigatorPlatform: string;\n    public static loaderPrefix: string = \"\";\n    public static isDevelopment: boolean;\n    public static isSource: boolean;\n    public static appVersion: string;\n    public static buildType: string;\n    private static _platform: string;\n\n    public static initNavigatorPlatform() : void {\n        if (!PlatformHelper.navigatorPlatform) {\n            PlatformHelper.navigatorPlatform = navigator.platform;\n        }\n    }\n\n    public static initNavigatorAppVersion() : void {\n        if (!PlatformHelper.navigatorAppVersion) {\n            PlatformHelper.navigatorAppVersion = navigator.appVersion;\n        }\n    }\n\n    public static getPlatform(): string {\n        PlatformHelper.initNavigatorPlatform();\n        PlatformHelper.initNavigatorAppVersion();\n\n        if (!PlatformHelper._platform) {\n            PlatformHelper._platform = \"web\";\n\n            if (/Electron/.test(PlatformHelper.navigatorAppVersion)) {\n                PlatformHelper._platform = \"electron\";\n            } else if (/MSAppHost/.test(PlatformHelper.navigatorAppVersion)) {\n                PlatformHelper._platform = \"wua\";\n            }  else if (/iPad|iPhone|iPod/.test(PlatformHelper.navigatorPlatform)) {\n                PlatformHelper._platform = \"ios\";\n            }\n        }\n\n        return PlatformHelper._platform;\n    }\n\n    public static resetPlatform(): void {\n        PlatformHelper._platform = null;\n    }\n\n    public static appRoot(): string {\n        return PlatformHelper.isRequreJs() ? \"./\" : \"./app/\";\n    }\n\n    public static wwwRoot(): string {\n        return PlatformHelper.isSource ? \"wwwsrc\" : \"www\";\n    }\n\n    public static isRequreJs(): boolean {\n        return typeof window.require === \"function\" ? true : false;\n    }\n\n    public static isMobile(): boolean {\n        return this.getPlatform() === \"wua\" &&\n            window.Windows &&\n            window.Windows.Foundation &&\n            window.Windows.Foundation.Metadata &&\n            window.Windows.Foundation.Metadata.ApiInformation &&\n            window.Windows.Foundation.Metadata.ApiInformation.isTypePresent(\"Windows.Phone.UI.Input.HardwareButtons\");\n    }\n\n    public static isCordova(): boolean {\n        return window.cordova ? true : false;\n    }\n\n    public static isWua(): boolean {\n        return PlatformHelper._platform === \"wua\";\n    }\n\n    public static cordovaVersion(): string {\n        return window.cordova ? window.cordova.version : \"\";\n    }\n\n    public static cordovaPlatformId(): string {\n        return window.cordova ? window.cordova.platformId : \"\";\n    }\n\n    public static loadModule(folder: string, name: string): Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (folder && name) {\n                let platform: string = PlatformHelper.getPlatform();\n\n                if (PlatformHelper.isRequreJs()) {\n                    window.require([folder + \"/\" + platform + \"/\" + name],\n                        (module: any) => {\n                            resolve(module);\n                        },\n                        (error: any) => {\n                            reject();\n                        });\n                } else {\n                    window.System.normalize(folder + \"/\" + name, null)\n                          .then((normalizedName: string) => {\n                              window.System.import(\"./\" + platform + \"/\" + name, normalizedName)\n                                    .then((module: any) => {\n                                        resolve(module);\n                                    }).catch(() => {\n                                  reject();\n                              });\n                          });\n                }\n            } else {\n                reject();\n            }\n        });\n    }\n\n}\n"],"sourceRoot":"../.."}