{"version":3,"sources":["common/core/models/baseException.ts"],"names":[],"mappings":";;;IAEA;QAUI,uBAAY,OAAY,EAAE,SAAiB,EAAE,OAAe,EAAE,UAAiB,EAAE,IAAS;YACtF,IAAI,CAAC,OAAO,GAAG,2BAAY,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;YAClD,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAE7B,EAAE,CAAC,CAAC,IAAI,YAAY,aAAa,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACrB,CAAC;YAED,IAAI,KAAK,GAAW,EAAE,CAAC;YACvB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC/B,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,KAAK,GAAG,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC;YAChC,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACR,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAEpC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC/C,CAAC;YACL,CAAC;QACL,CAAC;QAEa,uCAAyB,GAAvC,UAAwC,aAA4B;YAChE,IAAI,KAAK,GAAa,EAAE,CAAC;YAEzB,EAAE,CAAC,CAAC,aAAa,CAAC,OAAO,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnD,KAAK,CAAC,IAAI,CAAC,2BAAY,CAAC,YAAY,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,aAAa,CAAC,SAAS,CAAC,CAAC;YAClG,CAAC;YACD,EAAE,CAAC,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC;gBACxB,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,aAAa,CAAC,OAAO,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;YACpG,CAAC;YAED,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;gBACrB,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBAC7B,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;gBAC3C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;gBACnD,CAAC;YACL,CAAC;YAED,EAAE,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;gBAC3B,aAAa,CAAC,UAAU,CAAC,OAAO,CAAC,UAAA,EAAE;oBAC/B,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;gBACnB,CAAC,CAAC,CAAC;YACP,CAAC;YAED,EAAE,CAAC,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;gBAC/B,KAAK,CAAC,IAAI,CAAC,mEAAmE,CAAC,CAAC;gBAChF,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC,CAAC;YAC7E,CAAC;YAED,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAClC,CAAC;QAEa,kCAAoB,GAAlC,UAAmC,OAAe,EAAE,UAAiB;YACjE,MAAM,CAAC,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,UAAU,EAAE,UAAC,KAAK,EAAE,GAAG;gBAClE,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QACjB,CAAC;QAED,sBAAW,0CAAe;iBAA1B;gBACI,IAAI,OAAO,GAAW,GAAG,CAAC;gBAC1B,IAAI,CAAC;oBACD,IAAI,SAAS,GAAQ,IAAI,CAAC;oBAC1B,OAAO,SAAS,IAAI,SAAS,YAAY,aAAa,EAAE,CAAC;wBACrD,IAAI,cAAc,GAAkB,SAAS,CAAC;wBAC9C,OAAO,IAAI,aAAa,CAAC,oBAAoB,CAAC,cAAc,CAAC,OAAO,EAAE,cAAc,CAAC,UAAU,CAAC,GAAG,GAAG,CAAC;wBACvG,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC;oBACzC,CAAC;gBACL,CAAC;gBAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAEf,CAAC;gBACD,MAAM,CAAC,OAAO,CAAC;YACnB,CAAC;;;WAAA;QAEM,gCAAQ,GAAf;YACI,MAAM,CAAC,aAAa,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;QACzD,CAAC;QACL,oBAAC;IAAD,CA9FA,AA8FC,IAAA;IA9FY,sCAAa","file":"baseException.js","sourcesContent":["import {ObjectHelper} from \"../objectHelper\";\n\nexport class BaseException {\n    public context: string;\n    public reference: string;\n    public message: string;\n    public parameters: any[];\n    public data: any;\n    public stackTrace: string[];\n\n    public innerException: BaseException;\n\n    constructor(context: any, reference: string, message: string, parameters: any[], data: any) {\n        this.context = ObjectHelper.getClassName(context);\n        this.reference = reference;\n        this.message = message;\n        this.parameters = parameters;\n\n        if (data instanceof BaseException) {\n            this.innerException = data;\n        } else {\n            this.data = data;\n        }\n\n        let stack: string = \"\";\n        if (this.data && this.data.stack) {\n            stack = this.data.stack;\n        } else {\n            stack = new Error(\"\").stack;\n        }\n\n        if (stack) {\n            this.stackTrace = stack.split(\"\\n\");\n\n            if (stack.length > 3) {\n                this.stackTrace = this.stackTrace.slice(3);\n            }\n        }\n    }\n\n    public static exceptionToStringInternal(baseException: BaseException) : string {\n        let parts: string[] = [];\n\n        if (baseException.context && baseException.reference) {\n            parts.push(ObjectHelper.getClassName(baseException.context) + \"::\" + baseException.reference);\n        }\n        if (baseException.message) {\n            parts.push(BaseException.substituteParameters(baseException.message, baseException.parameters));\n        }\n\n        if (baseException.data) {\n            if (baseException.data.message) {\n                parts.push(baseException.data.message);\n            } else {\n                parts.push(JSON.stringify(baseException.data));\n            }\n        }\n\n        if (baseException.stackTrace) {\n            baseException.stackTrace.forEach(st => {\n                parts.push(st);\n            });\n        }\n\n        if (baseException.innerException) {\n            parts.push(\"-----------------------------------------------------------------\");\n            parts.push(this.exceptionToStringInternal(baseException.innerException));\n        }\n\n        return parts.join(\"\\r\\n\\r\\n\");\n    }\n\n    public static substituteParameters(message: string, parameters: any[]) : string {\n        return message && parameters ? message.replace(/{(\\d+)}/g, (match, idx) => {\n            return parameters[idx];\n        }) : message;\n    }\n\n    public get resolvedMessage(): string {\n        let message: string = \" \";\n        try {\n            let exception: any = this;\n            while (exception && exception instanceof BaseException) {\n                let typedException = <BaseException>exception;\n                message += BaseException.substituteParameters(typedException.message, typedException.parameters) + \" \";\n                exception = exception.innerException;\n            }\n        } catch (err) {\n\n        }\n        return message;\n    }\n\n    public toString() : string {\n        return BaseException.exceptionToStringInternal(this);\n    }\n}\n"],"sourceRoot":"../../.."}