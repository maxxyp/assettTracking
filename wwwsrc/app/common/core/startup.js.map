{"version":3,"sources":["common/core/startup.ts"],"names":[],"mappings":"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","file":"startup.js","sourcesContent":["/// <reference path=\"../../../typings/app.d.ts\" />\n\nimport \"whatwg-fetch\";\nimport * as Logging from \"aurelia-logging\";\nimport {UriSchemeService} from \"./services/uriSchemeService\";\nimport {Aurelia} from \"aurelia-framework\";\nimport {PlatformHelper} from \"./platformHelper\";\nimport {IConfigurationService} from \"./services/IConfigurationService\";\nimport {ConfigurationService} from \"./services/configurationService\";\nimport {ErrorHandler} from \"./errorHandler\";\nimport { LoggerService } from \"./services/loggerService\";\nimport { ILogConfiguration } from \"./services/ILogConfiguration\";\nimport { ILoggerService } from \"./services/ILoggerService\";\n\nexport class Startup {\n    public static configure(aurelia: Aurelia, resources: string[], plugins: string[]) : Promise<Aurelia> {\n\n        PlatformHelper.isDevelopment = window.appIsDevelopment ? window.appIsDevelopment : false;\n        PlatformHelper.appVersion = window.appVersion ? window.appVersion : \"<local>\";\n        PlatformHelper.buildType = window.appBuildType ? window.appBuildType : \"dev\";\n        PlatformHelper.isSource = window.appIsSource ? window.appIsSource : false;\n\n        aurelia.use\n               .defaultBindingLanguage()\n               .defaultResources()\n               .router()\n               .eventAggregator()\n               .plugin(\"aurelia-validation\")\n               .plugin(\"aurelia-dialog\", (config: any) => {\n                   config.useDefaults().useCSS(\"\");\n               });\n\n        if (resources) {\n            for (let i = 0; i < resources.length; i++) {\n                aurelia.use.globalResources(PlatformHelper.appRoot() + resources[i]);\n            }\n        }\n\n        if (plugins) {\n            for (let i = 0; i < plugins.length; i++) {\n                aurelia.use.plugin(plugins[i]);\n            }\n        }\n\n        if (PlatformHelper.getPlatform() === \"wua\") {\n            aurelia.use.plugin(PlatformHelper.appRoot() + \"common/core/plugins/historyWua/index\");\n        } else {\n            aurelia.use.history();\n        }\n\n        let configService: IConfigurationService = aurelia.container.get(ConfigurationService);\n        let uriSchemeService: UriSchemeService = aurelia.container.get(UriSchemeService);\n\n        return ErrorHandler.init(aurelia)\n                .then(() => configService.load())\n                .then(() => aurelia.start())\n                .then(() => {\n                    let loggerService = <ILoggerService>aurelia.container.get(LoggerService);\n                    return loggerService.initialize(aurelia, configService.getConfiguration<ILogConfiguration>());\n                })\n                .then(() => {\n                    let logger: Logging.Logger = Logging.getLogger(\"Platform\");\n                    logger.debug(\"Platform: \" + PlatformHelper.getPlatform());\n                    logger.debug(\"Is Cordova: \" + PlatformHelper.isCordova());\n                    logger.debug(\"Is Mobile: \" + PlatformHelper.isMobile());\n                    if (PlatformHelper.isCordova()) {\n                        logger.debug(\"Cordova Version: \" + PlatformHelper.cordovaVersion());\n                        logger.debug(\"Cordova Platform Id: \" + PlatformHelper.cordovaPlatformId());\n                    }\n                    logger.debug(\"Screen Width: \" + window.innerWidth);\n                    logger.debug(\"Screen Height: \" + window.innerHeight);\n                    logger.warn(\"App Version: \" + PlatformHelper.appVersion);\n\n                    uriSchemeService.registerPlatform();\n                    uriSchemeService.navigateToInitialRoute();\n\n                    return aurelia;\n                })\n                .then(() => aurelia.setRoot());\n    }\n}\n"],"sourceRoot":"../.."}