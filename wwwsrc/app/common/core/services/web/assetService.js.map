{"version":3,"sources":["common/core/services/web/assetService.ts"],"names":[],"mappings":"AAAA,wDAAwD;;;;;;;;;;;;;IASxD;QAGI,sBAAY,UAAuB;YAC/B,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAClC,CAAC;QAEM,+BAAQ,GAAf,UAAgB,SAAiB;YAAjC,iBAUC;YATG,MAAM,CAAC,IAAI,OAAO,CAAS,UAAC,OAAO;gBAC/B,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,+BAAc,CAAC,YAAY,GAAG,WAAW,GAAG,SAAS,CAAC;qBACxE,IAAI,CAAC,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;qBAC7C,IAAI,CAAC,UAAC,IAAY;oBACf,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC,KAAK,CAAC;oBACL,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,sCAAe,GAAtB,UAAuB,SAAiB;YAAxC,iBAWC;YAVG,MAAM,CAAC,IAAI,OAAO,CAAc,UAAC,OAAO;gBACpC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,+BAAc,CAAC,YAAY,GAAG,WAAW,GAAG,SAAS,CAAC;qBACxE,IAAI,CAAC,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,WAAW,EAAE,EAAtB,CAAsB,CAAC;qBACpD,IAAI,CAAC,UAAC,WAAwB;oBAC3B,OAAO,CAAC,WAAW,CAAC,CAAC;gBACzB,CAAC,CAAC;qBACD,KAAK,CAAC;oBACH,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,+BAAQ,GAAf,UAAmB,SAAiB;YAApC,iBAWC;YAVG,MAAM,CAAC,IAAI,OAAO,CAAI,UAAC,OAAO;gBAC1B,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,+BAAc,CAAC,YAAY,GAAG,WAAW,GAAG,SAAS,CAAC;qBACxE,IAAI,CAAC,UAAC,QAAkB,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;qBAC7C,IAAI,CAAC,UAAC,IAAO;oBACV,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC;qBACD,KAAK,CAAC;oBACH,OAAO,CAAC,IAAI,CAAC,CAAC;gBAClB,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QA3CQ,YAAY;YADxB,0BAAM,CAAC,uBAAU,CAAC;;WACN,YAAY,CA4CxB;QAAD,mBAAC;KA5CD,AA4CC,IAAA;IA5CY,oCAAY","file":"assetService.js","sourcesContent":["/// <reference path=\"../../../../../typings/app.d.ts\" />\n\nimport {inject} from \"aurelia-framework\";\nimport {IAssetService} from \"../IAssetService\";\nimport {HttpClient} from \"../../httpClient\";\nimport {IHttpClient} from \"../../IHttpClient\";\nimport {PlatformHelper} from \"../../platformHelper\";\n\n@inject(HttpClient)\nexport class AssetService implements IAssetService {\n    private _httpClient: IHttpClient;\n\n    constructor(httpClient: IHttpClient) {\n        this._httpClient = httpClient;\n    }\n\n    public loadText(assetName: string): Promise<string> {\n        return new Promise<string>((resolve) => {\n            this._httpClient.fetch(PlatformHelper.loaderPrefix + \"./assets/\" + assetName)\n                .then((response: Response) => response.text())\n                .then((text: string) => {\n                    resolve(text);\n                }).catch(() => {\n                    resolve(null);\n                });\n            });\n    }\n\n    public loadArrayBuffer(assetName: string): Promise<ArrayBuffer> {\n        return new Promise<ArrayBuffer>((resolve) => {\n            this._httpClient.fetch(PlatformHelper.loaderPrefix + \"./assets/\" + assetName)\n                .then((response: Response) => response.arrayBuffer())\n                .then((arrayBuffer: ArrayBuffer) => {\n                    resolve(arrayBuffer);\n                })\n                .catch(() => {\n                    resolve(null);\n                });\n        });\n    }\n\n    public loadJson<T>(assetName: string): Promise<T> {\n        return new Promise<T>((resolve) => {\n            this._httpClient.fetch(PlatformHelper.loaderPrefix + \"./assets/\" + assetName)\n                .then((response: Response) => response.json())\n                .then((json: T) => {\n                    resolve(json);\n                })\n                .catch(() => {\n                    resolve(null);\n                });\n        });\n    }\n}\n"],"sourceRoot":"../../../.."}