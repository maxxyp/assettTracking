{"version":3,"sources":["common/core/services/web/loggerService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAQA;QAAA;QAUA,CAAC;QARgB,kCAAU,GAAvB,UAAwB,OAAgB,EAAE,MAAyB;;;oBAC/D,8BAAU,CAAC,WAAW,CAAC,IAAI,yCAAe,EAAE,CAAC,CAAC;oBAC9C,8BAAU,CAAC,WAAW,CAAC,wCAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,2CAAoB,CAAC,CAAC,CAAC;;;;SACxE;QAEM,+BAAO,GAAd;YACI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC/B,CAAC;QACL,oBAAC;IAAD,CAVA,AAUC,IAAA;IAVY,sCAAa","file":"loggerService.js","sourcesContent":["import { LogManager, Aurelia } from \"aurelia-framework\";\nimport { ILoggerService } from \"../ILoggerService\";\nimport { Log } from \"../models/log\";\nimport { ILogConfiguration } from \"../ILogConfiguration\";\nimport {ConsoleAppender} from \"aurelia-logging-console\";\nimport { Container } from \"aurelia-dependency-injection\";\nimport { AnalyticsLogAppender } from \"../../../analytics/analyticsLogAppender\";\n\nexport class LoggerService implements ILoggerService {\n\n    public async initialize(aurelia: Aurelia, config: ILogConfiguration): Promise<void> {\n        LogManager.addAppender(new ConsoleAppender());\n        LogManager.addAppender(Container.instance.get(AnalyticsLogAppender));\n    }\n\n    public getLogs(): Promise<Log[]> {\n        return Promise.resolve([]);\n    }\n}\n"],"sourceRoot":"../../../.."}