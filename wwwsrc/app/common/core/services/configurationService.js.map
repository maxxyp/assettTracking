{"version":3,"sources":["common/core/services/configurationService.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;;IAMrD;QAA0C,wCAA0C;QAEhF;mBACI,kBAAM,sBAAsB,EAAE,sBAAsB,CAAC;QACzD,CAAC;QAEM,+CAAgB,GAAvB,UAA2B,SAAkB;YACzC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAI,SAAS,CAAC,CAAC;QACxD,CAAC;QAEM,mCAAI,GAAX;YACI,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,MAAM;gBAChC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAK,CAAC;YAC5B,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,+CAAgB,GAAvB,UAAwB,QAA8B;YAClD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;gBACtD,MAAM,IAAI,6BAAa,CAAC,IAAI,EAAE,sBAAsB,EAAE,2EAA2E,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;YACjJ,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;QACpD,CAAC;QACL,2BAAC;IAAD,CAtBA,AAsBC,CAtByC,yCAAmB,GAsB5D;IAtBY,oDAAoB","file":"configurationService.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport {IConfigurationService} from \"./IConfigurationService\";\nimport {PlatformServiceBase} from \"../platformServiceBase\";\nimport { BaseException } from \"../models/baseException\";\n\nexport class ConfigurationService extends PlatformServiceBase<IConfigurationService> implements IConfigurationService {\n\n    constructor() {\n        super(\"common/core/services\", \"ConfigurationService\");\n    }\n\n    public getConfiguration<T>(childName?: string): T {\n        return this._service.getConfiguration<T>(childName);\n    }\n\n    public load<T>(): Promise<T> {\n        return this.loadModule().then(module => {\n            return module.load<T>();\n        });\n    }\n\n    public overrideSettings(settings: {[key: string]: any}): void {\n        if (!this._service || !this._service.getConfiguration()) {\n            throw new BaseException(this, \"ConfigurationService\", \"Overriding configuration settings before the base configuration is loaded\", [], null);\n        }\n        return this._service.overrideSettings(settings);\n    }\n}\n"],"sourceRoot":"../../.."}