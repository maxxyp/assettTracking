{"version":3,"sources":["common/core/services/browserLocalStorage.ts"],"names":[],"mappings":";;;IAEA;QAEI;QACA,CAAC;QAEM,iCAAG,GAAV,UAAc,SAAiB,EAAE,GAAY;YAA7C,iBASC;YARG,MAAM,CAAC,IAAI,OAAO,CAAI,UAAC,OAAO,EAAE,MAAM;gBAClC,IAAI,GAAG,GAAM,IAAI,CAAC;gBAClB,IAAI,IAAI,GAAW,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;gBAC5E,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;oBACP,GAAG,GAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC9B,CAAC;gBACD,OAAO,CAAC,GAAG,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,iCAAG,GAAV,UAAc,SAAiB,EAAE,GAAY,EAAE,IAAQ;YAAvD,iBAKC;YAJG,MAAM,CAAC,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;gBACrC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,KAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC/E,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,oCAAM,GAAb,UAAc,SAAiB,EAAE,GAAY;YAA7C,iBAKC;YAJG,MAAM,CAAC,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;gBACrC,MAAM,CAAC,YAAY,CAAC,UAAU,CAAC,KAAI,CAAC,MAAM,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;gBAC5D,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,mCAAK,GAAZ;YACI,MAAM,CAAC,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;gBACrC,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,CAAC;gBAC5B,OAAO,EAAE,CAAC;YACd,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,oCAAM,GAAd,UAAe,SAAiB,EAAE,GAAY;YAC1C,MAAM,CAAC,SAAS,GAAG,GAAG,GAAG,GAAG,CAAC;QACjC,CAAC;QACL,0BAAC;IAAD,CAxCA,AAwCC,IAAA;IAxCY,kDAAmB","file":"browserLocalStorage.js","sourcesContent":["import { IStorage } from \"./IStorage\";\n\nexport class BrowserLocalStorage implements IStorage {\n\n    constructor() {\n    }\n\n    public get<T>(container: string, key : string) : Promise<T> {\n        return new Promise<T>((resolve, reject) => {\n            let ret: T = null;\n            let data: string = window.localStorage.getItem(this.calcId(container, key));\n            if (data) {\n                ret = <T>JSON.parse(data);\n            }\n            resolve(ret);\n        });\n    }\n\n    public set<T>(container: string, key : string, data : T) : Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            window.localStorage.setItem(this.calcId(container, key), JSON.stringify(data));\n            resolve();\n        });\n    }\n\n    public remove(container: string, key : string) : Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            window.localStorage.removeItem(this.calcId(container, key));\n            resolve();\n        });\n    }\n\n    public clear() : Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            window.localStorage.clear();\n            resolve();\n        });\n    }\n\n    private calcId(container: string, key : string) : string {\n        return container + \"_\" + key;\n    }\n}\n"],"sourceRoot":"../../.."}