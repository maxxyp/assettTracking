{"version":3,"sources":["common/core/services/ios/uriSchemeService.ts"],"names":[],"mappings":";;;IAEA;QAAA;QAYA,CAAC;QAVU,2CAAgB,GAAvB,UAAwB,iBAAyC;YAC7D,MAAM,CAAC,aAAa,GAAG,UAAC,GAAW;gBAC/B,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzB,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC;oBACxF,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACjC,iBAAiB,CAAC,OAAO,CAAC,CAAC;oBAC/B,CAAC;gBACL,CAAC;YACL,CAAC,CAAC;QACN,CAAC;QACL,uBAAC;IAAD,CAZA,AAYC,IAAA;IAZY,4CAAgB","file":"uriSchemeService.js","sourcesContent":["import {IUriSchemeService} from \"../IUriSchemeService\";\n\nexport class UriSchemeService implements IUriSchemeService {\n    \n    public registerPlatform(handleUriCallback: (path: string) => void): void {\n        window.handleOpenURL = (uri: string) => {\n            if (uri.indexOf(\":/\") > -1) {\n                let uriPath = uri.replace(uri.substring(0, uri.indexOf(\":/\") + 2).replace(\"#\", \"\"), \"\");\n                if (handleUriCallback && !!uriPath) {\n                    handleUriCallback(uriPath);\n                }\n            }\n        };\n    }\n}\n"],"sourceRoot":"../../../.."}