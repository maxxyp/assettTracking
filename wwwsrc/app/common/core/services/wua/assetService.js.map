{"version":3,"sources":["common/core/services/wua/assetService.ts"],"names":[],"mappings":"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","file":"assetService.js","sourcesContent":["/// <reference path=\"../../../../../typings/app.d.ts\" />\n\nimport {IAssetService} from \"../IAssetService\";\nimport {PlatformHelper} from \"../../platformHelper\";\n\nexport class AssetService implements IAssetService {\n\n    public loadText(assetName: string): Promise<string> {\n        return new Promise<string>((resolve) => {\n            Windows.ApplicationModel.Package.current.installedLocation\n                   .getFileAsync(PlatformHelper.wwwRoot() + \"\\\\assets\\\\\" + assetName.replace(/\\//g, \"\\\\\")).then(\n                (fileInFolder) => {\n                    Windows.Storage.FileIO.readBufferAsync(fileInFolder).then(\n                        (buffer) => {\n                            let dataReader = Windows.Storage.Streams.DataReader.fromBuffer(buffer);\n                            resolve(dataReader.readString(buffer.length));\n                        },\n                        (error) => {\n                            resolve(null);\n                        }\n                    );\n                },\n                (error) => {\n                    resolve(null);\n                }\n            );\n        });\n    }\n\n    public loadArrayBuffer(assetName: string): Promise<ArrayBuffer> {\n        return new Promise<ArrayBuffer>((resolve) => {\n            Windows.ApplicationModel.Package.current.installedLocation\n                   .getFileAsync(PlatformHelper.wwwRoot() + \"\\\\assets\\\\\" + assetName.replace(/\\//g, \"\\\\\")).then(\n                (fileInFolder) => {\n                    Windows.Storage.FileIO.readBufferAsync(fileInFolder).then(\n                        (buffer) => {\n                            let dataReader = Windows.Storage.Streams.DataReader.fromBuffer(buffer);\n                            let arr = new Array(buffer.length);\n                            dataReader.readBytes(arr);\n                            resolve(new Int8Array(arr));\n                        },\n                        (error) => {\n                            resolve(null);\n                        }\n                    );\n                },\n                (error) => {\n                    resolve(null);\n                }\n            );\n        });\n    }\n\n    public loadJson<T>(assetName: string): Promise<T> {\n        return new Promise<T>((resolve) => {\n            Windows.ApplicationModel.Package.current.installedLocation\n                   .getFileAsync(PlatformHelper.wwwRoot() + \"\\\\assets\\\\\" + assetName.replace(/\\//g, \"\\\\\")).then(\n                (fileInFolder) => {\n                    Windows.Storage.FileIO.readBufferAsync(fileInFolder).then(\n                        (buffer) => {\n                            let jsonData: any = null;\n                            let dataReader = Windows.Storage.Streams.DataReader.fromBuffer(buffer);\n                            try {\n                                jsonData = JSON.parse(dataReader.readString(buffer.length));\n                            } catch (err) {\n                                // handle catch?\n                            }\n                            resolve(jsonData);\n                        },\n                        (error) => {\n                            resolve(null);\n                        }\n                    );\n                },\n                (error) => {\n                    resolve(null);\n                }\n            );\n        });\n    }\n}\n"],"sourceRoot":"../../../.."}