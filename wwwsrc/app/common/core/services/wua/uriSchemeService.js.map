{"version":3,"sources":["common/core/services/wua/uriSchemeService.ts"],"names":[],"mappings":";;;IAGA,IAAM,UAAU,GAAW,YAAY,CAAC;IAExC;QAAA;QAqCA,CAAC;QAnCU,2CAAgB,GAAvB,UAAwB,iBAAsB;YAA9C,iBAwBC;YAtBG,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO;gBACd,MAAM,CAAC,OAAO,CAAC,EAAE;gBACjB,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK;gBACvB,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC3C,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,WAAW,EACjE,UAAC,IAAuF;oBACpF,IAAI,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,EAAH,CAAG,CAAC,CAAC;oBAChD,EAAE,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC;wBACvB,IAAI,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC;wBACvC,IAAI,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,UAAU,GAAG,KAAK,CAAC;wBACnD,IAAI,aAAa,GAAG,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC;wBACxC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;4BAChB,IAAI,IAAI,GAAG,cAAc,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;4BAC9F,EAAE,CAAC,CAAC,iBAAiB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gCAC9B,IAAI,WAAW,GAAG,2BAAY,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gCACtD,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,MAAM,IAAI,KAAI,CAAC,YAAY,EAAE,CAAC,CAAC;gCAC9E,iBAAiB,CAAC,IAAI,CAAC,CAAC;4BAC5B,CAAC;wBACL,CAAC;oBACL,CAAC;gBACL,CAAC,CAAC,CAAC;YACX,CAAC;QACL,CAAC;QAEO,uCAAY,GAApB;YACI,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,cAAc,CAAC,iBAAiB,EAAE,CAAC,mBAAmB,KAAK,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,mBAAmB,CAAC,KAAK,CAAC;QAC5J,CAAC;QAEO,wCAAa,GAArB,UAAsB,UAAmB;YACrC,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,cAAc,CAAC,eAAe,CAAC,4BAA4B,GAAG,CAAC,CAAC,UAAU;gBACxF,CAAC,CAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,cAAc,CAAC,4BAA4B,CAAC,UAAU;gBAC3E,CAAC,CAAE,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,cAAc,CAAC,4BAA4B,CAAC,uBAAuB,CAAC;QACjG,CAAC;QACL,uBAAC;IAAD,CArCA,AAqCC,IAAA;IArCY,4CAAgB","file":"uriSchemeService.js","sourcesContent":["import {IUriSchemeService} from \"../IUriSchemeService\";\nimport { ObjectHelper } from \"../../objectHelper\";\n\nconst FULLSCREEN: string = \"fullscreen\";\n\nexport class UriSchemeService implements IUriSchemeService {\n    \n    public registerPlatform(handleUriCallback: any): void {\n        \n        if (window.Windows &&\n            window.Windows.UI &&\n            window.Windows.UI.WebUI &&\n            window.Windows.UI.WebUI.WebUIApplication) {\n            window.Windows.UI.WebUI.WebUIApplication.addEventListener(\"activated\",\n                (args: Windows.ApplicationModel.Activation.IActivatedEventArgs & Windows.WinRTEvent<any>) => {\n                    let activatedEvent = args.detail.find(x => !!x);\n                    if (!!activatedEvent.uri) {\n                        let rawUri = activatedEvent.uri.rawUri;\n                        let scheme = activatedEvent.uri.schemeName + \"://\";\n                        let includesRoute = (rawUri !== scheme);\n                        if (includesRoute) {\n                            let path = activatedEvent.uri.rawUri.replace(scheme, \"\").replace(\"/#\", \"\").replace(/\\/$/, \"\");\n                            if (handleUriCallback && !!path) {\n                                let queryParams = ObjectHelper.parseQueryString(path);\n                                this.setScreenSize(queryParams[FULLSCREEN] === \"true\" && this.isTabletMode());\n                                handleUriCallback(path);\n                            }\n                        }\n                    }\n                });\n        }\n    }\n\n    private isTabletMode(): boolean {\n        return window.Windows.ViewManagement.UIViewSettings.getForCurrentView().userInteractionMode === window.Windows.ViewManagement.UserInteractionMode.touch;\n    }\n\n    private setScreenSize(fullScreen: boolean): void {\n        window.Windows.UI.ViewManagement.ApplicationView.preferredLaunchWindowingMode = !!fullScreen \n            ?  window.Windows.UI.ViewManagement.ApplicationViewWindowingMode.fullScreen \n            :  window.Windows.UI.ViewManagement.ApplicationViewWindowingMode.preferredLaunchViewSize;\n    }\n}\n"],"sourceRoot":"../../../.."}