{"version":3,"sources":["common/core/httpClient.ts"],"names":[],"mappings":"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","file":"httpClient.js","sourcesContent":["/// <reference path=\"../../../typings/app.d.ts\" />\n\nimport {transient} from \"aurelia-framework\";\nimport {IHttpClient} from \"./IHttpClient\";\nimport * as AurHttp from \"aurelia-fetch-client\";\nimport {UrlParamService} from \"./urlParamService\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {IHttpHeader} from \"./IHttpHeader\";\nimport { ApiException } from \"../resilience/apiException\";\n\ntype HttpVerb = \"GET\" | \"POST\" | \"PUT\";\nconst CACHE_PARAM = \"?_t\";\nconst DEFAULT_REQUEST_INIT: RequestInit = { credentials: <any>\"include\" };\n\n@transient()\n@inject(AurHttp.HttpClient)\nexport class HttpClient implements IHttpClient {\n\n    private _httpClient: AurHttp.HttpClient;\n    private _defaultQueryParams: {[index: string]: string};\n\n    constructor(httpClient: AurHttp.HttpClient) {\n        this._httpClient = httpClient;\n        this._defaultQueryParams = {};\n    }\n\n    public setup(options: { defaultQueryParams?: {[index: string]: string} }, interceptor?: AurHttp.Interceptor) : void {\n        if (!!options && !!options.defaultQueryParams) {\n            this._defaultQueryParams = this.prefixQueryParams(options.defaultQueryParams);\n        }\n        if (!!interceptor) {\n            this._httpClient.interceptors.push(interceptor);\n        }\n    }\n\n    public fetch(url: string, request?: RequestInit): Promise<Response> {\n        let req: Request = new Request(url, request || DEFAULT_REQUEST_INIT);\n        return this._httpClient.fetch(req);\n    }\n\n    public getData<T>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, breakCache?: boolean, headers?: IHttpHeader[]): Promise<T> {\n        if (!!breakCache) {\n            params = params || {};\n            params[CACHE_PARAM] = new Date().getTime();\n        }\n        return this.buildRequest<T, T>(\"GET\", baseEndPoint, endPoint, params, undefined, headers);\n    }\n\n    public postData<T, V>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data: T, headers?: IHttpHeader[]): Promise<V> {\n         return this.buildRequest<T, V>(\"POST\", baseEndPoint, endPoint, params, data, headers);\n    }\n\n    public putData<T, V>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data: T, headers?: IHttpHeader[]): Promise<V> {\n        return this.buildRequest<T, V>(\"PUT\", baseEndPoint, endPoint, params, data, headers);\n    }\n\n    private buildRequest<T, V>(verb: HttpVerb, baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data?: T, headers?: IHttpHeader[]): Promise<V> {\n        params = Object.assign(params || {}, this._defaultQueryParams);\n        let endPointWithVariables: string;\n        try {\n            endPointWithVariables =  UrlParamService.getParamEndpoint(endPoint, params);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n\n        let requestHeaders: any = {\n            \"Content-Type\": \"application/json\"\n        };\n\n        if (headers) {\n            headers.forEach(header => {\n               requestHeaders[header.name] = header.value;\n            });\n        }\n\n        let url =  baseEndPoint + endPointWithVariables;\n        return this.fetch(url, {\n            method: verb,\n            headers: requestHeaders,\n            body: verb === \"GET\" ? undefined : JSON.stringify(data)\n        })\n        .then((response: Response) => {\n            if (!response) {\n                throw new ApiException(this, \"processResponse\", \"Error - no response received: {0}, URL: {1}\", [\"unknown\", url], null, null);\n            }\n            if (!(response.ok)) {\n                throw new ApiException(this, \"processResponse\", \"Error - HTTP status: {0}, URL: {1}\", [response.status, url], null, response.status);\n            }\n            try {\n                return response.json();\n            } catch (err) {\n                throw new ApiException(this, \"processResponse\", \"Error - json.parse(): {0}, URL: {1}\", [err.toString(), url], null, response.status);\n            }\n\n        });\n    }\n\n    private prefixQueryParams(queryParams: {[index: string]: string}): {[index: string]: string} {\n        let newQueryParams: {[index: string]: string} = {};\n        return Object.keys(queryParams).reduce((prev: {[index: string]: string}, key: string) => {\n            prev[\"?\" + key] = queryParams[key];\n            return prev;\n        }, newQueryParams);\n    }\n}\n"],"sourceRoot":"../.."}