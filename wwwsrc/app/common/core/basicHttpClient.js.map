{"version":3,"sources":["common/core/basicHttpClient.ts"],"names":[],"mappings":"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","file":"basicHttpClient.js","sourcesContent":["/// <reference path=\"../../../typings/app.d.ts\" />\n\nimport {transient, inject} from \"aurelia-framework\";\nimport {Interceptor, HttpClient} from \"aurelia-http-client\";\nimport {HttpResponseMessage} from \"aurelia-http-client\";\nimport {IHttpClient} from \"./IHttpClient\";\nimport {UrlParamService} from \"./urlParamService\";\nimport {IHttpHeader} from \"./IHttpHeader\";\nimport { ApiException } from \"../resilience/apiException\";\n\ntype HttpVerb = \"get\" | \"post\" | \"put\";\ntype HttpClientLookup = {[index: string]: (url: string, content?: any) => Promise<HttpResponseMessage> };\n\n@transient()\n@inject(HttpClient)\nexport class BasicHttpClient implements IHttpClient {\n\n    private _httpClient: HttpClient;\n\n    constructor(httpClient: HttpClient) {\n        this._httpClient = httpClient;\n    }\n\n    public setup(options: { username: string, password: string, noCredentialsHeader: boolean, defaultQueryParams?: {[index: string]: string} }, interceptor?: Interceptor): void {\n        this._httpClient.configure((config) => {\n             if (!!options) {\n                if (!!options.username && !!options.password) {\n                    if (!!options.noCredentialsHeader) {\n                        config.withHeader(\"Authorization\", \"Basic \" + btoa(options.username + \":\" + options.password));\n                    } else {\n                        config.withCredentials(true);\n                        config.withLogin(options.username, options.password);\n                    }\n                }\n\n                if (!!options.defaultQueryParams) {\n                    config.withParams(options.defaultQueryParams);\n                }\n             }\n             if (!!interceptor) {\n                 config.withInterceptor(interceptor);\n             }\n        });\n    }\n\n    public fetch(url: string, request?: RequestInit): Promise<Response> {\n        throw(\"not implemented\");\n    }\n\n    public getData<T>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, breakCache?: boolean, headers?: IHttpHeader[]): Promise<T> {\n        return this.buildRequest<T, T>(\"get\", baseEndPoint, endPoint, params, undefined, headers);\n    }\n\n    public postData<T, V>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data: T, headers?: IHttpHeader[]): Promise<V> {\n        return this.buildRequest<T, V>(\"post\", baseEndPoint, endPoint, params, data, headers);\n    }\n\n    public putData<T, V>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data: T, headers?: IHttpHeader[]): Promise<V> {\n        return this.buildRequest<T, V>(\"put\", baseEndPoint, endPoint, params, data, headers);\n    }\n\n    private buildRequest<T, V>(verb: HttpVerb, baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data?: T, headers?: IHttpHeader[]): Promise<V> {\n        let endPointWithVariables: string;\n        try {\n            endPointWithVariables = UrlParamService.getParamEndpoint(endPoint, params);\n        } catch (e) {\n            return Promise.reject(e);\n        }\n\n        this._httpClient.configure(config => {\n            config\n                .withBaseUrl(baseEndPoint)\n                .withHeader(\"Content-Type\", \"application/json\");\n        });\n\n        let httpMethodLookup: HttpClientLookup = {\n            \"get\": this._httpClient.get,\n            \"put\": this._httpClient.put,\n            \"post\": this._httpClient.post\n        };\n\n        if (headers) {\n            this._httpClient.configure(config => {\n                headers.forEach(header => {\n                    config.withHeader(header.name, header.value);\n                });\n            }) ;\n        }\n\n        if (data && Object.keys(data).length === 0 && data.constructor === Object) {\n            data = null;\n        }\n\n        return httpMethodLookup[verb].call(this._httpClient, endPointWithVariables, !!data ? JSON.stringify(data) : null)\n            .then((response: HttpResponseMessage) => {\n                if (response && response.response) {\n                    return JSON.parse(response.response);\n                } else {\n                    return null;\n                }\n            })\n            .catch((error: HttpResponseMessage) => {\n                throw new ApiException(this, \n                        \"buildRequest\", \n                        \"Status: {0}, Error response: {1}, URL: {2}\", \n                        [error.statusCode, error.response.toString(), error.requestMessage.url], null, error.statusCode);\n            });\n    }\n}\n"],"sourceRoot":"../.."}