{"version":3,"sources":["common/core/IHttpClient.ts"],"names":[],"mappings":"","file":"IHttpClient.js","sourcesContent":["import {IHttpHeader} from \"./IHttpHeader\";\n\nexport interface IHttpClient {\n    setup(options: { username?: string, password?: string, noCredentialsHeader?: boolean, defaultQueryParams?: {[index: string]: string} }) : void;\n    fetch(url: string, request?: RequestInit): Promise<Response>;\n    getData<T>(baseEndpoint: string, endPoint: string, params: { [id: string]: any }, breakCache?: boolean, headers?: IHttpHeader[]): Promise<T>;\n    postData<T, V>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data: T, headers?: IHttpHeader[]): Promise<V>;\n    putData<T, V>(baseEndPoint: string, endPoint: string, params: { [id: string]: any }, data: T, headers?: IHttpHeader[]): Promise<V>;\n}\n"],"sourceRoot":"../.."}