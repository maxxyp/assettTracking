{"version":3,"sources":["common/core/urlParamService.ts"],"names":[],"mappings":";;;IACA;QAAA;QA0BA,CAAC;QAzBG,wFAAwF;QAC1E,gCAAgB,GAA9B,UAA+B,QAAgB,EAAE,MAA6B;YAC1E,IAAI,qBAAqB,GAAW,QAAQ,CAAC;YAE7C,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,IAAI,eAAe,GAAa,EAAE,CAAC;gBACnC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,MAAM,CAAC,CAAC,CAAC;oBACpB,EAAE,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACb,IAAI,QAAQ,GAAW,MAAI,EAAE,MAAG,CAAC;wBACjC,EAAE,CAAC,CAAC,qBAAqB,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BACxE,qBAAqB,GAAG,qBAAqB,CAAC,OAAO,CAAC,QAAQ,EAAE,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACpG,CAAC;wBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;4BAC/B,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;wBACrG,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACJ,MAAM,IAAI,6BAAa,CAAC,IAAI,EAAE,kBAAkB,EAAE,gDAAgD,EAAE,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,CAAC;wBAC1H,CAAC;oBACL,CAAC;gBACL,CAAC;gBACD,EAAE,CAAC,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC7B,qBAAqB,GAAG,qBAAqB,GAAG,GAAG,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACpF,CAAC;YAEL,CAAC;YACD,MAAM,CAAC,qBAAqB,CAAC;QACjC,CAAC;QACL,sBAAC;IAAD,CA1BA,AA0BC,IAAA;IA1BY,0CAAe","file":"urlParamService.js","sourcesContent":["import { BaseException } from \"./models/baseException\";\nexport class UrlParamService {\n    // supports construction of query params by adding params prefixed with ? e.g. ?env: red\n    public static getParamEndpoint(endPoint: string, params: { [id: string]: any }): string {\n        let endPointWithVariables: string = endPoint;\n\n        if (params) {\n            let queryParamParts: string[] = [];\n            for (let id in params) {\n                if (params[id]) {\n                    let subParam: string = `{${id}}`;\n                    if (endPointWithVariables.indexOf(subParam) >= 0 && id.indexOf(\"?\") !== 0) {\n                        endPointWithVariables = endPointWithVariables.replace(subParam, encodeURIComponent(params[id]));\n                    } else if (id.indexOf(\"?\") === 0) {\n                        queryParamParts.push(encodeURIComponent(id.substring(1)) + \"=\" + encodeURIComponent(params[id]));\n                    } else {\n                        throw new BaseException(this, \"getParamEndpoint\", \"Substitute parameter name does not exist '{0}'\", [subParam], null);\n                    }\n                }\n            }\n            if (queryParamParts.length > 0) {\n                endPointWithVariables = endPointWithVariables + \"?\" + queryParamParts.join(\"&\");\n            }\n            \n        }\n        return endPointWithVariables;\n    }\n}\n"],"sourceRoot":"../.."}