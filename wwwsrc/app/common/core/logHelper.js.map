{"version":3,"sources":["common/core/logHelper.ts"],"names":[],"mappings":";;;IAEA;QAAA;QAuBA,CAAC;QAtBiB,wBAAc,GAA5B,UAA6B,IAAU;YACnC,MAAM,CAAC,MAAM,GAAG,uBAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;QAC/D,CAAC;QAEa,uBAAa,GAA3B,UAA4B,iBAAyB;YACjD,IAAI,CAAC;gBACD,IAAI,gBAAgB,GAAG,uBAAU,CAAC,OAAO,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,iBAAiB,CAAC,CAAC;gBAC9E,IAAI,sBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;gBAEjE,OAAO,CAAC,OAAO,CAAC,eAAe,CAAC,OAAO,CAAC,WAAW,CAAC,aAAa,EAAE;qBAC9D,IAAI,CAAC,UAAC,KAA8E;oBACjF,KAAK,CAAC,OAAO,CAAC,UAAA,IAAI;wBACd,yCAAyC;wBACzC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,sBAAoB,CAAC,CAAC,CAAC;4BACnC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,OAAO,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;wBAClE,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC,CAAC,CAAC;YACX,CAAC;YAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAEf,CAAC;QACL,CAAC;QACL,gBAAC;IAAD,CAvBA,AAuBC,IAAA;IAvBY,8BAAS","file":"logHelper.js","sourcesContent":["import { DateHelper } from \"./dateHelper\";\n\nexport class LogHelper {\n    public static getLogFileName(date: Date): string {\n        return \"log-\" + DateHelper.toJsonDateString(date) + \".txt\";\n    }\n\n    public static clearDownLogs(maxLogFileAgeDays: number): void {\n        try {\n            let oldestDateToKeep = DateHelper.addDays(new Date(), -1 * maxLogFileAgeDays);\n            let oldestFileNameToKeep = this.getLogFileName(oldestDateToKeep);\n\n            Windows.Storage.ApplicationData.current.localFolder.getFilesAsync()\n                .then((files: Windows.Foundation.Collections.IVectorView<Windows.Storage.StorageFile>) => {\n                    files.forEach(file => {\n                        // alphabetical comparison is good enough\n                        if (file.name < oldestFileNameToKeep) {\n                            file.deleteAsync(Windows.Storage.StorageDeleteOption.default);\n                        }\n                    });\n                });\n        } catch (err) {\n\n        }\n    }\n}\n"],"sourceRoot":"../.."}