{"version":3,"sources":["app.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["/// <reference path=\"../typings/app.d.ts\" />\n\nimport * as Logging from \"aurelia-logging\";\nimport { inject } from \"aurelia-framework\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { IConfigurationService } from \"./common/core/services/IConfigurationService\";\nimport { ConfigurationService } from \"./common/core/services/configurationService\";\nimport { Router, RouterConfiguration, NavigationInstruction } from \"aurelia-router\";\nimport { Container } from \"aurelia-dependency-injection\";\nimport { ScenarioLoader } from \"./common/simulation/scenarioLoader\";\nimport { IScenarioLoader } from \"./common/simulation/IScenarioLoader\";\nimport { RouteConfig } from \"aurelia-router\";\nimport { InitialisationEventConstants } from \"./hema/business/constants/initialisationEventConstants\";\nimport { AppInit } from \"./hema/presentation/modules/initialisation/appInit\";\nimport { EngineerServiceConstants } from \"./hema/business/services/constants/engineerServiceConstants\";\nimport { JobServiceConstants } from \"./hema/business/services/constants/jobServiceConstants\";\nimport { IEngineerService } from \"./hema/business/services/interfaces/IEngineerService\";\nimport { EngineerService } from \"./hema/business/services/engineerService\";\nimport { StorageService } from \"./hema/business/services/storageService\";\nimport { IStorageService } from \"./hema/business/services/interfaces/IStorageService\";\nimport { IToastItem } from \"./common/ui/elements/models/IToastItem\";\nimport { UiConstants } from \"./common/ui/elements/constants/uiConstants\";\nimport { About } from \"./common/ui/views/about\";\nimport { AppConstants } from \"./appConstants\";\nimport { BaseException } from \"./common/core/models/baseException\";\nimport { Guid } from \"./common/core/guid\";\nimport { ErrorHandler } from \"./common/core/errorHandler\";\nimport { EndpointHelper } from \"./common/resilience/endpointHelper\";\nimport { Threading } from \"./common/core/threading\";\nimport { PlatformHelper } from \"./common/core/platformHelper\";\nimport { IHemaConfiguration } from \"./hema/IHemaConfiguration\";\nimport { ITrainingModeConfiguration } from \"./hema/business/services/interfaces/ITrainingModeConfiguration\";\nimport { JobCacheService } from \"./hema/business/services/jobCacheService\";\nimport { IJobCacheService } from \"./hema/business/services/interfaces/IJobCacheService\";\nimport { Job } from \"./hema/business/models/job\";\nimport { JobLoggingHelper } from \"./hema/business/models/jobLoggingHelper\";\nimport {IPageService} from \"./hema/presentation/services/interfaces/IPageService\";\nimport {PageService} from \"./hema/presentation/services/pageService\";\nimport {FeatureToggleService} from \"./hema/business/services/featureToggleService\";\nimport {IFeatureToggleService} from \"./hema/business/services/interfaces/IFeatureToggleService\";\nimport {IFFTService} from \"./hema/api/services/interfaces/IFFTService\";\nimport {IVanStockService} from \"./hema/api/services/interfaces/IVanStockService\";\nimport {FftService} from \"./hema/api/services/fftService\";\nimport {VanStockService} from \"./hema/api/services/vanStockService\";\nimport {ISoundService} from \"./common/ui/services/ISoundService\";\nimport {SoundConstants} from \"./hema/business/services/constants/soundConstants\";\nimport {SoundService} from \"./common/ui/services/soundService\";\nimport {INotificationService} from \"./hema/business/services/interfaces/INotificationService\";\nimport {NotificationService} from \"./hema/business/services/notificationService\";\n\n@inject(\n    ConfigurationService,\n    EventAggregator,\n    EngineerService,\n    StorageService,\n    About,\n    JobCacheService,\n    JobLoggingHelper,\n    PageService,\n    FeatureToggleService,\n    FftService,\n    VanStockService,\n    SoundService,\n    NotificationService\n)\nexport class App {\n    public router: Router;\n    public isInitialised: boolean;\n\n    public saving: boolean;\n    public saveOffsetTop: number;\n\n    public appInitViewModel: AppInit;\n    public isScrolledBottom: boolean;\n\n    private _configurationService: IConfigurationService;\n    private _eventAggregator: EventAggregator;\n    private _engineerService: IEngineerService;\n    private _jobCacheService: IJobCacheService;\n\n    private _storage: IStorageService;\n\n    private _logger: Logging.Logger;\n    private _savingTimeout: number;\n    private _jobLoggingHelper: JobLoggingHelper;\n    private _defaultLandingPage: string;\n    private _pageService: IPageService;\n    private _featureToggleService: IFeatureToggleService;\n    private _fftService: IFFTService;\n    private _soundService: ISoundService;\n    private _notificationService: INotificationService;\n\n    constructor(configurationService: IConfigurationService,\n        eventAggregator: EventAggregator,\n        engineerService: IEngineerService,\n        strorageService: IStorageService,\n        about: About,\n        jobCacheService: IJobCacheService,\n        jobLoggingHelper: JobLoggingHelper,\n                pageService: IPageService,\n                featureToggleService: IFeatureToggleService,\n                fftService: IFFTService,\n                vanStockService: IVanStockService,\n                soundService: ISoundService,\n                notificationService: INotificationService\n    ) {\n        this._configurationService = configurationService;\n        this._engineerService = engineerService;\n        this._storage = strorageService;\n        this._eventAggregator = eventAggregator;\n        this._jobCacheService = jobCacheService;\n        this._jobLoggingHelper = jobLoggingHelper;\n        this._pageService = pageService;\n        this._featureToggleService = featureToggleService;\n        this._fftService = fftService;\n        this._soundService = soundService;\n        this._notificationService = notificationService;\n\n        this.isScrolledBottom = false;\n        this.saving = false;\n\n        this._logger = Logging.getLogger(\"app\");\n\n        ErrorHandler.customErrorHandler = (exception) => {\n            this.handleError(exception);\n        };\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/releaseNotes\");\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/resilienceInformation\",\n            {service: this._fftService, title: \"EWB\"});\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/resilienceInformation\",\n            {service: vanStockService, title: \"Van Stock\"});\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/supportOperations\");\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/engineerDetails\");\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/catalogVersions\");\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/catalogQuery\");\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/endpointDetails\");\n        about.addViewModel(\"../../../hema/presentation/modules/settings/about/featureToggle\");\n\n        if (PlatformHelper.isDevelopment && PlatformHelper.getPlatform() === \"wua\") {\n            about.addViewModel(\"../../../hema/presentation/modules/settings/about/logConsole\");\n        }\n\n        this._eventAggregator.subscribe(InitialisationEventConstants.INITIALISED, () => {\n            this.isInitialised = true;\n        });\n\n        // toast updates todo better place to put this?  maybe notificationServices\n        this._eventAggregator.subscribe(AppConstants.APP_TOAST_ADDED, ((toast: IToastItem) => {\n            // toast dismiss time is overruled by settings #18034\n            this._storage.getAppSettings().then((settings) => {\n                toast.position = settings.notificationPosition;\n                toast.dismissTime = settings.notificationDisplayTime;\n                this._eventAggregator.publish(UiConstants.TOAST_ADDED, toast);\n            });\n\n        }));\n\n        this._eventAggregator.subscribe(AppConstants.APP_UNHANDLED_EXCEPTION, ((exception: BaseException) => {\n            this.handleError(exception);\n        }));\n\n        this._eventAggregator.subscribe(EngineerServiceConstants.ENGINEER_SIGNED_ON_CHANGED, (isSignedOn: boolean) => {\n            const isTheUserOnAVanStockPage = this.router.currentInstruction\n                && this.router.currentInstruction.config\n                && this.router.currentInstruction.config.name === \"consumables\";\n\n            if (isTheUserOnAVanStockPage) {\n                // if the user is perusing their van stock then don't redirect.\n                return;\n            }\n\n            if (isSignedOn) {\n                this.router.navigateToRoute(\"customers\");\n            } else {\n                this.router.navigateToRoute(\"settings\", { isSignOff: true });\n            }\n        });\n\n        this._eventAggregator.subscribe(\"router:navigation:processing\", (params: { instruction: NavigationInstruction }) => {\n            this._logger.debug(\"Processing: \" + params.instruction.config.name);\n        });\n        this._eventAggregator.subscribe(\"router:navigation:complete\", (params: { instruction: NavigationInstruction, result: any }) => {\n            this._logger.debug(\"Complete: \" + params.instruction.config.name);\n\n            this._pageService.addOrUpdateLastVisitedPage(params.instruction.fragment);\n\n            Threading.delay(() => {\n                this.handleScrollEvent();\n                if (params.instruction.config.name === \"settings\" && params.instruction.queryParams.isSignOff) {\n                    // because we can complete a job and then end-of-day all whilst looking at a job-details page, a race\n                    //  condition exists whereby \"job state change\" handlers will fire off, hit the jobCacheService.getJob()\n                    //  but the end-of-day process has cleared the job store.  The getJob() calls then throw exceptions as\n                    //  the requested job no longer exists.  So we only clear down the job store when we have end-of-dayed and\n                    //  and navigated away from job detasil page (therefore disposing all of the handler subscriptions)\n                    this._jobCacheService.clearJobsToDo();\n                    this._jobCacheService.clearWorkListJobs();\n                    this._jobCacheService.getPartsCollections();\n                }\n            }, 1000);\n        });\n        this._eventAggregator.subscribe(JobServiceConstants.JOB_COMPLETION_REFRESH, (canNavigate: boolean) => {\n            if (canNavigate) {\n                this.router.navigate(\"/customers\");\n            }            \n        });\n        this._eventAggregator.subscribe(AppConstants.APP_SAVING, () => {\n\n            let currentInstruction = this.router.currentInstruction;\n            let viewPorts = currentInstruction && currentInstruction.router.viewPorts;\n            let element: HTMLElement = viewPorts && (<any>viewPorts).default && (<any>viewPorts).default.element;\n            if (element) {\n                let viewState = element.children[0];\n                if (viewState) {\n                    let firstDiv = viewState.children[0];\n                    if (firstDiv) {\n                        this.saveOffsetTop = firstDiv.clientHeight - element.scrollTop;\n                    }\n                }\n            }\n\n            if (!!this.saving) {\n                if (this._savingTimeout) {\n                    Threading.stopDelay(this._savingTimeout);\n                }\n            } else {\n                this.saving = true;\n            }\n            this._savingTimeout = Threading.delay(() => {\n                this.saving = false;\n            }, 900);\n        });\n\n        this.isInitialised = false;\n        this.appInitViewModel = Container.instance.get(AppInit);\n\n        this.enableLogJobOnEverySave();\n    }\n\n    public static requiresSimulation(configurationService: IConfigurationService): { totalRoutes: number, simulatedRoutes: number } {\n        return EndpointHelper.appRequiresSimulation(configurationService, [\n            \"fftServiceEndpoint\",\n            \"whoAmIServiceEndpoint\",\n            \"adaptServiceEndpoint\",\n            \"assetTrackingEndpoint\"]);\n    }\n\n    public activate(): Promise<void> {\n\n        // badge updates for van stock, consumables\n        this._notificationService.initRouterBadgeEventSubs();\n\n        this._eventAggregator.subscribe(SoundConstants.NOTIFICATION_SOUND, async (rings: number = 1) => {\n\n                const settings = await this._storage.getAppSettings();\n\n                if (settings && settings.soundEnabled) {\n                    await this._soundService.playBell(rings);\n                }\n            }\n        );\n\n        return this.checkForSimulation();\n    }\n\n    public async configureRouter(routerConfiguration: RouterConfiguration, router: Router): Promise<void> {\n        this.router = router;\n\n        routerConfiguration.title = this._configurationService.getConfiguration<IHemaConfiguration>().applicationTitle || \"EWB\";\n\n        let routes: RouteConfig[] = [];\n\n        this._defaultLandingPage = await this._storage.userSettingsComplete() ? \"customers\" : \"settings\";\n\n        routes = routes.concat(this.getAppRoutes());\n\n        routerConfiguration.map(routes);\n\n        router.ensureConfigured().then(() => {\n            return this._notificationService.updateInitialRouterBadgeCounts();\n        });\n    }\n\n    public handleScrollEvent(): void {\n        let target: HTMLElement = this.router.viewPorts && (<any>this.router.viewPorts).default && (<any>this.router.viewPorts).default.element;\n        this.isScrolledBottom = (target.scrollTop + 50) >= (target.scrollHeight - target.offsetHeight);\n    }\n\n    private getAppRoutes(): RouteConfig[] {\n        let consumablesLabel = \"Consumables\";\n        let consumableIcon = \"hema-icon-parts-basket\";\n\n        const isAssetTracked = this._featureToggleService.isAssetTrackingEnabled();\n\n        if (isAssetTracked) {\n            consumablesLabel = \"My Van\";\n            consumableIcon = \"hema-icon-vanstock\";\n        }\n\n        return [\n            {\n                route: \"\",\n                redirect: this._defaultLandingPage\n            },\n            {\n                route: \"customers\",\n                name: \"customers\",\n                moduleId: \"hema/presentation/modules/jobsList/jobsList\",\n                nav: true,\n                title: \"Customers\",\n                settings: { icon: \"icon-engineerappointments\" }\n            },\n            {\n                route: \"attended\",\n                name: \"attended\",\n                redirect: \"customers/attended\",\n                title: \"Attended\",\n                nav: true,\n                settings: {\n                    icon: \"hema-icon-jobs-done\"\n                }\n            },\n            {\n                route: \"messages\",\n                name: \"messages\",\n                moduleId: \"hema/presentation/modules/messages/messages\",\n                nav: true,\n                title: \"Messages\",\n                settings: {icon: \"icon-contact\", hasBadge: true, badgeCount: 0, showCount: true}\n            },\n            {\n                route: \"consumables\",\n                name: \"consumables\",\n                moduleId: \"hema/presentation/modules/parts/consumablesMain\",\n                nav: true,\n                title: consumablesLabel,\n                settings: {icon: consumableIcon, hasBadge: true, badgeCount: 0, showCount: false}\n            },\n            {\n                route: \"archives\",\n                name: \"archives\",\n                moduleId: \"hema/presentation/modules/archives/archives\",\n                nav: true,\n                title: \"Archives\",\n                settings: { icon: \"hema-icon-calendar\" }\n            },\n            {\n                route: \"settings\",\n                name: \"settings\",\n                moduleId: \"hema/presentation/modules/settings/settingsMain\",\n                nav: true,\n                title: \"Settings\",\n                settings: { icon: \"hema-icon-settings\" }\n            }\n        ];\n    }\n\n    private checkForSimulation(): Promise<void> {\n        let simulationCounts = App.requiresSimulation(this._configurationService);\n        if (simulationCounts.simulatedRoutes > 0) {\n            /* Load scenario data for simulation use */\n            let scenarioLoader = <IScenarioLoader>Container.instance.get(ScenarioLoader);\n\n            if (scenarioLoader) {\n                let trainingConfig = this._configurationService.getConfiguration<ITrainingModeConfiguration>();\n                let isTrainingMode = trainingConfig && trainingConfig.trainingMode;\n                return scenarioLoader.initialise(isTrainingMode ? \"trainingScenarios\" : null);\n            } else {\n                return Promise.resolve();\n            }\n        } else {\n            return Promise.resolve();\n        }\n    }\n\n    private handleError(exception: BaseException): void {\n        this._logger.error(exception && exception.toString());\n\n        let toastItem: IToastItem = {\n            id: Guid.newGuid(),\n            title: \"Error\",\n            content: \"An unhandled fault has been detected in the application\",\n            toastAction: { details: exception && exception.toString() },\n            style: \"danger\",\n            dismissTime: 0\n        };\n        this._eventAggregator.publish(AppConstants.APP_TOAST_ADDED, toastItem);\n    }\n\n    private enableLogJobOnEverySave(): void {\n        if (this._configurationService.getConfiguration<IHemaConfiguration>().logJobOnEverySave) {\n            this._eventAggregator.subscribe(\"router:navigation:complete\", async (params: { instruction: NavigationInstruction }) => {\n\n                try {\n                    if (!await this._engineerService.isWorking()) {\n                        return;\n                    }\n\n                    let activeJob = (await this._jobCacheService.getJobsToDo() || [])\n                        .find(job => Job.isActive(job));\n\n                    if (!activeJob) {\n                        return;\n                    }\n\n                    let loggableJob = this._jobLoggingHelper.prepareLoggableJob(activeJob);\n\n                    let thisRoute = params\n                        && params.instruction\n                        && params.instruction.params\n                        && params.instruction.params.childRoute;\n\n                    this._logger.warn(\"Job saved:\", thisRoute, loggableJob);\n\n                } catch (error) {\n                    this._logger.warn(\"Job saved:\", \"Error trying to log job\", error);\n                }\n            });\n        }\n    }\n}\n"],"sourceRoot":"."}