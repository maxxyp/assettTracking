{"version":3,"sources":["hema/api/services/fftHeaderProvider.ts"],"names":[],"mappings":";;;;;;;;;;;;IAKA;QAII;QACA,CAAC;QAEM,4CAAgB,GAAvB,UAAwB,aAA4B;YAChD,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;QACxC,CAAC;QAEM,sCAAU,GAAjB,UAAkB,SAAiB;YAE/B,IAAI,OAAO,GAAkB,EAAE,CAAC;YAChC,IAAI,gBAAgB,GAAG,CAAC,IAAI,CAAC,cAAc,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;iBAClC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,KAAK,YAAY,EAA5B,CAA4B,CAAC,CAAC;YAEtE,EAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBACnB,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YACnC,CAAC;YACD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;YAEhC,qEAAqE;YACrE,wCAAwC;YACxC,qBAAqB;YACrB,yGAAyG;YACzG,SAAS;YACT,4BAA4B;YAC5B,iGAAiG;YACjG,qFAAqF;YACrF,uFAAuF;YACvF,YAAY;YAEZ,+EAA+E;YAC/E,+FAA+F;YAE/F,0BAA0B;YAC1B,UAAU;QACd,CAAC;QAtCQ,iBAAiB;YAD7B,qCAAM,EAAE;;WACI,iBAAiB,CAuC7B;QAAD,wBAAC;KAvCD,AAuCC,IAAA;IAvCY,8CAAiB","file":"fftHeaderProvider.js","sourcesContent":["import {IHttpHeaderProvider} from \"../../../common/resilience/services/interfaces/IHttpHeaderProvider\";\r\nimport {IHttpHeader} from \"../../../common/core/IHttpHeader\";\r\nimport {inject} from \"aurelia-dependency-injection\";\r\n\r\n@inject()\r\nexport class FftHeaderProvider implements IHttpHeaderProvider {\r\n\r\n    private _staticHeaders: IHttpHeader[];\r\n\r\n    constructor() {\r\n    }\r\n\r\n    public setStaticHeaders(staticHeaders: IHttpHeader[]): void {\r\n        this._staticHeaders = staticHeaders;\r\n    }\r\n\r\n    public getHeaders(routeName: string): Promise<IHttpHeader[]> {\r\n\r\n        let headers: IHttpHeader[] = [];\r\n        let engineerIdHeader = (this._staticHeaders || []).slice(0)\r\n                                .find(header => header.name === \"engineerId\");\r\n\r\n        if (engineerIdHeader) {\r\n            headers.push(engineerIdHeader);\r\n        }\r\n        return Promise.resolve(headers);\r\n\r\n        // let headers: IHttpHeader[] = (this._staticHeaders || []).slice(0);\r\n        // return this._gpsService.getLocation()\r\n        //     .catch(() => {\r\n        //         /* swallow any errors from the gps service, we definitely don't want this to stop API calls */\r\n        //     })\r\n        //     .then((location) => {\r\n        //         if (location && location.latitude !== undefined && location.longitude !== undefined) {\r\n        //             headers.push({name: \"latitude\", value: location.latitude.toString()});\r\n        //             headers.push({name: \"longitude\", value: location.longitude.toString()});\r\n        //         }\r\n\r\n        //         // #14682 - reintroducing all other headers but keep \"date\" disabled\r\n        //         // headers.push({name: \"date\", value: DateHelper.toJsonDateTimeString(new Date())});\r\n\r\n        //         return headers;\r\n        //     });\r\n    }\r\n}\r\n"],"sourceRoot":"../../.."}