{"version":3,"sources":["hema/presentation/elements/navSections/iconNavBar.ts"],"names":[],"mappings":"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","file":"iconNavBar.js","sourcesContent":["import { Router } from \"aurelia-router\";\r\nimport { inject } from \"aurelia-dependency-injection\";\r\nimport { EventAggregator, Subscription } from \"aurelia-event-aggregator\";\r\nimport { NavModel } from \"aurelia-router\";\r\nimport { observable } from \"aurelia-binding\";\r\nimport { HelpOverlayService } from \"../../../../common/ui/services/helpOverlayService/helpOverlayService\";\r\nimport { IHelpOverlayService } from \"../../../../common/ui/services/helpOverlayService/interfaces/IHelpOverlayService\";\r\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\r\nimport { EngineerService } from \"../../../business/services/engineerService\";\r\nimport { PlatformHelper } from \"../../../../common/core/platformHelper\";\r\n\r\n@inject(Router, EventAggregator, HelpOverlayService, EngineerService, PlatformHelper)\r\nexport class IconNavBar {\r\n    public router: Router;\r\n    @observable\r\n    public navTitle: string;\r\n    public consumablePartsCount: number;\r\n    public helpOverlayService: IHelpOverlayService;\r\n    public isAdmin: boolean;\r\n    public platform: string;\r\n    public workListRequestInProgess: boolean;\r\n    public appVersion: string;\r\n    public buildType: string;\r\n\r\n    private _eventAggregator: EventAggregator;\r\n    private _routeChangeSubscription: Subscription;\r\n\r\n    constructor(router: Router, eventAggregator: EventAggregator, helpOverlayService: IHelpOverlayService, engineerService: IEngineerService) {\r\n        this.router = router;\r\n        this._eventAggregator = eventAggregator;\r\n        this._routeChangeSubscription = this._eventAggregator.subscribe(\"router:navigation:complete\", () => this.handleRouteChanged());\r\n        this.helpOverlayService = helpOverlayService;\r\n        engineerService.getCurrentEngineer()\r\n            .then((engineer) => {\r\n                if (engineer && engineer.roles && engineer.roles.indexOf(\"SR-Field-Admin\")) {\r\n                    this.isAdmin = true;\r\n                } else {\r\n                    this.isAdmin = false;\r\n                }\r\n            });\r\n        this.platform = PlatformHelper.getPlatform();\r\n        this.appVersion = PlatformHelper.appVersion;\r\n        this.buildType = PlatformHelper.buildType;\r\n    }\r\n\r\n    public attached(): void {\r\n        this.handleRouteChanged();\r\n    }\r\n\r\n    public detached(): void {\r\n        if (this._routeChangeSubscription) {\r\n            this._routeChangeSubscription.dispose();\r\n        }\r\n    }\r\n\r\n    public navigateTo(navModel: NavModel): void {\r\n        let settings: { defaultParam: any } = <{ defaultParam: any }>navModel.settings;\r\n        this.router.navigateToRoute(navModel.config.name, settings && settings.defaultParam\r\n            ? settings.defaultParam : undefined);\r\n    }\r\n\r\n    private handleRouteChanged(): void {\r\n        if (this.router && this.router.currentInstruction && this.router.currentInstruction.fragment) {\r\n            let route = this.router.currentInstruction.fragment.replace(\"/\", \"\");\r\n            this.router.navigation.forEach(row => {\r\n                if ((row.config.redirect && route.lastIndexOf(row.config.redirect, 0) === 0) || route.lastIndexOf(<string>row.config.route, 0) === 0) {\r\n                    this.navTitle = row.title;\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"../../../.."}