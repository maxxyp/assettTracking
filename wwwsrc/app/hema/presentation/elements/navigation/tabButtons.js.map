{"version":3,"sources":["hema/presentation/elements/navigation/tabButtons.ts"],"names":[],"mappings":";;;;;;;;;;;;IAQA;QAUI,oBAAY,MAAc,EAAE,eAAgC;YACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;YACxC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QAC5C,CAAC;QAEM,6BAAQ,GAAf;YAAA,iBAGC;YAFG,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,4BAA4B,EAAE,cAAM,OAAA,KAAI,CAAC,kBAAkB,EAAE,EAAzB,CAAyB,CAAC,CAAC;YAC/H,IAAI,CAAC,kBAAkB,EAAE,CAAC;QAC9B,CAAC;QAEM,6BAAQ,GAAf;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC;gBAChC,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;gBACxC,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;YACzC,CAAC;QACL,CAAC;QAEM,yCAAoB,GAA3B,UAA4B,SAAiB;YACzC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;QAEO,uCAAkB,GAA1B;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM;gBACX,IAAI,CAAC,MAAM,CAAC,kBAAkB;gBAC9B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM;gBACrC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc;oBAC1E,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC;YACrH,CAAC;QACL,CAAC;QAtCD;YADC,4BAAQ,CAAC,EAAC,kBAAkB,EAAE,+BAAW,CAAC,MAAM,EAAC,CAAC;sCACpC,uBAAM;kDAAC;QAEtB;YADC,4BAAQ,CAAC,EAAC,kBAAkB,EAAE,+BAAW,CAAC,MAAM,EAAC,CAAC;;qDAC1B;QAJhB,UAAU;YAFtB,iCAAa,CAAC,aAAa,CAAC;YAC5B,0BAAM,CAAC,uBAAM,EAAE,0CAAe,CAAC;6CAWR,uBAAM,EAAmB,0CAAe;WAVnD,UAAU,CAyCtB;QAAD,iBAAC;KAzCD,AAyCC,IAAA;IAzCY,gCAAU","file":"tabButtons.js","sourcesContent":["/// <reference path=\"../../../../../typings/app.d.ts\" />\nimport {inject} from \"aurelia-framework\";\nimport {customElement, bindable, bindingMode} from \"aurelia-framework\";\nimport {Router} from \"aurelia-router\";\nimport {EventAggregator, Subscription} from \"aurelia-event-aggregator\";\n\n@customElement(\"tab-buttons\")\n@inject(Router, EventAggregator)\nexport class TabButtons {\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public router: Router;\n    @bindable({defaultBindingMode: bindingMode.oneWay})\n    public activeTab: string;\n    public isFullScreen: boolean;\n\n    private _eventAggregator: EventAggregator;\n    private _routeChangeSubscription: Subscription;\n\n    constructor(router: Router, eventAggregator: EventAggregator) {\n        this.router = router;\n        this._eventAggregator = eventAggregator;\n        this.isFullScreen = window.isFullScreen;\n    }\n\n    public attached(): void {\n        this._routeChangeSubscription = this._eventAggregator.subscribe(\"router:navigation:complete\", () => this.handleRouteChanged());\n        this.handleRouteChanged();\n    }\n\n    public detached(): void {\n        if (this._routeChangeSubscription) {\n            this._routeChangeSubscription.dispose();\n            this._routeChangeSubscription = null;\n        }\n    }\n\n    public navigateToChildRoute(routeName: string): void {\n        this.router.navigateToRoute(routeName);\n    }\n\n    private handleRouteChanged(): void {\n        if (this.router &&\n            this.router.currentInstruction &&\n            this.router.currentInstruction.config &&\n            this.router.currentInstruction.config.settings) {\n            this.activeTab = this.router.currentInstruction.config.settings.tabGroupParent\n                ? this.router.currentInstruction.config.settings.tabGroupParent : this.router.currentInstruction.config.name;\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}