{"version":3,"sources":["hema/presentation/factories/chargesFactory.ts"],"names":[],"mappings":"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","file":"chargesFactory.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport { ChargeTaskViewModel } from \"../modules/charges/viewModels/chargeTaskViewModel\";\nimport { IChargesFactory } from \"./interfaces/IChargesFactory\";\nimport { ChargeMainViewModel } from \"../modules/charges/viewModels/chargeMainViewModel\";\nimport { ChargeableTask } from \"../../business/models/charge/chargeableTask\";\nimport * as bignumber from \"bignumber\";\nimport { Charge } from \"../../business/models/charge/charge\";\nimport { ChargeItemLabourViewModel } from \"../modules/charges/viewModels/chargeItemLabourViewModel\";\nimport { ChargeItemPartViewModel } from \"../modules/charges/viewModels/chargeItemPartViewModel\";\nimport { PrimeSubCharge } from \"../../business/models/charge/primeSubCharge\";\n\nexport class ChargesFactory implements IChargesFactory {\n\n    public createChargesBusinessModel(vm: ChargeMainViewModel): Charge {\n        let model = new Charge();\n        model.complaintActionCategoryCharge = vm.chargeComplaintActionCategory;\n        model.chargeOption = vm.chargeOption;\n        model.complaintReasonCodeCharge = vm.chargeReasonCode;\n\n        model.dataState = vm.dataState;\n        model.dataStateId = vm.dataStateId;\n        model.discountAmount = vm.discountAmount;\n\n        model.jobId = vm.jobId;\n        model.remarks = vm.remarks;\n\n        model.previousChargeSameAppliance = vm.previousChargeSameAppliance;\n        model.previousChargeSameApplianceConfirmed = vm.previousChargeSameApplianceConfirmed;\n\n        if (vm.netTotal) {\n            model.netTotal = vm.netTotal;\n        }\n        if (vm.chargeTotal) {\n            model.chargeTotal = vm.chargeTotal;\n        }\n        if (vm.totalVatAmount) {\n            model.totalVatAmount = vm.totalVatAmount;\n        }\n        let tasks: ChargeableTask[] = [];\n        vm.tasks.forEach(x => {\n            let chargeableTask = this.createChargeableTaskBusinessModel(x);\n            tasks.push(chargeableTask);\n\n        });\n        model.tasks = tasks;\n        return model;\n    }\n\n    public createChargeableTaskBusinessModel(vm: ChargeTaskViewModel): ChargeableTask {\n        let chargeableTask = new ChargeableTask();\n        chargeableTask.task = vm.task;\n        chargeableTask.isLabourCharge = vm.isLabour;\n        chargeableTask.isPartsCharge = vm.isParts;\n        chargeableTask.chargeDescription = vm.chargeDescription;\n        chargeableTask.vat = vm.vat;\n        chargeableTask.vatCode = vm.vatCode;\n        chargeableTask.fixedPriceQuotationAmount = vm.fixedPriceQuotationAmount;\n        chargeableTask.error = vm.error;\n        chargeableTask.errorDescription = vm.errorDescription;\n        chargeableTask.discountAmount = vm.discountAmount;\n        chargeableTask.discountCode = vm.discountCode;\n        chargeableTask.discountText = vm.discountText;\n        chargeableTask.isSubsequent = vm.isSubsequent;\n\n        vm.partItems.forEach(y => {\n            chargeableTask.addPartItem(y.itemName, y.netAmount, y.isReturn, y.isWarranty, y.qty, 0, \"\", y.returnQty, y.warrantyQty, y.isFromPreviousActivity, y.status);\n        });\n\n        if (vm.labourItem) {\n            const {labourItem} = vm;\n\n            chargeableTask.labourItem.netAmount = new bignumber.BigNumber(labourItem.netAmount);\n\n            let chargePair = new PrimeSubCharge(0, 0);\n            if (labourItem.primeChargeTotal) {\n                chargePair.primeCharge = new bignumber.BigNumber(labourItem.primeChargeTotal);\n            }\n            if (labourItem.subChargeTotal) {\n                chargePair.subsequentCharge = new bignumber.BigNumber(labourItem.subChargeTotal);\n            }\n\n            chargeableTask.updateLabourItem(labourItem.itemName, chargePair, labourItem.isFixed);\n        }\n        return chargeableTask;\n    }\n\n    public createChargesViewModel(model: Charge): ChargeMainViewModel {\n        let vm: ChargeMainViewModel = new ChargeMainViewModel();\n        vm.jobId = model.jobId;\n        vm.chargeComplaintActionCategory = model.complaintActionCategoryCharge;\n        vm.chargeOption = model.chargeOption;\n        vm.dataState = model.dataState;\n        vm.dataStateId = model.dataStateId;\n\n        vm.previousChargeSameAppliance = model.previousChargeSameAppliance;\n        vm.previousChargeSameApplianceConfirmed = model.previousChargeSameApplianceConfirmed;\n\n        vm.remarks = model.remarks;\n        if (model.discountAmount) {\n            vm.discountAmount = new bignumber.BigNumber(model.discountAmount);\n        }\n        if (model.grossTotal) {\n            vm.grossTotal = new bignumber.BigNumber(model.grossTotal);\n        }\n        if (model.netTotal) {\n            vm.netTotal = new bignumber.BigNumber(model.netTotal);\n        }\n        if (model.chargeTotal) {\n            vm.chargeTotal = new bignumber.BigNumber(model.chargeTotal);\n        }\n        if (model.totalVatAmount) {\n            vm.totalVatAmount = new bignumber.BigNumber(model.totalVatAmount);\n        }\n        vm.tasks = [];\n        if (model && model.tasks) {\n            model.tasks.forEach(x => {\n                let taskVm = this.createChargeableTaskViewModel(x);\n\n                vm.tasks.push(taskVm);\n            });\n        }\n        return vm;\n    }\n\n    public createChargeableTaskViewModel(task: ChargeableTask): ChargeTaskViewModel {\n        let taskVm = new ChargeTaskViewModel();\n        taskVm.isLabour = task.isLabourCharge;\n        taskVm.isParts = task.isPartsCharge;\n        taskVm.task = task.task;\n        taskVm.chargeDescription = task.chargeDescription;\n        taskVm.fixedPriceQuotationAmount = task.fixedPriceQuotationAmount;\n        taskVm.error = task.error;\n        taskVm.errorDescription = task.errorDescription;\n        taskVm.discountAmount = task.discountAmount;\n        taskVm.discountCode = task.discountCode;\n        taskVm.discountText = task.discountText;\n        taskVm.isSubsequent = task.isSubsequent;\n\n        if (task.vat) {\n            taskVm.vat = task.vat;\n        }\n        if (task.vatCode) {\n            taskVm.vatCode = task.vatCode;\n        }\n        if (task.grossTotal) {\n            taskVm.grossTotal = task.grossTotal;\n        }\n        if (task.netTotal) {\n            taskVm.netTotal = task.netTotal;\n        }\n        taskVm.partItems = [];\n\n        task.partItems.forEach(partItem => {\n\n            let item = new ChargeItemPartViewModel();\n\n            item.itemName = partItem.description;\n            item.vat = taskVm.vat;\n            // requirement assumption: VAT for task is same as individual task item\n            item.vat = partItem.vat;\n            if (partItem.netAmount) {\n                item.netAmount = partItem.netAmount;\n            }\n            if (partItem.grossAmount) {\n                item.grossAmount = partItem.grossAmount;\n            }\n\n            item.qty = partItem.qty;\n            item.isWarranty = partItem.isWarranty;\n            item.isReturn = partItem.isReturn;\n            item.warrantyQty = partItem.warrantyQty;\n            item.returnQty = partItem.returnQty;\n            item.isFromPreviousActivity = partItem.isFromPreviousActivity;\n            item.status = partItem.status;\n\n            taskVm.partItems.push(item);\n\n        });\n\n        if (task.labourItem) {\n\n            const {labourItem} = task;\n\n            let item = new ChargeItemLabourViewModel();\n\n            item.itemName = labourItem.description;\n            item.vat = taskVm.vat;\n            // requirement assumption: VAT for task is same as individual task item\n            item.vat = labourItem.vat;\n            if (labourItem.netAmount) {\n                item.netAmount = labourItem.netAmount;\n            }\n            if (labourItem.grossAmount) {\n                item.grossAmount = labourItem.grossAmount;\n            }\n\n            item.primeChargeTotal = labourItem.chargePair.primeCharge;\n            item.subChargeTotal = labourItem.chargePair.subsequentCharge;\n\n            taskVm.labourItem = item;\n        }\n        return taskVm;\n    }\n}\n"],"sourceRoot":"../../.."}