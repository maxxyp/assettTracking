{"version":3,"sources":["hema/presentation/factories/applianceGasSafetyFactory.ts"],"names":[],"mappings":"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","file":"applianceGasSafetyFactory.js","sourcesContent":["import { IApplianceGasSafetyFactory } from \"./interfaces/IApplianceGasSafetyFactory\";\nimport { ApplianceGasUnsafeDetail } from \"../../business/models/applianceGasUnsafeDetail\";\nimport { GasSafetyViewModel } from \"../modules/appliances/viewModels/gasSafetyViewModel\";\nimport { GasUnsafetyViewModel } from \"../modules/appliances/viewModels/gasUnsafetyViewModel\";\nimport { ApplianceGasSafety } from \"../../business/models/applianceGasSafety\";\nimport { ApplianceGasReadings } from \"../../business/models/applianceGasReadings\";\nimport { GasApplianceReadingViewModel } from \"../modules/appliances/viewModels/gasApplianceReadingViewModel\";\nimport { ApplianceGasReadingMaster } from \"../../business/models/applianceGasReadingMaster\";\nimport { GasApplianceReadingsMasterViewModel } from \"../modules/appliances/viewModels/gasApplianceReadingsMasterViewModel\";\nimport {YesNoNa} from \"../../business/models/yesNoNa\";\n\nexport class ApplianceGasSafetyFactory implements IApplianceGasSafetyFactory {\n\n    public createApplianceGasReadingsBusinessModel(vm: GasApplianceReadingsMasterViewModel): ApplianceGasReadingMaster {\n        if (!vm) {\n            vm = new GasApplianceReadingsMasterViewModel();\n        }\n\n        let model: ApplianceGasReadingMaster = new ApplianceGasReadingMaster();\n\n        model.workedOnApplianceReadings = vm.workedOnPreliminaryPerformanceReadings;\n        model.workedOnMainReadings = vm.workedOnMainReadings;\n        model.supplementaryBurnerFitted = vm.supplementaryBurnerFitted;\n        model.workedOnSupplementaryApplianceReadings = vm.workedOnSupplementaryPerformanceReadings;\n                \n        model.preliminaryReadings = this.createReadingsBusinessModel(vm.preliminaryReadings);\n        model.supplementaryReadings = this.createReadingsBusinessModel(vm.supplementaryReadings);\n\n        model.dataState = vm.dataState;\n        model.dataStateId = vm.dataStateId;\n\n        return model;\n    }\n\n    public createApplianceGasReadingsViewModel(model: ApplianceGasReadingMaster): GasApplianceReadingsMasterViewModel {\n        let vm = new GasApplianceReadingsMasterViewModel();\n\n        if (!model) {\n            model = new ApplianceGasReadingMaster();\n        }\n\n        vm.workedOnPreliminaryPerformanceReadings = model.workedOnApplianceReadings;\n        vm.workedOnMainReadings = model.workedOnMainReadings;\n        vm.supplementaryBurnerFitted = model.supplementaryBurnerFitted;\n        vm.workedOnSupplementaryPerformanceReadings = model.workedOnSupplementaryApplianceReadings;\n\n        vm.preliminaryReadings = this.createReadingsViewModel(model.preliminaryReadings);\n        vm.supplementaryReadings = this.createReadingsViewModel(model.supplementaryReadings);\n\n        vm.dataState = model.dataState;\n        vm.dataStateId = model.dataStateId;\n\n        return vm;\n    }\n\n    public createApplianceGasSafetyBusinessModel(vm: GasSafetyViewModel): ApplianceGasSafety {\n        if (!vm) {\n            vm = new GasSafetyViewModel();\n        }\n\n        let model: ApplianceGasSafety = new ApplianceGasSafety();\n\n        model.installationTightnessTestSafe = vm.applianceTightness;\n        model.ventilationSafe = vm.ventSizeConfig;\n        model.performanceTestsNotDoneReason = vm.performanceTestsNotDoneReason;\n        model.applianceStripped = vm.applianceStripped;\n        model.performanceTestsNotDoneReasonForSupplementary = vm.performanceTestsNotDoneReasonForSupplementary;\n        model.supplementaryApplianceStripped = vm.supplementaryApplianceStripped;\n        model.visuallyCheckRelight = vm.didYouVisuallyCheck;\n        model.safetyDevice = vm.safetyDevice;\n        model.isApplianceSafe = vm.isApplianceSafe;\n        model.toCurrentStandards = vm.toCurrentStandards;\n        model.workedOnAppliance = vm.workedOnAppliance;\n        model.chimneyInstallationAndTests = vm.chimneyInstallationAndTests;\n\n        model.overrideWorkedOnAppliance = vm.overrideWorkedOnAppliance;\n\n        model.summaryPrelimLpgWarningTrigger = vm.summaryPrelimLpgWarningTrigger;\n        model.summarySuppLpgWarningTrigger = vm.summarySuppLpgWarningTrigger;\n\n        model.applianceMake = vm.applianceMake;\n        model.applianceModel = vm.applianceModel;\n        model.ableToTest = vm.ableToTest;\n        model.requestedToTest = vm.requestedToTest;\n\n        model.dataState = vm.dataState;\n        model.dataStateId = vm.dataStateId;\n        model.dataStateGroup = vm.dataStateGroup;\n\n        if (vm.workedOnAppliance === true) {\n            model.installationSafe = YesNoNa.Na;\n        } else {\n            if (vm.isApplianceSafe === true) {\n                model.installationSafe = YesNoNa.Yes;\n            } else if (vm.isApplianceSafe === false) {\n                model.installationSafe = YesNoNa.No;\n            }\n        }\n\n        return model;\n    }\n\n    public createApplianceGasSafetyViewModel(model: ApplianceGasSafety): GasSafetyViewModel {\n        let vm = new GasSafetyViewModel();\n        if (!model) {\n            model = new ApplianceGasSafety();\n        }\n\n        vm.chimneyInstallationAndTests = model.chimneyInstallationAndTests;\n        vm.applianceTightness = model.installationTightnessTestSafe;\n        vm.ventSizeConfig = model.ventilationSafe;\n        vm.performanceTestsNotDoneReason = model.performanceTestsNotDoneReason;\n        vm.applianceStripped = model.applianceStripped;\n        vm.performanceTestsNotDoneReasonForSupplementary = model.performanceTestsNotDoneReasonForSupplementary;\n        vm.supplementaryApplianceStripped = model.supplementaryApplianceStripped;\n        vm.didYouVisuallyCheck = model.visuallyCheckRelight;\n        vm.safetyDevice = model.safetyDevice;\n        vm.isApplianceSafe = model.isApplianceSafe;\n        vm.toCurrentStandards = model.toCurrentStandards;\n        vm.workedOnAppliance = model.workedOnAppliance;\n\n        vm.overrideWorkedOnAppliance = model.overrideWorkedOnAppliance;\n        vm.summaryPrelimLpgWarningTrigger = model.summaryPrelimLpgWarningTrigger;\n        vm.summarySuppLpgWarningTrigger = model.summarySuppLpgWarningTrigger;\n\n        vm.applianceMake = model.applianceMake;\n        vm.applianceModel = model.applianceModel;\n        vm.ableToTest = model.ableToTest;\n        vm.requestedToTest = model.requestedToTest;\n\n        vm.dataState = model.dataState;\n        vm.dataStateId = model.dataStateId;\n        vm.dataStateGroup = model.dataStateGroup;\n\n        return vm;\n    }\n\n    public createApplianceGasUnsafeBusinessModel(vm: GasUnsafetyViewModel): ApplianceGasUnsafeDetail {\n        if (!vm) {\n            vm = new GasUnsafetyViewModel();\n        }\n\n        let model = new ApplianceGasUnsafeDetail();\n        model.report = vm.report;\n        model.cappedTurnedOff = vm.cappedTurnedOff;\n        model.conditionAsLeft = vm.conditionAsLeft;\n        model.labelAttachedRemoved = vm.labelAttachedRemoved;\n        model.letterLeft = vm.letterLeft;\n        model.ownedByCustomer = vm.ownedByCustomer;\n        model.signatureObtained = vm.signatureObtained;\n\n        return model;\n    }\n\n    public createApplianceGasUnsafeViewModel(model: ApplianceGasUnsafeDetail): GasUnsafetyViewModel {\n        let vm = new GasUnsafetyViewModel();\n        if (!model) {\n            model = new ApplianceGasUnsafeDetail();\n        }\n        vm.report = model.report;\n        vm.cappedTurnedOff = model.cappedTurnedOff;\n        vm.conditionAsLeft = model.conditionAsLeft;\n        vm.labelAttachedRemoved = model.labelAttachedRemoved;\n        vm.letterLeft = model.letterLeft;\n        vm.ownedByCustomer = model.ownedByCustomer;\n        vm.signatureObtained = model.signatureObtained;\n\n        return vm;\n    }\n\n    private createReadingsViewModel(model: ApplianceGasReadings): GasApplianceReadingViewModel {\n        let vm = new GasApplianceReadingViewModel();\n        if (!model) {\n            model = new ApplianceGasReadings();\n        }\n        vm.burnerPressure = model.burnerPressure;\n        vm.gasRateReading = model.gasRateReading;\n        vm.isLpg = model.isLpg;\n\n        vm.readingFirstRatio = model.readingFirstRatio;\n        vm.readingFirstCO = model.readingFirstCO;\n        vm.readingFirstCO2 = model.readingFirstCO2;\n\n        vm.readingMinRatio = model.readingMinRatio;\n        vm.readingMinCO = model.readingMinCO;\n        vm.readingMinCO2 = model.readingMinCO2;\n\n        vm.readingMaxRatio = model.readingMaxRatio;\n        vm.readingMaxCO = model.readingMaxCO;\n        vm.readingMaxCO2 = model.readingMaxCO2;\n\n        vm.readingFinalRatio = model.readingFinalRatio;\n        vm.readingFinalCO = model.readingFinalCO;\n        vm.readingFinalCO2 = model.readingFinalCO2;\n\n        vm.burnerPressureUnsafe = model.burnerPressureUnsafe;\n        vm.finalRatioUnsafe = model.finalRatioUnsafe;\n        vm.gasReadingUnsafe = model.gasReadingUnsafe;\n\n        vm.isUnsafeReadings = model.isUnsafeReadings;\n\n        vm.askIfLpg = model.askIfLpg;\n        return vm;\n    }\n\n    private createReadingsBusinessModel(vm: GasApplianceReadingViewModel): ApplianceGasReadings {\n        let model = new ApplianceGasReadings();\n        if (!vm) {\n            vm = new GasApplianceReadingViewModel();\n        }\n        model.burnerPressure = vm.burnerPressure;\n        model.gasRateReading = vm.gasRateReading;\n        model.isLpg = vm.isLpg;\n\n        model.readingFirstRatio = vm.readingFirstRatio;\n        model.readingFirstCO = vm.readingFirstCO;\n        model.readingFirstCO2 = vm.readingFirstCO2;\n\n        model.readingMinRatio = vm.readingMinRatio;\n        model.readingMinCO = vm.readingMinCO;\n        model.readingMinCO2 = vm.readingMinCO2;\n\n        model.readingMaxRatio = vm.readingMaxRatio;\n        model.readingMaxCO = vm.readingMaxCO;\n        model.readingMaxCO2 = vm.readingMaxCO2;\n\n        model.readingFinalRatio = vm.readingFinalRatio;\n        model.readingFinalCO = vm.readingFinalCO;\n        model.readingFinalCO2 = vm.readingFinalCO2;\n\n        model.burnerPressureUnsafe = vm.burnerPressureUnsafe;\n        model.finalRatioUnsafe = vm.finalRatioUnsafe;\n        model.gasReadingUnsafe = vm.gasReadingUnsafe;\n\n        model.isUnsafeReadings = vm.isUnsafeReadings;\n\n        model.askIfLpg = vm.askIfLpg;\n        return model;\n    }\n}\n"],"sourceRoot":"../../.."}