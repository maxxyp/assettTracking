{"version":3,"sources":["hema/presentation/factories/jobSummaryFactory.ts"],"names":[],"mappings":"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","file":"jobSummaryFactory.js","sourcesContent":["import {inject} from \"aurelia-framework\";\r\n\r\nimport {IJobSummaryFactory} from \"./interfaces/IJobSummaryFactory\";\r\nimport {ITaskFactory} from \"./interfaces/ITaskFactory\";\r\nimport {TaskFactory} from \"./taskFactory\";\r\n\r\nimport {Job} from \"../../business/models/job\";\r\nimport {JobSummaryViewModel} from \"../models/jobSummaryViewModel\";\r\nimport {CustomerHelper} from \"../../core/customerHelper\";\r\nimport {Address} from \"../../business/models/address\";\r\n\r\n@inject(TaskFactory)\r\nexport class JobSummaryFactory implements IJobSummaryFactory {\r\n\r\n    private _taskFactory: ITaskFactory;\r\n\r\n    constructor(taskFactory: ITaskFactory) {\r\n        this._taskFactory = taskFactory;\r\n    }\r\n\r\n    public createJobSummaryViewModel(job: Job): JobSummaryViewModel {\r\n        let vm: JobSummaryViewModel = new JobSummaryViewModel();\r\n        vm.jobNumber = job.id;\r\n        vm.jobState = job.state;\r\n        if (job.visit) {\r\n            vm.specialInstructions = job.visit.specialInstructions;\r\n            vm.engineerInstructions = job.visit.engineerInstructions;\r\n            vm.earliestStartTime = job.visit.timeSlotFrom;\r\n            vm.latestStartTime = job.visit.timeSlotTo;\r\n        }\r\n\r\n        if (job.contact) {\r\n            let contactParts: string[] = [];\r\n\r\n            if (job.contact.title) {\r\n                contactParts.push(job.contact.title);\r\n            }\r\n\r\n            if (job.contact.firstName) {\r\n                contactParts.push(job.contact.firstName);\r\n            }\r\n\r\n            if (job.contact.middleName) {\r\n                contactParts.push(job.contact.middleName);\r\n            }\r\n\r\n            if (job.contact.lastName) {\r\n                contactParts.push(job.contact.lastName);\r\n            }\r\n\r\n            vm.contactName = contactParts.join(\" \");\r\n\r\n            vm.password = job.contact.password;\r\n            vm.contactTelephoneNumber = job.contact.homePhone;\r\n        }\r\n\r\n        if (job.premises) {\r\n            vm.accessInfo = job.premises.accessInfo;\r\n            vm.address = this.removeTrailingCommasFromAddress(job.premises.address);\r\n            vm.premisesId = job.premises.id;\r\n\r\n            let parts: string[] = [];\r\n            let lines = CustomerHelper.getAddressLines(vm.address);\r\n            if (lines && lines.length > 0) {\r\n                parts.push(lines[0]);\r\n            }\r\n            if (vm.address.postCode) {\r\n                parts.push(vm.address.postCode);\r\n            }\r\n\r\n            vm.shortAddress = parts.join(\", \");\r\n        }\r\n\r\n        if (job.tasks) {\r\n            job.tasks.forEach(task => {\r\n                if (task) {\r\n                    vm.tasks.push(this._taskFactory.createTaskSummaryViewModel(task));\r\n                }\r\n            });\r\n        }\r\n\r\n        vm.isLandlordJob = job.isLandlordJob;\r\n\r\n        return vm;\r\n    }\r\n\r\n    private removeTrailingCommasFromAddress(address: Address) : Address {\r\n        address.premisesName = this.removeTrailingCommas(address.premisesName);\r\n\r\n        if (!address.line || address.line.length === 0) {\r\n            return address;\r\n        }\r\n\r\n        address.line = address.line.map(line => this.removeTrailingCommas(line));\r\n        return address;\r\n    }\r\n\r\n    private removeTrailingCommas(str: string): string {\r\n\r\n        if (str) {\r\n            let fmtLine = str.trim();\r\n            if (fmtLine && fmtLine.charAt(str.length - 1) === \",\") {\r\n                fmtLine = fmtLine.substr(0, str.length - 1);\r\n            }\r\n            return fmtLine;\r\n        }\r\n        return str;\r\n    }\r\n}\r\n"],"sourceRoot":"../../.."}