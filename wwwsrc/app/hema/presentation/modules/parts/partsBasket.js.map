{"version":3,"sources":["hema/presentation/modules/parts/partsBasket.ts"],"names":[],"mappings":"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","file":"partsBasket.js","sourcesContent":["/// <reference path=\"./../../../../../typings/app.d.ts\" />\nimport { inject } from \"aurelia-framework\";\nimport { EventAggregator, Subscription } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { BindingEngine, observable } from \"aurelia-binding\";\nimport { Router } from \"aurelia-router\";\nimport { CatalogService } from \"../.././../business/services/catalogService\";\nimport { ICatalogService } from \"../../../business/services/interfaces/ICatalogService\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { AppLauncher } from \"../../../../common/core/services/appLauncher\";\nimport { IAppLauncher } from \"../../../../common/core/services/IappLauncher\";\nimport { IConfigurationService } from \"../../../../common/core/services/IConfigurationService\";\nimport { ConfigurationService } from \"../../../../common/core/services/configurationService\";\nimport { IHemaConfiguration } from \"../../../IHemaConfiguration\";\nimport { IPartService } from \"../../../business/services/interfaces/IPartService\";\nimport { PartService } from \"../../../business/services/partService\";\nimport { StorageService } from \"../../../business/services/storageService\";\nimport { IStorageService } from \"../../../business/services/interfaces/IStorageService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { IValidationService } from \"../../../business/services/interfaces/IValidationService\";\nimport { ValidationService } from \"../../../business/services/validationService\";\nimport { IBusinessRuleService } from \"../../../business/services/interfaces/IBusinessRuleService\";\nimport { BusinessRuleService } from \"../../../business/services/businessRuleService\";\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\nimport { EngineerService } from \"../../../business/services/engineerService\";\nimport { IVanStockService } from \"../../../business/services/interfaces/IVanStockService\";\nimport { VanStockService } from \"../../../business/services/vanStockService\";\nimport { EditableViewModel } from \"../../models/editableViewModel\";\nimport { VanStockNotice } from \"../vanStock/vanStockNotice\";\nimport { Guid } from \"../../../../common/core/guid\";\nimport { Part } from \"../../../business/models/part\";\nimport { ButtonListItem } from \"../../../../common/ui/elements/models/buttonListItem\";\nimport { AdaptBusinessServiceConstants } from \"../../../business/services/constants/adaptBusinessServiceConstants\";\nimport { ChargeServiceConstants } from \"../../../business/services/constants/chargeServiceConstants\";\nimport { AppointmentBookingService } from \"../../../business/services/appointmentBookingService\";\nimport { IAppointmentBookingService } from \"../../../business/services/interfaces/IAppointmentBookingService\";\nimport { StringHelper } from \"../../../../common/core/stringHelper\";\nimport { ObjectHelper } from \"../../../../common/core/objectHelper\";\nimport { AppointmentBooking } from \"../appointment/appointmentBooking\";\nimport { PartsBasketFactory } from \"../../factories/partsBasketFactory\";\nimport { PartsBasketViewModel } from \"../../models/partsBasketViewModel\";\nimport { IPartsBasketFactory } from \"../../factories/interfaces/IPartsBasketFactory\";\nimport * as bignumber from \"bignumber\";\nimport { ConsumableService } from \"../../../business/services/consumableService\";\nimport { IConsumableService } from \"../../../business/services/interfaces/IConsumableService\";\nimport { ConsumablePart } from \"../../../business/models/consumablePart\";\nimport { FavouriteService } from \"../../../business/services/favouriteService\";\nimport { IFavouriteService } from \"../../../business/services/interfaces/IFavouriteService\";\nimport { DateHelper } from \"../../../core/dateHelper\";\nimport { Job } from \"../../../business/models/job\";\nimport * as moment from \"moment\";\nimport { Task } from \"../../../business/models/task\";\nimport { ValidationCombinedResult } from \"../../../business/services/validation/validationCombinedResult\";\nimport { MaterialSearchResult } from \"../../../business/models/materialSearchResult\";\nimport { MaterialDialog } from \"./materialDialog\";\nimport { FeatureToggleService } from \"../../../business/services/featureToggleService\";\nimport { IFeatureToggleService } from \"../../../business/services/interfaces/IFeatureToggleService\";\nimport { VanStockReservationHelper } from \"../vanStock/vanStockReservationHelper\";\nimport { MaterialWithQuantities } from \"../../../business/models/materialWithQuantities\";\n\n@inject(\n    CatalogService,\n    EngineerService,\n    JobService,\n    LabelService,\n    PartService,\n    EventAggregator,\n    DialogService,\n    ValidationService,\n    BusinessRuleService,\n    BindingEngine,\n    Router,\n    VanStockService,\n    StorageService,\n    AppLauncher,\n    ConfigurationService,\n    AppointmentBookingService,\n    PartsBasketFactory,\n    ConsumableService,\n    FavouriteService,\n    FeatureToggleService\n)\nexport class PartsBasket extends EditableViewModel {\n    public viewModel: PartsBasketViewModel;\n    public tasksCatalog: { id: string; text: string }[];\n    @observable public partsToOrderTotalPrice: number;\n    @observable public showPartsToOrderList: boolean;\n    public hideDeliverToSiteCheckbox: boolean;\n    public yesNoLookup: ButtonListItem[];\n    public quantityIncrementStep: number;\n    public priceDecimalPlaces: number;\n    @observable public showBookAppointmentButton: boolean;\n    public search: Element;\n    public brPartOrderStatus: string;\n    public brVanStockPartOrderStatus: string;\n    public isFullScreen: boolean;\n    public materialSearchResults: { [stockReferenceId: string]: MaterialSearchResult };\n    public inboundReservations: { [stockReferenceId: string]: number };\n\n    public isVanStockEnabled: boolean;\n\n    private _partService: IPartService;\n    private _eventSubscriptions: Subscription[];\n    private _bindingEngine: BindingEngine;\n    private _viewModelPropertySubscriptions: Subscription[];\n    private _userPatch: string;\n    private _userSector: string;\n    private _router: Router;\n    private _vanStockService: IVanStockService;\n    private _storageService: IStorageService;\n    private _consumableService: IConsumableService;\n    private _favouriteService: IFavouriteService;\n    private _featureToggleService: IFeatureToggleService;\n\n    private _consumablesRule: string;\n    private _brWorkedOnClaimRejectCoveredCode: string;\n    private _brFirstVisitJobType: string;\n    private _partsCurrencyUnit: number;\n    private _appLauncher: IAppLauncher;\n    private _configurationService: IConfigurationService;\n    private _appointmentBookingService: IAppointmentBookingService;\n    private _partsBasketFactory: IPartsBasketFactory;\n    private _isPartConsumableStockReferencePrefix: string[];\n    private _job: Job;\n\n    constructor(\n        catalogService: ICatalogService,\n        engineerService: IEngineerService,\n        jobService: IJobService,\n        labelService: ILabelService,\n        partService: IPartService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        validationService: IValidationService,\n        businessRuleService: IBusinessRuleService,\n        bindingEngine: BindingEngine,\n        router: Router,\n        vanStockService: IVanStockService,\n        storageService: IStorageService,\n        appLauncher: IAppLauncher,\n        configurationService: IConfigurationService,\n        appointmentBookingService: IAppointmentBookingService,\n        partsBasketFactory: IPartsBasketFactory,\n        consumableService: IConsumableService,\n        favouriteService: IFavouriteService,\n        featureToggleService: IFeatureToggleService\n    ) {\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRuleService, catalogService);\n        this._partService = partService;\n        this._eventSubscriptions = [];\n        this._viewModelPropertySubscriptions = [];\n        this._bindingEngine = bindingEngine;\n        this._router = router;\n        this._vanStockService = vanStockService;\n        this._storageService = storageService;\n        this._appLauncher = appLauncher;\n        this._configurationService = configurationService;\n        this._appointmentBookingService = appointmentBookingService;\n        this._partsBasketFactory = partsBasketFactory;\n        this._consumableService = consumableService;\n        this._favouriteService = favouriteService;\n        this._featureToggleService = featureToggleService;\n        this.isFullScreen = window.isFullScreen;\n        this.materialSearchResults = {};\n    }\n\n    public async activateAsync(): Promise<any> {\n        this.isVanStockEnabled = this._featureToggleService.isAssetTrackingEnabled();\n        this._eventSubscriptions.push(\n            this._eventAggregator.subscribe(AdaptBusinessServiceConstants.ADAPT_PARTS_SELECTED, (partIds: Guid[]) => this.adaptPartLiveUpdate(partIds))\n        );\n\n        this._userPatch = await this._storageService.getUserPatch();\n        this._userSector = await this._storageService.getWorkingSector();\n\n        await this.loadBusinessRules();\n        await this.buildBusinessRules();\n        this.yesNoLookup = await this.buildNoYesList();\n\n        await this.load();\n        this.showContent();\n    }\n\n    public async deactivateAsync(): Promise<void> {\n        this.disposeViewModelPropertySubscriptions();\n        this._eventSubscriptions.forEach(s => s.dispose());\n    }\n\n    public async showSearchResults(part: Part): Promise<void> {\n        if (this.isVanStockEnabled) {\n            await VanStockReservationHelper.launchReservationDialog(\n                this._dialogService,\n                this._vanStockService,\n                this.materialSearchResults[part.stockReferenceId],\n                async hasAReservationBeenMade => {\n                    if (hasAReservationBeenMade) {\n                        this.showSuccess(\"Material Request\", \"Material request sent.\");\n                        await this.rebuildInboundReservations();\n                    }\n                }\n            );\n        } else {\n            await this._dialogService.open({\n                viewModel: VanStockNotice,\n                model: {\n                    jobId: this.jobId,\n                    part: part,\n                    userPatch: this._userPatch\n                }\n            });\n        }\n    }\n\n    public goToInOutScreen(): void {\n        this._router.navigate(\"/consumables/in-out-stock\");\n    }\n\n    public launchAdapt(): void {\n        this._appLauncher.launchApplication(this._configurationService.getConfiguration<IHemaConfiguration>().adaptLaunchUri);\n    }\n\n    public async launchMaterialDialog(params: { part: Part }): Promise<void> {\n        const {part} = params;\n\n        await this._dialogService.open({\n            viewModel: MaterialDialog,\n            model : {\n                part,\n                MaterialSearchResult: this.materialSearchResults[part.stockReferenceId]\n            }\n        });\n    }\n\n    public bookAnAppointment(): void {\n        this._router.navigateToRoute(\"appointmentMain\", { jobId: this.jobId });\n    }\n\n    public setSameRefAsOriginal(part: Part): void {\n        part.warrantyReturn.removedPartStockReferenceId = part.stockReferenceId;\n    }\n\n    public testValidConsumable(consumableCode: string): boolean {\n        let regexTest = new RegExp(this._consumablesRule);\n        return regexTest.test(consumableCode[0]); // todo doesn't work\n    }\n\n    public async toggleFavourite(part: Part): Promise<void> {\n        part.isFavourite = !part.isFavourite;\n\n        this.viewModel.partsInBasket\n            .filter(p => p.description === part.description)\n            .forEach(p => {\n                p.isFavourite = part.isFavourite;\n            });\n\n        if (part.isFavourite) {\n            await this._favouriteService.addFavouritePart(part);\n        } else {\n            // todo: favouriteService needs a better\n            let favouritesResult = await this._favouriteService.getFavouritesList();\n            if (favouritesResult && favouritesResult.favourites) {\n                let foundPartIndex = favouritesResult.favourites.findIndex(favouritePart => (<Part>favouritePart).description === part.description);\n                if (foundPartIndex !== -1) {\n                    await this._favouriteService.removeFavourite(foundPartIndex);\n                }\n            }\n        }\n    }\n\n    public quickAdd(part: Part): void {\n        part.quantity = 1;\n        part.partOrderStatus = this.materialSearchResults[part.stockReferenceId].local.completionStatus === \"FOUND\"\n            ? \"V\"\n            : \"O\";\n    }\n\n    public showAddPartManually(): void {\n        if (this.viewModel.showAddPartManually) {\n            return;\n        }\n        this.viewModel.showAddPartManually = true;\n        this.viewModel.showRemainingAddPartManuallyFields = false;\n        this.viewModel.manualPartDetail = new Part();\n    }\n\n    public hideAddPartManually(): void {\n        if (!this.viewModel.showAddPartManually) {\n            return;\n        }\n        this.viewModel.showAddPartManually = false;\n        this.viewModel.showRemainingAddPartManuallyFields = false;\n        this.viewModel.manualPartDetail = undefined;\n    }\n\n    public async searchForManuallyAddedPart(): Promise<void> {\n        let validationResult = await this.validateSingleRule(\"viewModel.manualPartDetail.stockReferenceId\");\n        if (!validationResult.isValid) {\n            return;\n        }\n\n        this.viewModel.manualPartDetail.stockReferenceId = this.viewModel.manualPartDetail.stockReferenceId.toUpperCase();\n\n        this.viewModel.showRemainingAddPartManuallyFields = true;\n        let partFoundInCatalog = await this._catalogService.getGoodsType(this.viewModel.manualPartDetail.stockReferenceId);\n        \n        let populate = (description: string, charge: number, isFound: boolean) => {            \n            this.viewModel.manualPartDetail.description = description;\n            this.viewModel.manualPartDetail.price = new bignumber.BigNumber(charge).times(this._partsCurrencyUnit);\n            this.viewModel.manualPartDetail.quantity = 0;\n            this.viewModel.manualPartDetail.wasFoundUsingManualEntry = isFound;\n        };\n\n        if (partFoundInCatalog) {\n            populate(partFoundInCatalog.description, partFoundInCatalog.charge, true);\n        } else {\n            let ruleString = \"viewModel.manualPartDetail.*\";\n            let partFoundInVanStock: MaterialWithQuantities[] = await this._vanStockService.searchLocalVanStock(1, undefined, this.viewModel.manualPartDetail.stockReferenceId) || [];\n            \n            if (!!partFoundInVanStock.length && partFoundInVanStock[0].description) {\n                populate(partFoundInVanStock[0].description, 0, false);\n                ruleString = \"viewModel.manualPartDetail.price\";\n            } \n            \n            this.validateSingleRule(ruleString);\n        }\n    }\n\n    public async addManualPartToOrderList(): Promise<void> {\n        let validationCombinedResult = await this.validateSingleRule(\"viewModel.manualPartDetail.*\");\n        if (!validationCombinedResult.isValid) {\n            return;\n        }\n        await this.insertPartsIntoBasket([ObjectHelper.clone(this.viewModel.manualPartDetail)]);\n        this.hideAddPartManually();\n    }\n\n    public async adaptPartLiveUpdate(incomingPartIds: Guid[] = []): Promise<void> {\n        let partsDetail = await this._partService.getPartsBasket(this.jobId);\n\n        let partsNotAlreadyInBasket = incomingPartIds\n            .map(incomingPartId => partsDetail.partsToOrder.find(partToOrder => partToOrder.id === incomingPartId))\n            .filter(incomingPart => !this.viewModel.partsInBasket.some(partInBasket => partInBasket === incomingPart.id));\n\n        await this.insertPartsIntoBasket(partsNotAlreadyInBasket);\n    }\n\n    public async removePart(event: MouseEvent, part: Part, isATransferToConsumables: boolean): Promise<void> {\n        event.stopPropagation();\n\n        if (isATransferToConsumables) {\n            let result = await this.showConfirmation(this.getLabel(\"confirmation\"), this.getLabel(\"addToConsumablesQuestion\"));\n            if (result.wasCancelled) {\n                return;\n            }\n            await this._consumableService.addConsumableToBasket(new ConsumablePart(part.stockReferenceId, part.description, part.quantity));\n        } else {\n            let shouldDelete = await this.showDeleteConfirmation();\n            if (!shouldDelete) {\n                return;\n            }\n        }\n\n        this.viewModel.partsInBasket.splice(this.viewModel.partsInBasket.indexOf(part), 1);\n        this.removePartsValidationRules(this.viewModel.partsInBasket.length);\n        await this.setAndTriggerViewModelPropertyChangeHandlers();\n    }\n\n    public async selectMainPart(part: Part, isSelected: boolean): Promise<void> {\n        this.setDirty(true); // by using a changeHandler rather than binding, the checkboxes will not inherently register a dirty change\n        if (isSelected) {\n            let result = await this.showConfirmation(this.getLabel(\"confirmation\"), this.getLabel(\"selectMainPartQuestion\"));\n            if (!result.wasCancelled) {\n                let preexistingMainPartForThisTask = this.viewModel.partsInBasket.find(p => p.taskId === part.taskId && p.isMainPart && p !== part);\n                if (!preexistingMainPartForThisTask) {\n                    part.isMainPart = true;\n                    return;\n                } else {\n                    let confirmResult = await this.showConfirmation(this.getLabel(\"confirmation\"), this.getLabel(\"makeMainPartForActivity\"));\n                    if (!confirmResult.wasCancelled) {\n                        part.isMainPart = true;\n                        preexistingMainPartForThisTask.isMainPart = false;\n                        return;\n                    }\n                }\n            }\n        }\n        // if here then user unset the checkbox, or has set the box but then declined one of the dialogs\n        part.isMainPart = true; // hack so that the screen checkbox ui updates\n        part.isMainPart = false;\n    }\n\n    // todo: delete me once we can toggle via modal\n    public selectOrderType(part: Part, isSelected: boolean): void {\n        this.setDirty(true); // by using a changeHandler rather than binding, the checkboxes will not inherently register a dirty change\n        part.partOrderStatus = isSelected ? this.brVanStockPartOrderStatus : this.brPartOrderStatus;\n    }\n\n    protected async loadModel(): Promise<void> {\n\n        await this.rebuildInboundReservations();\n\n        this._job = await this._jobService.getJob(this.jobId);\n\n        let getTaskLookup = async (task: Task) => {\n            let jobCodeCatalogEntry = await this._catalogService.getJCJobCode(task.jobType);\n            let objectTypeCatalogEntry = await this._catalogService.getObjectType(task.applianceType);\n            let chargeTypeCatalog = await this._catalogService.getChargeType(task.chargeType);\n\n            let text = `${(jobCodeCatalogEntry && jobCodeCatalogEntry.fieldAppCode) || task.jobType} -\n                                ${(objectTypeCatalogEntry &&\n                                        objectTypeCatalogEntry.applianceTypeDescription) ||\n                                        task.applianceType} -\n                                ${(chargeTypeCatalog && chargeTypeCatalog.chargeTypeDescription) ||\n                                        task.chargeType}`;\n\n            return { id: task.id, text };\n        };\n\n        this.tasksCatalog = await Promise.all(\n            this._job.tasks.filter(task => task && task.applianceType && task.isMiddlewareDoTodayTask).map(async task => await getTaskLookup(task))\n        );\n\n        let partsDetail = await this._partService.getPartsBasket(this.jobId);\n        this.viewModel = this._partsBasketFactory.createPartsBasketViewModel(partsDetail);\n        this.setInitialDataState(this.viewModel.dataStateId, this.viewModel.dataState);\n\n        await this.initialiseNonPartsValidationRules();\n        await this.insertPartsIntoBasket(this.viewModel.partsToOrder);\n\n        // think this is here in case the taskItem screen has not been visited, is this mutating stored data\n        // todo: why\n        await this._partService.setPartsRequiredForTask(this._job.id);\n        await this.validateAllRules();\n    }\n\n    protected async saveModel(): Promise<void> {\n        this.viewModel.dataState = this.getFinalDataState();\n        this.viewModel.partsToOrder = this.viewModel.partsInBasket;\n\n        if (this.viewModel.partsInBasket.some(x => x.partOrderStatus === this.brPartOrderStatus)) {\n            let appointment = await this._appointmentBookingService.load(this.jobId);\n\n            if (appointment && appointment.promisedDate) {\n                let businessRules = await this._businessRuleService.getRuleGroup(StringHelper.toCamelCase(ObjectHelper.getClassName(AppointmentBooking)));\n                if (\n                    this._appointmentBookingService.checkIfAppointmentNeedsToBeRebooked(\n                        appointment.promisedDate,\n                        moment(DateHelper.getTodaysDate()).toDate(),\n                        businessRules[\"cutOffTime\" + \"\"]\n                    )\n                ) {\n                    this.showInfo(this.getLabel(\"appointmentBooking\"), this.getLabel(\"appointmentBookingMessage\"));\n                }\n            }\n        }\n\n        await this._partService.savePartsBasket(this.jobId, this.viewModel);\n\n        if (this._isDirty) {\n            this._eventAggregator.publish(ChargeServiceConstants.CHARGE_UPDATE_START, this.jobId);\n        }\n    }\n\n    protected async clearModel(): Promise<void> {\n        this.viewModel.partsInBasket.forEach((_, index) => this.removePartsValidationRules(index));\n        this.viewModel.partsInBasket = [];\n        this.viewModel.manualPartDetail = undefined;\n        this.viewModel.showAddPartManually = false;\n        this.viewModel.showRemainingAddPartManuallyFields = false;\n        await this.setAndTriggerViewModelPropertyChangeHandlers();\n    }\n\n    protected validationUpdated(result: ValidationCombinedResult): void {\n        result.groups.forEach(group => {\n            let overallPartValidity = Object.keys(result.propertyResults)\n                .filter(key => key !== group && result.propertyResults[key].property.lastIndexOf(\"viewModel.\" + group) === 0)\n                .every(key => result.propertyResults[key].isValid);\n\n            let part: Part = ObjectHelper.getPathValue(this.viewModel, group);\n            if (part) {\n                part.isValid = overallPartValidity;\n            }\n        });\n    }\n\n    private async insertPartsIntoBasket(partsToAdd: Part[]): Promise<void> {\n        for (let part of partsToAdd) {\n            this.viewModel.partsInBasket.push(part);\n            this.insertPartsValidationRules(this.viewModel.partsInBasket.length - 1);\n        }\n        await this.setAndTriggerViewModelPropertyChangeHandlers();\n    }\n\n    private async setAndTriggerViewModelPropertyChangeHandlers(): Promise<void> {\n        this.disposeViewModelPropertySubscriptions();\n\n        let hasFullCatalogs = async (stockReferenceId: string) => {\n            if (!stockReferenceId) {\n                return false;\n            }\n            let foundPartInCatalog = await this._catalogService.getGoodsType(stockReferenceId);\n            if (!foundPartInCatalog) {\n                return false;\n            }\n            let foundProductGroup = (await this._catalogService.getProductGroups()).find(x => x.productGroupCode === foundPartInCatalog.productGroupCode);\n            if (!foundProductGroup) {\n                return false;\n            }\n            return (await this._catalogService.getPartTypes()).some(\n                partType => partType.productGroupCode === foundProductGroup.productGroupCode && partType.partTypeCode === foundPartInCatalog.partTypeCode\n            );\n        };\n\n        let partOrListChanged = async (forceWarrantyCheckPart?: Part) => {\n            for (let part of this.viewModel.partsInBasket) {\n                part.id = part.id || Guid.newGuid();\n                part.quantity = part.quantity || 1;\n                part.partOrderStatus = part.partOrderStatus || this.brPartOrderStatus;\n                part.taskId = this.tasksCatalog.length === 1 ? this.tasksCatalog[0].id : part.taskId;\n\n                if (part.partOrderStatus === this.brVanStockPartOrderStatus) {\n                    part.isPriorityPart = false;\n                }\n\n                if (part.isConsumable === undefined) {\n                    part.isConsumable =\n                        part.stockReferenceId && this._isPartConsumableStockReferencePrefix.some(prefix => StringHelper.startsWith(part.stockReferenceId, prefix));\n                }\n\n                let favouritesModel = await this._favouriteService.getFavouritesList();\n                part.isFavourite = favouritesModel && favouritesModel.favourites && favouritesModel.favourites.some(x => x.description === part.description);\n\n                if (part.warrantyEstimate === undefined || forceWarrantyCheckPart === part) {\n                    part.warrantyEstimate = await this._partService.getPartWarrantyEstimate(this.jobId, part.stockReferenceId, part.taskId);\n                }\n\n                if (this.isVanStockEnabled) {\n                    if (!this.materialSearchResults[part.stockReferenceId]) {\n                        this.materialSearchResults[part.stockReferenceId] = await this._vanStockService.getBindableMaterialSearchResult(part.stockReferenceId);\n                    }\n                } else {\n                    if (part.isInPatchVanStock === undefined) {\n                        let engineersWithPart = (await this._vanStockService.getEngineersWithPart(this._userPatch, this._userSector, part.stockReferenceId)) || [];\n                        part.isInPatchVanStock = !!engineersWithPart.length;\n                        part.patchVanStockEngineers = engineersWithPart;\n                    }\n                }\n\n                // if (!part.partOrderStatus) {\n                //     part.partOrderStatus = this.materialSearchResults[part.stockReferenceId].local.completionStatus === \"FOUND\"\n                //         ? this.brVanStockPartOrderStatus\n                //         : this.brPartOrderStatus;\n                // }\n\n                if (part.hasFullCatalogsForMainPart === undefined) {\n                    part.hasFullCatalogsForMainPart = await hasFullCatalogs(part.stockReferenceId);\n                }\n\n                let taskItem = part.taskId && this._job.tasks.find(task => task.id === part.taskId);\n                part.isMainPartOptionAvailable =\n                    part.hasFullCatalogsForMainPart &&\n                    taskItem &&\n                    taskItem.workedOnCode !== this._brWorkedOnClaimRejectCoveredCode &&\n                    taskItem.jobType !== this._brFirstVisitJobType;\n\n                if (!part.isMainPartOptionAvailable) {\n                    part.isMainPart = false;\n                }\n\n                part.hasTaskWithWrongStatus = !(await this._partService.getPartStatusValidity(part, this._job));\n            }\n\n            this.showPartsToOrderList = !!this.viewModel.partsInBasket.length;\n            this.showBookAppointmentButton = this.viewModel.partsInBasket.some(x => x.partOrderStatus === this.brPartOrderStatus);\n            this.hideDeliverToSiteCheckbox = this.viewModel.partsInBasket.every(p => p.partOrderStatus === this.brVanStockPartOrderStatus);\n            this.viewModel.deliverPartsToSite = this.viewModel.partsInBasket.length ? this.viewModel.deliverPartsToSite : null;\n\n            let everyMandatoryTaskIsHappy = this._job.tasks\n                .filter(task => task.status === \"IP\") // todo: is this right, should WA be included\n                .every(task => this.viewModel.partsInBasket.some(p => p.taskId === task.id && p.partOrderStatus === this.brPartOrderStatus));\n\n            this.viewModel.hasAtLeastOneWrongActivityStatus = !everyMandatoryTaskIsHappy || this.viewModel.partsInBasket.some(p => p.hasTaskWithWrongStatus);\n\n            this.partsToOrderTotalPrice = this.viewModel.partsInBasket.reduce((prev, curr) => {\n                return prev + (curr.quantity || 0) * new bignumber.BigNumber(curr.price).toNumber();\n            }, 0);\n\n            await this.validateAllRules();\n        };\n\n        this._viewModelPropertySubscriptions.push(this._bindingEngine.collectionObserver(this.viewModel.partsInBasket).subscribe(() => {\n            partOrListChanged();\n        }));\n        this.viewModel.partsInBasket.forEach(part => {\n            this._viewModelPropertySubscriptions.push(\n                this._bindingEngine.propertyObserver(part, \"quantity\").subscribe(() => {\n                    partOrListChanged();\n                }),\n                this._bindingEngine.propertyObserver(part, \"taskId\").subscribe(() => {\n                    partOrListChanged(part);\n                }),\n                this._bindingEngine.propertyObserver(part, \"partOrderStatus\").subscribe(() => {\n                    partOrListChanged();\n                })\n            );\n        });\n\n        await partOrListChanged();\n    }\n\n    private disposeViewModelPropertySubscriptions(): void {\n        this._viewModelPropertySubscriptions.forEach(subscription => subscription.dispose());\n    }\n\n    private async buildBusinessRules(): Promise<void> {\n        this._consumablesRule = this.getBusinessRule<string>(\"consumablesRule\");\n        this.brVanStockPartOrderStatus = this.getBusinessRule<string>(\"vanStockPartOrderStatus\");\n        this.brPartOrderStatus = this.getBusinessRule<string>(\"partOrderStatus\");\n        this.quantityIncrementStep = this.getBusinessRule<number>(\"quantityIncrementStep\");\n        this.priceDecimalPlaces = this.getBusinessRule<number>(\"priceDecimalPlaces\");\n        this._brWorkedOnClaimRejectCoveredCode = this.getBusinessRule<string>(\"workedOnClaimRejectCoveredCode\");\n        this._partsCurrencyUnit = this.getBusinessRule<number>(\"partsCurrencyUnit\");\n        this._isPartConsumableStockReferencePrefix = (this.getBusinessRule<string>(\"isPartConsumableStockReferencePrefix\") || \"\").split(\",\");\n        this._brFirstVisitJobType = (await this._businessRuleService.getQueryableRuleGroup(\"taskItem\")).getBusinessRule<string>(\"firstVisitJob\");\n    }\n\n    private async initialiseNonPartsValidationRules(): Promise<void> {\n        await this.buildValidation([\n            {\n                property: \"viewModel.manualPartDetail.stockReferenceId\",\n                groups: [\"manualPartDetail\"],\n                condition: () => this.viewModel.showAddPartManually\n            },\n            {\n                property: \"viewModel.manualPartDetail.description\",\n                groups: [\"manualPartDetail\"],\n                condition: () => this.viewModel.showAddPartManually && this.viewModel.showRemainingAddPartManuallyFields\n            },\n            {\n                property: \"viewModel.manualPartDetail.price\",\n                groups: [\"manualPartDetail\"],\n                condition: () => this.viewModel.showAddPartManually && this.viewModel.showRemainingAddPartManuallyFields\n            },\n            {\n                property: \"viewModel.partsListValidation\",\n                required: false,\n                passes: [\n                    {\n                        test: () => !this.viewModel.hasAtLeastOneWrongActivityStatus,\n                        message: \"At least one of the activities has an incorrect status\"\n                    }\n                ]\n            }\n        ]);\n    }\n\n    private insertPartsValidationRules(index: number): void {\n        // todo: are some of these basedOns wrong?                They don't seem to exists!                Maybe Sumair did it...?\n        let isVanStock = () =>\n            this.viewModel.partsInBasket &&\n            this.viewModel.partsInBasket[index] &&\n            this.viewModel.partsInBasket[index].partOrderStatus === this.brVanStockPartOrderStatus;\n\n        let isVanStockWarrantyReturn = () =>\n            isVanStock() && this.viewModel.partsInBasket[index].warrantyReturn && this.viewModel.partsInBasket[index].warrantyReturn.isWarrantyReturn;\n\n        let root = \"viewModel.partsInBasket[\" + index + \"].\";\n        [\n            {\n                property: root + \"taskId\",\n                groups: [\"partsInBasket[\" + index + \"]\"],\n                basedOn: \"viewModel.manualPartDetail.taskId\",\n                passes: [\n                    {\n                        test: () => {\n                            return !this.viewModel.partsInBasket[index].hasTaskWithWrongStatus;\n                        },\n                        message: \"** The associated task an incompatible status **\"\n                    }\n                ],\n                message: \"Select the associated task\"\n            },\n            {\n                property: root + \"quantity\",\n                groups: [\"partsInBasket[\" + index + \"]\"],\n                // basedOn: \"viewModel.manualPartDetail.quantity\",\n                passes: [\n                    {\n                        test: () => !!this.viewModel.partsInBasket[index].quantity,\n                        message: \"\"\n                    }\n                ]\n            },\n            {\n                property: root + \"partOrderStatus\",\n                groups: [\"partsInBasket[\" + index + \"]\"],\n                // basedOn: \"viewModel.manualPartDetail.partOrderStatus\",\n                passes: [\n                    {\n                        test: () => !!this.viewModel.partsInBasket[index].partOrderStatus,\n                        message: \"\"\n                    }\n                ]\n            },\n            {\n                property: root + \"warrantyReturn.isWarrantyReturn\",\n                groups: [\"partsInBasket[\" + index + \"]\"],\n                basedOn: \"viewModel.manualPartDetail.warrantyReturn.isWarrantyReturn\",\n                condition: () => isVanStock()\n            },\n            {\n                property: root + \"warrantyReturn.quantityToClaimOrReturn\",\n                groups: [\"partsInBasket[\" + index + \"]\"],\n                basedOn: \"viewModel.manualPartDetail.warrantyReturn.quantityToClaimOrReturn\",\n                condition: () => isVanStockWarrantyReturn(),\n                passes: [\n                    {\n                        test: () => this.viewModel.partsInBasket[index].quantity >= this.viewModel.partsInBasket[index].warrantyReturn.quantityToClaimOrReturn,\n                        message: \"\"\n                    }\n                ]\n            },\n            {\n                property: root + \"warrantyReturn.removedPartStockReferenceId\",\n                groups: [\"partsInBasket[\" + index + \"]\"],\n                basedOn: \"viewModel.manualPartDetail.stockReferenceId\",\n                condition: () => isVanStockWarrantyReturn()\n            },\n            {\n                property: root + \"warrantyReturn.reasonForClaim\",\n                groups: [\"partsInBasket[\" + index + \"]\"],\n                basedOn: \"parts.warrantyReturn.reasonForClaim\",\n                condition: () => isVanStockWarrantyReturn()\n            }\n        ].forEach(rule => this._validationService.addDynamicRule(this._validationController, rule));\n    }\n\n    private removePartsValidationRules(index: number): void {\n        [\n            \"viewModel.partsInBasket[\" + index + \"].taskId\",\n            \"viewModel.partsInBasket[\" + index + \"].quantity\",\n            \"viewModel.partsInBasket[\" + index + \"].partOrderStatus\",\n            \"viewModel.partsInBasket[\" + index + \"].warrantyReturn.isWarrantyReturn\",\n            \"viewModel.partsInBasket[\" + index + \"].warrantyReturn.quantityToClaimOrReturn\",\n            \"viewModel.partsInBasket[\" + index + \"].warrantyReturn.removedPartStockReferenceId\",\n            \"viewModel.partsInBasket[\" + index + \"].warrantyReturn.reasonForClaim\"\n        ].forEach(ruleKey => this._validationService.removeDynamicRule(this._validationController, ruleKey));\n    }\n\n    private async rebuildInboundReservations(): Promise<void> {\n        try {\n            this.inboundReservations = (await this._vanStockService.getMaterialRequests()).inboundMaterials\n                                        .filter(reservation => reservation.status === \"PENDING\")\n                                        .reduce((acc, curr) => {\n                                            acc[curr.stockReferenceId] = (acc[curr.stockReferenceId] || 0) + curr.quantity;\n                                            return acc;\n                                        }, <{ [stockReferenceId: string]: number }>{});\n        } catch (error) {\n\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}