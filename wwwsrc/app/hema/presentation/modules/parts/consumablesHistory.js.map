{"version":3,"sources":["hema/presentation/modules/parts/consumablesHistory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAYA;QAAwC,sCAAa;QAGjD,4BACI,YAA2B,EAC3B,eAAgC,EAChC,aAA4B,EAC5B,iBAAqC;YAJzC,YAKI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAEtD;YADG,KAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;;QAC/C,CAAC;QACM,0CAAa,GAApB;YAAA,iBAYC;YAXG,IAAI,CAAC,iBAAiB,GAAG,IAAI,qCAAqB,EAAE,CAAC;YACrD,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC;gBAClD,KAAI,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,CAAC,IAAI,CAAC,UAAA,WAAW;oBAC1D,WAAW,CAAC,aAAa,CAAC,OAAO,CAAC,UAAA,IAAI;wBAClC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;oBACjE,CAAC,CAAC,CAAC;oBACH,KAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;oBACrC,KAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;QAEP,CAAC;QACM,oCAAO,GAAd,UAAe,QAAwB;YACnC,yGAAyG;YACzG,iFAAiF;YACjF,IAAI,IAAI,GAAoB;gBACxB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,QAAQ,EAAE,CAAC;aACd,CAAC;YAEF,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACvD,CAAC;QAlCQ,kBAAkB;YAD9B,0BAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,EAAE,qCAAiB,CAAC;qDAM/C,0CAAe;gBACjB,8BAAa;WANvB,kBAAkB,CAmC9B;QAAD,yBAAC;KAnCD,AAmCC,CAnCuC,6BAAa,GAmCpD;IAnCY,gDAAkB","file":"consumablesHistory.js","sourcesContent":["import { inject } from \"aurelia-framework\";\nimport { BaseViewModel } from \"../../models/baseViewModel\";\nimport { ConsumableService } from \"../../../business/services/consumableService\";\nimport { IConsumableService } from \"../../../business/services/interfaces/IConsumableService\";\nimport { ConsumablesBasket as ConsumablePartsBasket } from \"../../../business/models/consumablesBasket\";\nimport { ConsumablePart } from \"../../../business/models/consumablePart\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport * as moment from \"moment\";\n@inject(LabelService, EventAggregator, DialogService, ConsumableService)\nexport class ConsumablesHistory extends BaseViewModel {\n    public consumablesBasket: ConsumablePartsBasket;\n    public consumableService: IConsumableService;\n    constructor(\n        labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        consumableService: IConsumableService) {\n        super(labelService, eventAggregator, dialogService);\n        this.consumableService = consumableService;\n    }\n    public activateAsync(): Promise<any> {\n        this.consumablesBasket = new ConsumablePartsBasket();\n        return this.consumableService.clearOldOrders(60).then(() => {\n            this.consumableService.getConsumablesBasket().then(partsBasket => {\n                partsBasket.partsInBasket.forEach(part => {\n                    part.dateAdded = moment(part.dateAdded).format(\"YYYY-MM-DD\");\n                });\n                this.consumablesBasket = partsBasket;\n                this.showContent();\n            });\n        });\n\n    }\n    public reOrder(partItem: ConsumablePart): void {\n        // mark confimed that a reorder part item quantity from order-history will always be one - defect DF_1350\n        // quantity can be changed in the consumable-basket view before placing an order.\n        let part = <ConsumablePart> {            \n            referenceId: partItem.referenceId,\n            description: partItem.description,\n            quantity: 1\n        };\n        \n        this.consumableService.addConsumableToBasket(part);\n    }\n}\n"],"sourceRoot":"../../../.."}