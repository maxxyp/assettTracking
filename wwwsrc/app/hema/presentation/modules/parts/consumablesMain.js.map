{"version":3,"sources":["hema/presentation/modules/parts/consumablesMain.ts"],"names":[],"mappings":"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","file":"consumablesMain.js","sourcesContent":["import {Router, RouterConfiguration, RouteConfig} from \"aurelia-router\";\nimport {DataState} from \"../../../business/models/dataState\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {VanStockService} from \"../../../business/services/vanStockService\";\nimport {IVanStockService} from \"../../../business/services/interfaces/IVanStockService\";\nimport {FeatureToggleService} from \"../../../business/services/featureToggleService\";\nimport {IFeatureToggleService} from \"../../../business/services/interfaces/IFeatureToggleService\";\nimport {VanStockConstants} from \"../../../business/services/constants/vanStockConstants\";\nimport {EventAggregator, Subscription} from \"aurelia-event-aggregator\";\nimport {PageService} from \"../../services/pageService\";\nimport {IPageService} from \"../../services/interfaces/IPageService\";\nimport {ObjectHelper} from \"../../../../common/core/objectHelper\";\nimport {ConsumableServiceConstants} from \"../../../business/services/constants/consumableServiceConstants\";\nimport {ConsumablesBasket} from \"./consumablesBasket\";\nimport {IStorageService} from \"../../../business/services/interfaces/IStorageService\";\nimport {StorageService} from \"../../../business/services/storageService\";\n\n@inject(VanStockService, FeatureToggleService, EventAggregator, PageService, StorageService)\nexport class ConsumablesMain {\n    public router: Router;\n    public consumablesLabel: string;\n\n    private _childRoutes: RouteConfig[];\n\n    private _vanStockService: IVanStockService;\n    private _featureToggleService: IFeatureToggleService;\n\n    private _eventAggregator: EventAggregator;\n    private _pageService: IPageService;\n    private _subscriptions: Subscription [];\n    private _storageService: IStorageService;\n\n    constructor(vanStockService: IVanStockService,\n                featureToggleService: IFeatureToggleService,\n                eventAggregator: EventAggregator,\n                pageService: IPageService,\n                storageService: IStorageService\n    ) {\n\n        this._vanStockService = vanStockService;\n        this._featureToggleService = featureToggleService;\n        this._storageService = storageService;\n\n        this._subscriptions = [];\n        this._eventAggregator = eventAggregator;\n\n        this.consumablesLabel = \"Consumables\";\n        this._pageService = pageService;\n    }\n\n    public configureRouter(config: RouterConfiguration, childRouter: Router): void {\n        this.router = childRouter;\n        this.setupChildRoutes();\n        config.map(this._childRoutes);\n    }\n\n    public async activate(): Promise<void> {\n        if (this._featureToggleService.isAssetTrackingEnabled()) {\n            this.consumablesLabel = \"Material\";\n        }\n\n        //  events, setup tab titles\n\n        const vanStockSub = this._eventAggregator.subscribe(VanStockConstants.VANSTOCK_UPDATED, async () => {\n            await this.updateVanStockTitle();\n            await this.updateInOutStockTitle();\n        });\n\n        const consumableAddSub = this._eventAggregator.subscribe(ConsumableServiceConstants.CONSUMABLE_ADDED, async (count: number) => {\n            await this.updateConsumablesTitle(count);\n        });\n\n        const consumableReadSub = this._eventAggregator.subscribe(ConsumablesBasket.READ_CONSUMBALES_BASKET, async () => {\n            await this.updateConsumablesTitle(0);\n            await this._storageService.setConsumablesRead(true);\n        });\n\n        this._subscriptions = [vanStockSub, consumableAddSub, consumableReadSub];\n\n        // initial setup\n        // if not read, then previous consumables add must have set this to true and we need to look\n        const read = await this._storageService.getConsumablesRead();\n        await this.updateConsumablesTitle(read ? 0 : 1 );\n\n        await this.updateVanStockTitle();\n        await this.updateInOutStockTitle();\n    }\n\n    public deactivate(): Promise<void> {\n\n        this._subscriptions.forEach(subscription => subscription.dispose());\n        this._subscriptions = [];\n        return Promise.resolve();\n    }\n\n    public navigateToRoute(name: string): void {\n        this.router.navigateToRoute(name);\n    }\n\n    private setupChildRoutes(): void {\n\n        if (this._featureToggleService.isAssetTrackingEnabled()) {\n            let landingPage = this._pageService.getLastVisitedPage(ObjectHelper.getClassName(this)) || \"van-stock\";\n\n            this._childRoutes = [{\n                route: \"\",\n                redirect: landingPage\n            }];\n            this._childRoutes.push({\n                route: \"in-out-stock\",\n                moduleId: \"hema/presentation/modules/vanStock/inOutStock\",\n                name: \"in-out-stock\",\n                nav: true,\n                title: \"Locate Items\",\n                settings: {\n                    dataState: DataState.dontCare,\n                    alwaysShow: true,\n                    showCount: false,\n                    showDataState: true,\n                }\n            });\n\n            this._childRoutes.push({\n                route: \"van-stock\",\n                moduleId: \"hema/presentation/modules/vanStock/vanStock\",\n                name: \"van-stock\",\n                nav: true,\n                title: \"My Stock\",\n                settings: {\n                    dataState: DataState.dontCare,\n                    showDataState: false,\n                    showCount: true,\n                    alwaysShow: true\n                }\n            });\n        } else {\n            this._childRoutes = [{\n                route: \"\",\n                redirect: \"consumables-basket\"\n            }];\n        }\n\n        this._childRoutes.push({\n            route: \"consumables-basket\",\n            moduleId: \"hema/presentation/modules/parts/consumablesBasket\",\n            name: \"consumables-basket\",\n            nav: true,\n            title: \"Consumables\",\n            settings: {\n                dataState: DataState.dontCare,\n                showDataState: true,\n                showCount: false,\n                alwaysShow: true,\n            }\n        });\n        this._childRoutes.push({\n            route: \"consumables-history\",\n            moduleId: \"hema/presentation/modules/parts/consumablesHistory\",\n            name: \"consumables-history\",\n            nav: true,\n            title: \"Order History\",\n            settings: {\n                dataState: DataState.dontCare,\n                showDataState: false,\n                showCount: false,\n                alwaysShow: true\n            }\n        });\n        this._childRoutes.push({\n            route: \"consumables-favourites\",\n            moduleId: \"hema/presentation/modules/parts/consumablesFavourites\",\n            name: \"consumables-favourites\",\n            nav: true,\n            title: \"Favourites\",\n            settings: {\n                dataState: DataState.dontCare,\n                showDataState: false,\n                showCount: true,\n                alwaysShow: true\n            }\n        });\n    }\n\n    private async updateVanStockTitle(): Promise<void> {\n        const total = await this._vanStockService.getLocalVanStockTotal();\n        this.updateTitle(\"van-stock\", total);\n    }\n\n    private async updateInOutStockTitle(): Promise<void> {\n        const items = await this._vanStockService.getMaterialRequests();\n        const total = items && items.outboundMaterials ? items.outboundMaterials.filter(i => i.isUnread).length : 0;\n        this.updateTitle(\"in-out-stock\", total);\n    }\n\n    private async updateConsumablesTitle(count: number): Promise<void> {\n        this.updateTitle(\"consumables-basket\", count);\n    }\n\n    private updateTitle(route: string, count: number): void {\n\n        // if  items and already on page no need to update the badge\n\n        if (!this.router) {\n            return;\n        }\n\n        const onRoute = this.router && this.router.currentInstruction &&\n            this.router.currentInstruction.fragment === route;\n\n        // if already on page then badge count 0 (means that items read)\n        // or we are on different page and we want to update the badge (change tab from orange to grey).\n\n        const updateTheTab = (count === 0) || (!onRoute && count > 0);\n\n        if (!updateTheTab) {\n            return;\n        }\n\n        let routeObject = this.router.routes.find(r => r.route === route);\n\n        if (!routeObject) {\n            return;\n        }\n\n        const {settings, navModel, title} = routeObject;\n\n        if (settings && settings.showDataState) {\n            settings.badgeCount = count;\n            settings.dataState = count ? DataState.notVisited : DataState.dontCare;\n        }\n\n        if (!navModel) {\n            return;\n        }\n\n        if (settings.showCount) {\n            const formattedTitle = `${title} ${count ? `(${count})` : ``}`;\n            navModel.setTitle(formattedTitle);\n        }\n\n    }\n}\n"],"sourceRoot":"../../../.."}