{"version":3,"sources":["hema/presentation/modules/parts/consumablesBasket.ts"],"names":[],"mappings":"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","file":"consumablesBasket.js","sourcesContent":["import { inject } from \"aurelia-framework\";\nimport { observable } from \"aurelia-binding\";\nimport { EditableViewModel } from \"../../models/editableViewModel\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\nimport { EngineerService } from \"../../../business/services/engineerService\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { EventAggregator, Subscription } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { IValidationService } from \"../../../business/services/interfaces/IValidationService\";\nimport { ValidationService } from \"../../../business/services/validationService\";\nimport { IBusinessRuleService } from \"../../../business/services/interfaces/IBusinessRuleService\";\nimport { BusinessRuleService } from \"../../../business/services/businessRuleService\";\nimport { CatalogService } from \"../.././../business/services/catalogService\";\nimport { ICatalogService } from \"../../../business/services/interfaces/ICatalogService\";\nimport { IConsumableType } from \"../../../business/models/reference/IConsumableType\";\nimport { IConsumableService } from \"../../../business/services/interfaces/IConsumableService\";\nimport { ConsumableService } from \"../../../business/services/consumableService\";\nimport { ConsumablesBasket as ConsumablePartsBasket } from \"../../../business/models/consumablesBasket\";\nimport { ConsumablePart } from \"../../../business/models/consumablePart\";\nimport { FavouriteService } from \"../../../business/services/favouriteService\";\nimport { IFavouriteService } from \"../../../business/services/interfaces/IFavouriteService\";\nimport { ConsumableServiceConstants } from \"../../../business/services/constants/consumableServiceConstants\";\nimport { AdaptBusinessServiceConstants } from \"../../../business/services/constants/adaptBusinessServiceConstants\";\n\n@inject(JobService, EngineerService, LabelService, EventAggregator,\n    DialogService, ValidationService, BusinessRuleService, CatalogService, ConsumableService, FavouriteService)\nexport class ConsumablesBasket extends EditableViewModel {\n\n    public static READ_CONSUMBALES_BASKET: string = \"READ_CONSUMABLES_BASKET\";\n\n    public consumablesBasket: ConsumablePartsBasket;\n    public showFaves: boolean;\n    public consumablePartsList: IConsumableType[];\n    public selectedConsumable: string;\n    @observable\n    public selectedConsumableItem: IConsumableType;\n    public selectedConsumableQuantity: number;\n    public noRecords: boolean;\n    public showManual: boolean;\n    public showFaveButton: boolean;\n    public filteredItems: number;\n    @observable\n    public manualConsumablePartRef: string;\n    @observable\n    public manualConsumablePartDescription: string;\n    @observable\n    public manualConsumablePartQuantity: number;\n    public dropDownElement: HTMLInputElement;\n    public isConsumableValid: boolean;\n    private _consumableService: IConsumableService;\n    private _favouriteService: IFavouriteService;\n    private _eventSubscriptions: Subscription[];\n    private _consumableStockReferenceIdPrefixRule: string;\n\n    constructor(\n        jobService: IJobService,\n        engineerService: IEngineerService,\n        labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        validationService: IValidationService,\n        businessRulesService: IBusinessRuleService,\n        catalogService: ICatalogService,\n        consumableService: IConsumableService,\n        favouriteService: IFavouriteService) {\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRulesService, catalogService);\n        this._consumableService = consumableService;\n        this.selectedConsumableQuantity = 1;\n        this.showFaves = false;\n        this.showManual = false;\n        this._favouriteService = favouriteService;\n        this.manualConsumablePartQuantity = 1;\n        this._eventSubscriptions = [];\n    }\n\n    public activateAsync(): Promise<any> {\n        this.canEdit = true;\n        this.validationToggle(true);\n\n        this._eventSubscriptions.push(\n            this._eventAggregator.subscribe(AdaptBusinessServiceConstants.ADAPT_PARTS_SELECTED, (partIds: string[]) => this.updateConsumablesBasket(partIds))\n        );\n\n        this._eventAggregator.publish(ConsumablesBasket.READ_CONSUMBALES_BASKET);\n\n        return this.loadBusinessRules()\n            .then(() => this.loadCatalogs())\n            .then(() => this.load())\n            .then(() => this.buildValidationRules())\n            .then(() => this.showContent());\n    }\n\n    public deactivateAsync(): Promise<void> {\n        this.disposeEventSubscriptions();\n        return Promise.resolve();\n    }\n\n    public addConsumable(): Promise<void> {\n        return this.checkAllRules().then((validationResult) => {\n            if (validationResult) {\n                let consumablePart = () => {\n                    return new ConsumablePart(\n                        this.showManual ? this.manualConsumablePartRef.toUpperCase() : this.selectedConsumableItem.stockReferenceId.toUpperCase(),\n                        this.showManual ? this.manualConsumablePartDescription : this.selectedConsumableItem.consumableTypeDescription,\n                        this.showManual ? this.manualConsumablePartQuantity : this.selectedConsumableQuantity\n                    );\n                };\n\n                this._consumableService.addConsumableToBasket(consumablePart())\n                    .then(() => {\n                        return this.fetchBasket().then(() => {\n                            this.selectedConsumable = undefined;\n                            this.selectedConsumableQuantity = 1;\n                            this.showManual = false;\n                            this.manualConsumablePartRef = undefined;\n                            this.manualConsumablePartDescription = undefined;\n                            this.manualConsumablePartQuantity = 1;\n                        });\n                    });\n            } else {\n                this.buildValidation();\n            }\n        });\n    }\n\n    public removeFavourite(index: number): Promise<void> {\n        return this.showDeleteConfirmation()\n            .then((shouldDelete) => {\n                if (shouldDelete) {\n                    this._consumableService.removeFavourite(index)\n                        .then(() => {\n                            return this.fetchBasket().then(() => this.selectedConsumableItemChanged());\n                        });\n                }\n            });\n    }\n\n    public reOrder(item: ConsumablePart): void {\n        if (item) {\n            item.sent = false;\n            this._consumableService.addConsumableToBasket(<ConsumablePart>item)\n                .then(() => {\n                    this.fetchBasket();\n                });\n        }\n    }\n\n    public placeConsumablesOrder(): void {\n        // if the fave flag is set then add to favourites\n        this.consumablesBasket.partsInBasket.forEach(part => {\n            if (part.favourite && !part.sent) {\n                this._favouriteService.addFavouriteConsumablePart(<ConsumablePart>part);\n            }\n        });\n\n        this._consumableService.placeOrder(this.consumablesBasket).then(() => this.fetchBasket());\n        this.showSuccess(this.getLabel(\"savedTitle\"), this.getLabel(\"savedMessage\"));\n    }\n\n    public removeConsumable(referenceId: string): void {\n        this.showDeleteConfirmation()\n            .then((shouldDelete) => {\n                if (shouldDelete) {\n                    this._consumableService.removeConsumableFromBasket(referenceId)\n                        .then(() => {\n                            this.fetchBasket();\n                        });\n                }\n            });\n    }\n\n    public updateBasket(): void {\n        this._consumableService.saveBasket(this.consumablesBasket);\n    }\n\n    public toggleFaves(): void {\n        this.showFaves = !this.showFaves;\n    }\n\n    public selectedConsumableItemChanged(): void {\n        if (this.selectedConsumable) {\n            if (this.consumablesBasket.favourites.find(f => f.referenceId === this.selectedConsumableItem.stockReferenceId && f.sent === false)) {\n                this.showFaveButton = false;\n            } else {\n                this.showFaveButton = true;\n            }\n        } else {\n            this.showFaveButton = false;\n        }\n    }\n\n    public saveAndSendBadgeEvent(item: ConsumablePart): void {\n        this._consumableService.saveBasket(this.consumablesBasket).then(() => {\n            this._consumableService.orderItemCount().then((total) => {\n                this._eventAggregator.publish(ConsumableServiceConstants.CONSUMABLE_ADDED, total);\n            });\n        });\n    }\n    public showManualAdd(): void {\n        this.showManual = true;\n        let typedValue = <HTMLInputElement>this.dropDownElement.querySelector(\".search-box\");\n        this.manualConsumablePartRef = typedValue.value.substr(0, 6);\n        this.manualConsumablePartDescription = undefined;\n        this.validateSingleRule(\"manualConsumablePartRef\");\n        this.validateSingleRule(\"manualConsumablePartDescription\");\n    }\n    public hideManualAdd(): void {\n        this.showManual = false;\n        this.manualConsumablePartRef = undefined;\n        this.manualConsumablePartDescription = undefined;\n        this.manualConsumablePartQuantity = 1;\n    }    \n\n    public manualConsumablePartRefChanged(newValue: string, oldValue: string): void {\n        this.testValidConsumable();\n    }\n\n    public manualConsumablePartDescriptionChanged(newValue: string, oldValue: string): void {\n        this.testValidConsumable();\n    }\n\n    protected loadModel(): Promise<void> {\n        this._consumableStockReferenceIdPrefixRule = this.getBusinessRule<string>(\"consumableStockRefIdPrefixRule\");\n        this.consumablesBasket = new ConsumablePartsBasket();\n        return this._consumableService.clearOldOrders(60).then(() => {\n            this._consumableService.getConsumablesBasket().then(partsBasket => {\n                this.consumablesBasket = partsBasket;\n                this.checkForOrdersPending();\n            });\n        });\n    }\n\n    private loadCatalogs(): Promise<void> {\n        return this._catalogService.getConsumables()\n            .then(consumables => {\n                if (consumables && consumables.length > 0) {\n                    this.consumablePartsList = consumables;\n                } else {\n                    return undefined;\n                }\n            });\n    }\n    private fetchBasket(): Promise<void> {\n        return this._consumableService.getConsumablesBasket().then(partsBasket => {\n            this.consumablesBasket = partsBasket;\n            this.checkForOrdersPending();\n        });\n    }\n    private buildValidationRules(): Promise<void> {\n        return this.buildValidation([\n            {\n                property: \"manualConsumablePartRef\",\n                condition: () => this.showManual\n            },\n            {\n                property: \"manualConsumablePartDescription\",\n                condition: () => this.showManual\n            }]);\n    }\n\n    private checkForOrdersPending(): void {\n        this.noRecords = this.consumablesBasket.partsInBasket.filter((p) => p.sent === false).length === 0;\n    }\n\n    private disposeEventSubscriptions(): void {\n        if (this._eventSubscriptions) {\n            this._eventSubscriptions.forEach(s => s.dispose());\n            this._eventSubscriptions = [];\n        }\n    }\n\n    private async updateConsumablesBasket(partIds: string[]): Promise<void> {\n        let consumablePartsBasket = await this._consumableService.getConsumablesBasket();\n        let partsAddedFromAdapt = consumablePartsBasket.partsInBasket.filter(p => partIds.indexOf(p.referenceId) !== -1 && p.sent === false);\n\n        partsAddedFromAdapt.map(part => {\n            let partIndex: number = this.consumablesBasket.partsInBasket.findIndex(p => p.referenceId === part.referenceId && p.sent === false);\n\n            if (partIndex > -1) {\n                this.consumablesBasket.partsInBasket[partIndex].quantity += 1;\n            } else {\n                this.consumablesBasket.partsInBasket.push(part);\n            }\n        });\n\n        this.checkForOrdersPending();\n    }\n\n    private testValidConsumable(): void {\n        this.isConsumableValid = false;\n        if (!!this.manualConsumablePartRef && !!this.manualConsumablePartDescription && this.manualConsumablePartRef.length === this.validationRules.manualConsumablePartRef.maxLength) {\n            let regexTest = new RegExp(this._consumableStockReferenceIdPrefixRule);            \n            this.isConsumableValid = !regexTest.test(this.manualConsumablePartRef.substr(0, 1));\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}