{"version":3,"sources":["hema/presentation/modules/parts/todaysParts.ts"],"names":[],"mappings":"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","file":"todaysParts.js","sourcesContent":["import {inject} from \"aurelia-framework\";\r\nimport {EditableViewModel} from \"../../models/editableViewModel\";\r\nimport {ILabelService} from \"../../../business/services/interfaces/ILabelService\";\r\nimport {LabelService} from \"../../../business/services/labelService\";\r\nimport {EventAggregator, Subscription} from \"aurelia-event-aggregator\";\r\nimport {DialogService} from \"aurelia-dialog\";\r\nimport {IJobService} from \"../../../business/services/interfaces/IJobService\";\r\nimport {JobService} from \"../../../business/services/jobService\";\r\nimport {IEngineerService} from \"../../../business/services/interfaces/IEngineerService\";\r\nimport {EngineerService} from \"../../../business/services/engineerService\";\r\nimport {IValidationService} from \"../../../business/services/interfaces/IValidationService\";\r\nimport {ValidationService} from \"../../../business/services/validationService\";\r\nimport {IBusinessRuleService} from \"../../../business/services/interfaces/IBusinessRuleService\";\r\nimport {BusinessRuleService} from \"../../../business/services/businessRuleService\";\r\nimport {ICatalogService} from \"../../../business/services/interfaces/ICatalogService\";\r\nimport {CatalogService} from \"../../../business/services/catalogService\";\r\nimport {IPartService} from \"../../../business/services/interfaces/IPartService\";\r\nimport {PartService} from \"../../../business/services/partService\";\r\nimport {ITaskService} from \"../../../business/services/interfaces/ITaskService\";\r\nimport {TaskService} from \"../../../business/services/taskService\";\r\nimport {Part} from \"../../../business/models/part\";\r\nimport {PartNotUsedReturn} from \"../../../business/models/partNotUsedReturn\";\r\nimport {PartWarrantyReturn} from \"../../../business/models/partWarrantyReturn\";\r\n\r\nimport {IDynamicRule} from \"../../../business/services/validation/IDynamicRule\";\r\nimport {ButtonListItem} from \"../../../../common/ui/elements/models/buttonListItem\";\r\nimport {DataState} from \"../../../business/models/dataState\";\r\nimport {ValidationCombinedResult} from \"../../../business/services/validation/validationCombinedResult\";\r\nimport {ObjectHelper} from \"../../../../common/core/objectHelper\";\r\nimport { TodaysPartViewModel } from \"./viewModels/todaysPartViewModel\";\r\nimport {PartsFactory} from \"../../../presentation/factories/partsFactory\";\r\nimport {IPartsFactory} from \"../../../presentation/factories/interfaces/IPartsFactory\";\r\nimport {ChargeServiceConstants} from \"../../../business/services/constants/chargeServiceConstants\";\r\nimport {BindingEngine} from \"aurelia-binding\";\r\nimport {CatalogConstants} from \"../../../business/services/constants/catalogConstants\";\r\n\r\n@inject(JobService, EngineerService, LabelService, EventAggregator, DialogService,\r\n    ValidationService, BusinessRuleService, CatalogService, PartService, TaskService, BindingEngine,\r\n    PartsFactory)\r\nexport class TodaysParts extends EditableViewModel {\r\n\r\n    public parts: TodaysPartViewModel[];\r\n    public yesNoLookup: ButtonListItem[];\r\n    public returnReasonLookup: ButtonListItem[];\r\n    public isFullScreen: boolean;\r\n\r\n    private _partService: IPartService;\r\n    private _taskService: ITaskService;\r\n\r\n    private _partSubscriptions: Subscription[];\r\n    private _bindingEngine: BindingEngine;\r\n    private _partsFactory: IPartsFactory;\r\n\r\n    private _stockReferencePrefixesToStopWarrantyReturn: string[];\r\n\r\n    constructor(jobService: IJobService,\r\n                engineerService: IEngineerService,\r\n                labelService: ILabelService,\r\n                eventAggregator: EventAggregator,\r\n                dialogService: DialogService,\r\n                validationService: IValidationService,\r\n                businessRuleService: IBusinessRuleService,\r\n                catalogService: ICatalogService,\r\n                partService: IPartService,\r\n                taskService: ITaskService,\r\n                bindingEngine: BindingEngine,\r\n                partsFactory: IPartsFactory) {\r\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRuleService, catalogService);\r\n        this.validationRules = {};\r\n        this._partService = partService;\r\n        this._taskService = taskService;\r\n        this._bindingEngine = bindingEngine;\r\n        this._partsFactory = partsFactory;\r\n        this.isFullScreen = window.isFullScreen;\r\n    }\r\n\r\n    public activateAsync(): Promise<any> {\r\n        if (this._isCleanInstance) {\r\n            return this.loadBusinessRules()\r\n                .then(() => this.loadCatalogs())\r\n                .then(() => this.load())\r\n                .then(() => this.buildValidationRules())\r\n                .then(() => this.showContent());\r\n        } else {\r\n            return this.load()\r\n                .then(() => this.buildValidationRules());\r\n        }\r\n    }\r\n\r\n    public deactivateAsync(): Promise<void> {\r\n        this._partSubscriptions.forEach(subscription => subscription.dispose());\r\n        this._partSubscriptions = [];\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public setSameRefAsOriginal(warrantyReturn: PartWarrantyReturn, part: Part): void {\r\n        warrantyReturn.removedPartStockReferenceId = part.stockReferenceId;\r\n    }\r\n\r\n    protected validationUpdated(validationCombinedResult: ValidationCombinedResult): void {\r\n        // to keep row indicators up to date, we hook in here to see if any given part has changed its validation state\r\n\r\n        let getPartDataState = (partKey: string): DataState => {\r\n            let thisPartPropertyResults = Object.keys(validationCombinedResult.propertyResults)\r\n                .map(key => validationCombinedResult.propertyResults[key])\r\n                .filter(propertyResult => propertyResult.property.lastIndexOf(partKey) === 0);\r\n\r\n            return thisPartPropertyResults.some(propertyResult => !propertyResult.isValid)\r\n                ? DataState.invalid\r\n                : DataState.valid;\r\n        };\r\n\r\n        if (validationCombinedResult && validationCombinedResult.groups) {\r\n            validationCombinedResult.groups\r\n                .filter(groupKey => groupKey.indexOf(\"[\") !== 1)\r\n                .forEach(partKey => {\r\n                    let partDataState = getPartDataState(partKey);\r\n                    let todaysPartViewModel = <TodaysPartViewModel>ObjectHelper.getPathValue(this, partKey);\r\n                    todaysPartViewModel.dataStateIndicator = partDataState;\r\n                });\r\n        }\r\n    }\r\n\r\n    protected loadModel(): Promise<void> {\r\n        return Promise.all([\r\n            this._partService.getTodaysParts(this.jobId),\r\n            this._taskService.getTasks(this.jobId)\r\n        ])\r\n        .then(([partsToday, tasks]) => {\r\n\r\n            let stockReferencePrefixesToStopWarrantyReturn = this.getBusinessRule<string>(\"stockReferencePrefixesToStopWarrantyReturn\");\r\n\r\n            this._stockReferencePrefixesToStopWarrantyReturn = (stockReferencePrefixesToStopWarrantyReturn && stockReferencePrefixesToStopWarrantyReturn.indexOf(\",\") !== -1) ?\r\n                                                                    stockReferencePrefixesToStopWarrantyReturn.split(\",\") :\r\n                                                                    [stockReferencePrefixesToStopWarrantyReturn];\r\n            this.parts = [];\r\n\r\n            if (partsToday.parts && tasks) {\r\n                partsToday.parts.forEach(part => {\r\n                    let task = tasks.find(t => t.id === part.taskId);\r\n                    let vm = this._partsFactory.createTodaysPartViewModel(part, task);\r\n                    vm.isWarrantyReturnOptionAvailable = (this._stockReferencePrefixesToStopWarrantyReturn.indexOf(part.stockReferenceId.substring(0, 1)) === -1);\r\n                    this.parts.push(vm);\r\n                });\r\n            }\r\n\r\n            this.setInitialDataState(partsToday.dataStateId, partsToday.dataState);\r\n\r\n            this.addPartChangeHanders();\r\n        });\r\n    }\r\n\r\n    protected saveModel(): Promise<void> {\r\n        let partsArugment = this.parts.map(part => ({\r\n            partId: part.part.id,\r\n            notusedReturn: part.notUsedReturn,\r\n            warrantyReturn: part.warrantyReturn\r\n        }));\r\n        return this._partService.saveTodaysPartsReturns(this.jobId, this.getFinalDataState(), partsArugment)\r\n                    .then(() => {\r\n                        if (this._isDirty) {\r\n                            this._eventAggregator.publish(ChargeServiceConstants.CHARGE_UPDATE_START, this.jobId);\r\n                        }\r\n                    });\r\n    }\r\n\r\n    protected clearModel(): Promise<void> {\r\n        this.parts.forEach(part => {\r\n            part.warrantyReturn.isWarrantyReturn = undefined;\r\n            part.warrantyReturn.quantityToClaimOrReturn = undefined;\r\n            part.warrantyReturn.reasonForClaim = undefined;\r\n            part.warrantyReturn.removedPartStockReferenceId = undefined;\r\n            part.notUsedReturn.quantityToReturn = undefined;\r\n            part.notUsedReturn.reasonForReturn = undefined;\r\n        });\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private addPartChangeHanders(): void {\r\n        this._partSubscriptions = [];\r\n\r\n        this.parts.forEach(part => {\r\n\r\n            this._partSubscriptions.push(\r\n                this._bindingEngine\r\n                    .propertyObserver(part.warrantyReturn, \"isWarrantyReturn\")\r\n                    .subscribe(() => this.isWarrantyChangeHandler(part.warrantyReturn))\r\n            );\r\n\r\n            this._partSubscriptions.push(\r\n                this._bindingEngine\r\n                    .propertyObserver(part.warrantyReturn, \"quantityToClaimOrReturn\")\r\n                    .subscribe((newValue, oldValue) => this.warrantyQuantityChangeHandler(newValue, oldValue, part))\r\n            );\r\n\r\n            this._partSubscriptions.push(\r\n                this._bindingEngine\r\n                    .propertyObserver(part.notUsedReturn, \"reasonForReturn\")\r\n                    .subscribe(() => this.returnReasonChangeHandler(part.notUsedReturn))\r\n            );\r\n\r\n            this._partSubscriptions.push(\r\n                this._bindingEngine\r\n                    .propertyObserver(part.notUsedReturn, \"quantityToReturn\")\r\n                    .subscribe((newValue, oldValue) => this.notUsedReturnQuantityChangeHandler(newValue, oldValue, part))\r\n            );\r\n        });\r\n    }\r\n\r\n    private isWarrantyChangeHandler(warrantyReturn: PartWarrantyReturn): void {\r\n        if (warrantyReturn.isWarrantyReturn && !warrantyReturn.quantityToClaimOrReturn) {\r\n            warrantyReturn.quantityToClaimOrReturn = 1;\r\n        }\r\n    }\r\n\r\n    private warrantyQuantityChangeHandler(newValue: number, oldValue: number, part: TodaysPartViewModel): void {\r\n        newValue = newValue || 0;\r\n        oldValue = oldValue || 0;\r\n        let partQuantity = part.part.quantity || 0;\r\n\r\n        let isQuantityIncreasing = newValue > oldValue;\r\n        let isQuantityValid = newValue <= partQuantity;\r\n        let isOtherQuantityStillValid = partQuantity >= newValue + (part.notUsedReturn.quantityToReturn || 0);\r\n\r\n        if (isQuantityIncreasing && isQuantityValid && !isOtherQuantityStillValid) {\r\n            let newValidOtherQuantity = partQuantity - newValue;\r\n            part.notUsedReturn.quantityToReturn = newValidOtherQuantity;\r\n            if (newValidOtherQuantity === 0) {\r\n                part.notUsedReturn.reasonForReturn = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    private returnReasonChangeHandler(notusedReturn: PartNotUsedReturn): void {\r\n        if (notusedReturn.reasonForReturn && !notusedReturn.quantityToReturn) {\r\n            notusedReturn.quantityToReturn = 1;\r\n        }\r\n    }\r\n\r\n    private notUsedReturnQuantityChangeHandler(newValue: number, oldValue: number, part: TodaysPartViewModel): void {\r\n        newValue = newValue || 0;\r\n        oldValue = oldValue || 0;\r\n        let partQuantity = part.part.quantity || 0;\r\n\r\n        let isQuantityIncreasing = newValue > oldValue;\r\n        let isQuantityValid = newValue <= partQuantity;\r\n\r\n        // \">\" rather than \">=\" so that if warrantyReturn.quantityToClaimOrReturn is 0 or undefined, warranty is set to false\r\n        let isOtherQuantityStillValid = partQuantity > newValue + (part.warrantyReturn.quantityToClaimOrReturn || 0);\r\n\r\n        if (isQuantityIncreasing && isQuantityValid && !isOtherQuantityStillValid) {\r\n            let newValidOtherQuantity = partQuantity - newValue;\r\n            part.warrantyReturn.quantityToClaimOrReturn = newValidOtherQuantity;\r\n            if (newValidOtherQuantity === 0) {\r\n                part.warrantyReturn.isWarrantyReturn = false;\r\n            }\r\n        }\r\n\r\n        if (newValue === 0) {\r\n            part.notUsedReturn.reasonForReturn = undefined;\r\n        }\r\n    }\r\n\r\n    private buildValidationRules(): Promise<void> {\r\n        return this.buildValidation(this.parts.reduce((prev: IDynamicRule[], curr: TodaysPartViewModel, idx: number) => {\r\n            prev = prev.concat(this.buildPartsToOrderListItemValidationRules(idx));\r\n            return prev;\r\n        }, []));\r\n    }\r\n\r\n    private buildPartsToOrderListItemValidationRules(index: number): IDynamicRule[] {\r\n        let itemRules: IDynamicRule[] = [];\r\n        /*\r\n         #13979 When the user hits the screen for the first time the tab-level indicator and all part-level indicators should be notVisited.\r\n         As soon as one part is touched, the validation layer will turn the tab indicator to red (or green, if only one part).  The indicator for the touched part\r\n         should go valid or invalid, and we need all other not visited parts' indicators to go red to match how the validation framework has\r\n         set the tab indicator.  (i.e. once the tab indicator has gone red, it looks wrong that the other parts are all orange still).\r\n         To provide this behaviour, we use the following rule which lets us make each part invalid as soon as one part is touched.\r\n         */\r\n        itemRules.push({\r\n            property: `parts[${index}]`,\r\n            condition: () => this.parts[index].notUsedReturn.quantityToReturn === undefined\r\n            && this.parts[index].warrantyReturn.isWarrantyReturn === undefined,\r\n            passes: [{test: () => false, message: null}],\r\n            // parts group required to make sure all parts validation fired off whenever on part changes\r\n            // parts[${index}] group required to isolate which part is changing within this.validationUpdated(...) method\r\n            groups: [\"parts\", `parts[${index}]`],\r\n        });\r\n\r\n        itemRules.push({\r\n            property: `parts[${index}].notUsedReturn.quantityToReturn`,\r\n            basedOn: \"parts.notUsedReturn.quantityToReturn\",\r\n            condition: () => this.parts[index].notUsedReturn.reasonForReturn !== undefined,\r\n            groups: [\"parts\", `parts[${index}]`]\r\n        });\r\n\r\n        itemRules.push({\r\n            property: `parts[${index}].notUsedReturn.reasonForReturn`,\r\n            basedOn: \"parts.notUsedReturn.reasonForReturn\",\r\n            condition: () => !!this.parts[index].notUsedReturn.quantityToReturn,\r\n            groups: [\"parts\", `parts[${index}]`],\r\n        });\r\n\r\n        // this rule is required so that a change in isWarrantyReturn is picked up in our this.validationUpdated(...) method logic\r\n        //  (even though we do need direct validation on this property)\r\n        itemRules.push({\r\n            property: `parts[${index}].warrantyReturn.isWarrantyReturn`,\r\n            basedOn: \"parts.warrantyReturn.isWarrantyReturn\",\r\n            condition: () => this.parts[index].warrantyReturn.isWarrantyReturn !== undefined,\r\n            groups: [\"parts\", `parts[${index}]`]\r\n        });\r\n\r\n        itemRules.push({\r\n            property: `parts[${index}].warrantyReturn.quantityToClaimOrReturn`,\r\n            basedOn: \"parts.warrantyReturn.quantityToClaimOrReturn\",\r\n            condition: () => !!this.parts[index].warrantyReturn.isWarrantyReturn,\r\n            groups: [\"parts\", `parts[${index}]`]\r\n        });\r\n\r\n        itemRules.push({\r\n            property: `parts[${index}].warrantyReturn.removedPartStockReferenceId`,\r\n            basedOn: \"parts.warrantyReturn.removedPartStockReferenceId\",\r\n            condition: () => !!this.parts[index].warrantyReturn.isWarrantyReturn,\r\n            groups: [\"parts\", `parts[${index}]`]\r\n        });\r\n\r\n        itemRules.push({\r\n            property: `parts[${index}].warrantyReturn.reasonForClaim`,\r\n            basedOn: \"parts.warrantyReturn.reasonForClaim\",\r\n            condition: () => !!this.parts[index].warrantyReturn.isWarrantyReturn,\r\n            groups: [\"parts\", `parts[${index}]`]\r\n        });\r\n\r\n        return itemRules;\r\n    }\r\n\r\n    private loadCatalogs(): Promise<void> {\r\n        return Promise.all([\r\n            this.buildNoYesList()\r\n                .then(yesNoList => {\r\n                    this.yesNoLookup = yesNoList;\r\n                }),\r\n            this._catalogService.getPartsNotUsedReasons()\r\n                .then(partNotUsedReasons => {\r\n                    this.returnReasonLookup = this.toButtonListItemArray(partNotUsedReasons,\r\n                        CatalogConstants.PARTS_NOT_USED_REASON_ID,\r\n                        CatalogConstants.PARTS_NOT_USED_REASON_DESCRIPTION);\r\n                })\r\n        ]).return(null);\r\n    }\r\n}\r\n"],"sourceRoot":"../../../.."}