{"version":3,"sources":["hema/presentation/modules/vanStock/transferVanStock.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOA;QAWI,0BAAY,gBAAkC,EAAE,aAA4B;YACxE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;YACnC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;gBACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;gBAC5C,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC;YACpD,CAAC;QACL,CAAC;QAEY,mCAAQ,GAArB;;;;oBACI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;wBAChB,IAAI,GAAG,GAAG,KAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC,EAAE,mBAAmB,CAAC;6BACjE,SAAS,CAAC;4BACP,KAAI,CAAC,OAAO,GAAG,CAAC,KAAI,CAAC,KAAK;iCACrB,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,iBAAiB,EAAnB,CAAmB,CAAC;iCAC7B,KAAK,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,CAAC,EAAP,CAAO,CAAC,CAAC;wBAC7B,CAAC,CAAC,CAAC;wBACP,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;oBACzB,CAAC,CAAC,CAAC;oBACH,sBAAO,OAAO,CAAC,OAAO,EAAE,EAAC;;;SAC5B;QAEM,mCAAQ,GAAf;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;oBAChB,CAAC,CAAC,OAAO,EAAE,CAAC;oBACZ,CAAC,GAAG,IAAI,CAAC;gBACb,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YACpB,CAAC;YACD,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QA9CQ,gBAAgB;YAD5B,0BAAM,CAAC,iCAAgB,EAAE,iCAAa,CAAC;6CAYN,iCAAgB,EAAiB,iCAAa;WAXnE,gBAAgB,CAgD5B;QAAD,uBAAC;KAhDD,AAgDC,IAAA;IAhDY,4CAAgB","file":"transferVanStock.js","sourcesContent":["\nimport { inject, BindingEngine } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { Subscription } from \"aurelia-event-aggregator\";\nimport { TransferVanStockItemViewModel } from \"./viewModels/transferVanStockItemViewModel\";\n\n@inject(DialogController, BindingEngine)\nexport class TransferVanStock {\n    public summary: string;\n    public model: TransferVanStockItemViewModel[];\n    public availableReturnQuantity: number;\n    public minReturnQuantity: number;\n    public controller: DialogController;\n    public isValid: boolean;\n\n    private _bindingEngine: BindingEngine;\n    private _subs: Subscription[];\n\n    constructor(dialogController: DialogController, bindingEngine: BindingEngine) {\n        this.isValid = false;\n        this._subs = [];\n        this._bindingEngine = bindingEngine;\n        this.minReturnQuantity = 1;\n        this.controller = dialogController;\n        if (this.controller) {\n            this.controller.settings.lock = true;\n            this.model = this.controller.settings.model;\n            this.summary = this.controller.settings.summary;\n        }\n    }\n\n    public async attached(): Promise<void> {\n        this.model.forEach(p => {\n            let sub = this._bindingEngine.propertyObserver(p, \"quantityRequested\")\n                .subscribe(() => {\n                    this.isValid = !this.model\n                        .map(q => q.quantityRequested)\n                        .every(i => i === 0);\n                });\n            this._subs.push(sub);\n        });\n        return Promise.resolve();\n    }\n\n    public detached(): Promise<void> {\n        if (this._subs) {\n            this._subs.forEach(s => {\n                s.dispose();\n                s = null;\n            });\n            this._subs = [];\n        }\n        return Promise.resolve();\n    }\n\n}\n"],"sourceRoot":"../../../.."}