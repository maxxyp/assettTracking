{"version":3,"sources":["hema/presentation/modules/vanStock/inOutStock.ts"],"names":[],"mappings":"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","file":"inOutStock.js","sourcesContent":["import { inject } from \"aurelia-framework\";\nimport { BaseViewModel } from \"../../models/baseViewModel\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { EventAggregator, Subscription } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { IVanStockService } from \"../../../business/services/interfaces/IVanStockService\";\nimport { VanStockService, STOCK_REFERENCE_ID_REGEX } from \"../../../business/services/vanStockService\";\nimport { Material } from \"../../../business/models/material\";\nimport { MaterialRequest } from \"../../../business/models/materialRequest\";\nimport { VanStockConstants } from \"../../../business/services/constants/vanStockConstants\";\nimport { MaterialSearchResult } from \"../../../business/models/materialSearchResult\";\nimport { observable } from \"aurelia-binding\";\nimport { MaterialCollection } from \"../../../business/models/materialCollection\";\nimport { HvtLookup } from \"./hvtLookup\";\nimport { VanStockReservationHelper } from \"./vanStockReservationHelper\";\nimport { ConfirmDialogModel } from \"../../../../common/ui/dialogs/models/confirmDialogModel\";\nimport { ConfirmDialog } from \"../../../../common/ui/dialogs/confirmDialog\";\nimport { VanStockStatus } from \"../../../business/vanStockStatus\";\nimport { DateHelper } from \"../../../../common/core/dateHelper\";\n\n@inject(LabelService, EventAggregator, DialogService, VanStockService)\nexport class InOutStock extends BaseViewModel {\n\n    public returns: Material[];\n    public inboundMaterials: MaterialRequest[];\n    public outboundMaterials: MaterialRequest[];\n    public materialCollected: MaterialCollection[];\n    @observable\n    public searchText: string;\n    public materialSearchResult: MaterialSearchResult;\n    public statusFlag: VanStockStatus;\n    private _vanStockService: IVanStockService;\n    private _subscription: Subscription;\n\n    constructor(labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        vanStockService: IVanStockService) {\n        super(labelService, eventAggregator, dialogService);\n        this._vanStockService = vanStockService;\n    }\n\n    public async activateAsync(queryParams: any): Promise<void> {\n        this.statusFlag = this._vanStockService.getBindableVanStockStatusFlag();\n        await this.populateReturns();\n        await this.populateInOut();\n        await this.populateCollection();\n        this._subscription = this._eventAggregator.subscribe(VanStockConstants.VANSTOCK_UPDATED, () => {\n            this.populateReturns();\n            this.populateInOut();\n            this.populateCollection();\n        });\n        this.showContent();\n        await this.trySearchViaQueryString(queryParams);\n    }\n\n    public async deactivateAsync(): Promise<void> {\n        if (this._subscription) {\n            this._subscription.dispose();\n            this._subscription = null;\n        }\n\n        const requestIds = this.outboundMaterials.map(o => o.id);\n        await this._vanStockService.registerMaterialRequestReads({requestIds});\n\n        return Promise.resolve();\n    }\n\n    public async collect(item: MaterialRequest): Promise<void> {\n        let vm: ConfirmDialogModel = new ConfirmDialogModel();\n        vm.header = \"Confirmation\";\n        vm.text = `Are you sure that your wish to collect the item ${item.stockReferenceId}?`;\n        await this._dialogService.open({ viewModel: ConfirmDialog, model: vm })\n            .then(async (result) => {\n                if (result.wasCancelled === false) {\n                    try {\n                        await this._vanStockService.registerMaterialTransfer({ requestId: item.id });\n                        this.showSuccess(\"Material Collection\", \"Material collected.\");\n                        await this.populateInOut();\n                    } catch (ex) {\n                        this.showError(ex);\n                    }\n                }\n            });\n    }\n\n    public async cancelCollection(item: MaterialRequest): Promise<void> {\n        let vm: ConfirmDialogModel = new ConfirmDialogModel();\n        vm.header = \"Confirmation\";\n        vm.text = `Are you sure that your wish to cancel this reservation for item ${item.stockReferenceId}?`;\n        await this._dialogService.open({ viewModel: ConfirmDialog, model: vm })\n            .then(async (result) => {\n                if (result.wasCancelled === false) {\n                    try {\n                        await this._vanStockService.registerMaterialRequestWithdrawl({ requestId: item.id });\n                        this.showInfo(\"Material Collection\", \"Material collection cancelled.\");\n                        await this.populateInOut();\n                    } catch (ex) {\n                        this.showError(ex);\n                    }\n                }\n            });\n    }\n\n    public async search(): Promise<void> {\n        if (this.searchText && STOCK_REFERENCE_ID_REGEX.test(this.searchText.trim())) {\n            this.materialSearchResult = this._vanStockService.getBindableMaterialSearchResult(this.searchText.trim());\n        }\n    }\n\n    public async view(res: MaterialSearchResult): Promise<void> {\n        await VanStockReservationHelper.launchReservationDialog(\n            this._dialogService,\n            this._vanStockService,\n            res,\n            async hasAReservationBeenMade => {\n                if (hasAReservationBeenMade) {\n                    this.showSuccess(\"Material Request\", \"Material request sent.\");\n                    await this.populateInOut();\n                }\n                this.resetSearch();\n            }\n        );\n    }\n\n    public searchTextChanged(newValue: string): void {\n        // clear out search result when we have one and the user starts typing again\n        if (this.materialSearchResult && !STOCK_REFERENCE_ID_REGEX.test(newValue.trim())) {\n            this.materialSearchResult = undefined;\n        }\n    }\n\n    public async openhvt(): Promise<void> {\n        const result = await this._dialogService.open({ viewModel: HvtLookup });\n        if (result) {\n            if (!result.wasCancelled) {\n                this.searchText = result.output.materialCode;\n                await this.search();\n            }\n        }\n    }\n\n    public getDateTime(pDate: number, pTime: number): string {\n        const getDateString = DateHelper.getDateFromNumber(pDate, pTime, \"YYYYMMDD\", \"HHmmssSS\");       \n        return getDateString || \"\";\n    }\n\n    private async populateReturns(): Promise<void> {\n        this.returns = await this._vanStockService.getReturns();\n    }\n\n    private async populateInOut(): Promise<void> {\n        const { inboundMaterials, outboundMaterials } = await this._vanStockService.getMaterialRequests();\n        this.inboundMaterials = inboundMaterials;\n        this.outboundMaterials = outboundMaterials;\n    }\n\n    private async populateCollection(): Promise<void> {\n        const { collected } = await this._vanStockService.getPartsToCollect();\n        this.materialCollected = collected;\n    }\n\n    private resetSearch(): void {\n        this.searchText = \"\";\n        this.materialSearchResult = undefined;\n    }\n\n    private async trySearchViaQueryString(params: any): Promise<void> {\n        let searchParam: string = params && params.search;\n        if (!searchParam) {\n            return;\n        }\n\n        this.searchText = searchParam;\n        await this.search();\n        if (this.materialSearchResult\n            && this.materialSearchResult.online\n            && this.materialSearchResult.online.results\n            && this.materialSearchResult.online.results.length) {\n            await this.view(this.materialSearchResult);\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}