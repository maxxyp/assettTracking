{"version":3,"sources":["hema/presentation/modules/vanStock/updateVanStockItem.ts"],"names":[],"mappings":";;;;;;;;;;;;IAKA;QAOI,4BAAY,gBAAkC,EAAE,aAA4B;YACxE,IAAI,CAAC,UAAU,GAAG,gBAAgB,CAAC;YACnC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;YACpC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;gBACrC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC;YAChD,CAAC;QACL,CAAC;QAEM,qCAAQ,GAAf;YAAA,iBAKC;YAHG,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,MAAM,CAAC;iBAC7D,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,CAAC,CAAC;YAC3D,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC;QAEM,qCAAQ,GAAf;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YACjC,CAAC;QACL,CAAC;QAEO,sCAAS,GAAjB;YACI,IAAM,eAAe,GAAG,IAAI,CAAC,KAAK;mBACP,IAAI,CAAC,KAAK,CAAC,QAAQ;mBACnB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI;mBACxB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC,CAAC;YAChF,IAAI,CAAC,WAAW,GAAG,CAAC,eAAe,CAAC;QACxC,CAAC;QAnCQ,kBAAkB;YAD9B,0BAAM,CAAC,iCAAgB,EAAE,iCAAa,CAAC;6CAQN,iCAAgB,EAAiB,iCAAa;WAPnE,kBAAkB,CAoC9B;QAAD,yBAAC;KApCD,AAoCC,IAAA;IApCY,gDAAkB","file":"updateVanStockItem.js","sourcesContent":["import { inject, BindingEngine, Disposable } from \"aurelia-framework\";\nimport { DialogController } from \"aurelia-dialog\";\nimport { UpdateVanStockItemViewModel } from \"./viewModels/updateVanStockItemViewModel\";\n\n@inject(DialogController, BindingEngine)\nexport class UpdateVanStockItem {\n    public model: UpdateVanStockItemViewModel;\n    public controller: DialogController;\n    public isAreaValid: boolean;\n    private _subscription: Disposable;\n    private _bindingEngine: BindingEngine;\n\n    constructor(dialogController: DialogController, bindingEngine: BindingEngine) {\n        this.controller = dialogController;\n        this._bindingEngine = bindingEngine;\n        if (this.controller) {\n            this.controller.settings.lock = true;\n            this.model = this.controller.settings.model;\n        }\n    }\n\n    public attached(): void {\n\n        this._subscription = this._bindingEngine.propertyObserver(this.model.material, \"area\")\n                                .subscribe(() => this.checkArea());\n        this.checkArea();\n    }\n\n    public detached(): void {\n        if (this._subscription) {\n            this._subscription.dispose();\n        }\n    }\n\n    private checkArea(): void {\n        const isThereABadChar = this.model\n                                && this.model.material\n                                && this.model.material.area\n                                && this.model.material.area.match(/[^\\x20-\\x7E|\\xA3]/g);\n        this.isAreaValid = !isThereABadChar;\n    }\n}\n"],"sourceRoot":"../../../.."}