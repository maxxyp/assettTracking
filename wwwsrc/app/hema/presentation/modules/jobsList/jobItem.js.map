{"version":3,"sources":["hema/presentation/modules/jobsList/jobItem.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAcA;QAA6B,2BAAa;QAStC,iBAAY,YAA2B,EAC3B,iBAAqC,EAErC,eAAgC,EAChC,aAA4B;YAJxC,YAKI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAEtD;YADG,KAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;;QAChD,CAAC;QAEM,+BAAa,GAApB,UAAqB,GAAqB;YAA1C,iBAOC;YANG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;YACf,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,GAAG,CAAC,CAAC;YAClF,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,yCAAmB,CAAC,iBAAiB,EAAE,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;YACtH,IAAI,CAAC,WAAW,EAAE,CAAC;YAEnB,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAEM,+BAAa,GAApB;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;gBACrB,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;gBAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC9B,CAAC;YACD,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAEO,6BAAW,GAAnB;YACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,KAAK,mBAAQ,CAAC,IAAI,CAAC;QACnD,CAAC;QArCQ,OAAO;YADnB,qCAAM,CAAC,2BAAY,EAAE,qCAAiB,EAAE,0CAAe,EAAE,8BAAa,CAAC;6DAavC,0CAAe;gBACjB,8BAAa;WAb/B,OAAO,CAsCnB;QAAD,cAAC;KAtCD,AAsCC,CAtC4B,6BAAa,GAsCzC;IAtCY,0BAAO","file":"jobItem.js","sourcesContent":["import {inject} from \"aurelia-dependency-injection\";\r\nimport {BaseViewModel} from \"../../models/baseViewModel\";\r\nimport {IJobSummaryFactory} from \"../../factories/interfaces/IJobSummaryFactory\";\r\nimport {JobSummaryFactory} from \"../../factories/jobSummaryFactory\";\r\nimport {Job as JobBusinessModel} from \"../../../business/models/job\";\r\nimport {JobSummaryViewModel} from \"../../models/jobSummaryViewModel\";\r\nimport {ILabelService} from \"../../../business/services/interfaces/ILabelService\";\r\nimport {LabelService} from \"../../../business/services/labelService\";\r\nimport {EventAggregator, Subscription} from \"aurelia-event-aggregator\";\r\nimport {JobState} from \"../../../business/models/jobState\";\r\nimport {DialogService} from \"aurelia-dialog\";\r\nimport {JobServiceConstants} from \"../../../business/services/constants/jobServiceConstants\";\r\n\r\n@inject(LabelService, JobSummaryFactory, EventAggregator, DialogService)\r\nexport class JobItem extends BaseViewModel {\r\n    public jobSummaryViewModel: JobSummaryViewModel;\r\n    public isDone: boolean;\r\n    public job: JobBusinessModel;\r\n\r\n    private _jobSummaryFactory: IJobSummaryFactory;\r\n\r\n    private _subscription: Subscription;\r\n\r\n    constructor(labelService: ILabelService,\r\n                jobSummaryFactory: IJobSummaryFactory,\r\n\r\n                eventAggregator: EventAggregator,\r\n                dialogService: DialogService) {\r\n        super(labelService, eventAggregator, dialogService);\r\n        this._jobSummaryFactory = jobSummaryFactory;\r\n    }\r\n\r\n    public activateAsync(job: JobBusinessModel): Promise<void> {\r\n        this.job = job;\r\n        this.jobSummaryViewModel = this._jobSummaryFactory.createJobSummaryViewModel(job);\r\n        this._subscription = this._eventAggregator.subscribe(JobServiceConstants.JOB_STATE_CHANGED, () => this.updateState());\r\n        this.updateState();\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    public detachedAsync(): Promise<void> {\r\n        if (this._subscription) {\r\n            this._subscription.dispose();\r\n            this._subscription = null;\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private updateState(): void {\r\n        this.isDone = this.job.state === JobState.done;\r\n    }\r\n}\r\n"],"sourceRoot":"../../../.."}