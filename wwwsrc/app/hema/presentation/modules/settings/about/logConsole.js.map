{"version":3,"sources":["hema/presentation/modules/settings/about/logConsole.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAWA;QAAgC,8BAAe;QAM3C,oBAAY,YAA2B,EAAE,eAAgC,EAC7D,aAA4B,EAAE,aAA6B;YADvE,YAGI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAEtD;YADG,KAAI,CAAC,cAAc,GAAG,aAAa,CAAC;;QACxC,CAAC;QAEM,kCAAa,GAApB;YAAA,iBAIC;YAHG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE;iBAC/B,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,KAAI,CAAC,IAAI,GAAG,IAAI,EAAhB,CAAgB,CAAC;iBAChC,MAAM,EAAE,CAAC;QAClB,CAAC;QAjBQ,UAAU;YADtB,qCAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,EAAE,6BAAa,CAAC;qDAON,0CAAe;gBAC9C,8BAAa;WAP/B,UAAU,CAkBtB;QAAD,iBAAC;KAlBD,AAkBC,CAlB+B,iCAAe,GAkB9C;IAlBY,gCAAU","file":"logConsole.js","sourcesContent":["import {BaseInformation} from \"./baseInformation\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {ILabelService} from \"../../../../business/services/interfaces/ILabelService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {DialogService} from \"aurelia-dialog\";\nimport {LabelService} from \"../../../../business/services/labelService\";\nimport { LoggerService } from \"../../../../../common/core/services/loggerService\";\nimport { ILoggerService } from \"../../../../../common/core/services/ILoggerService\";\nimport { Log } from \"../../../../../common/core/services/models/log\";\n\n@inject(LabelService, EventAggregator, DialogService, LoggerService)\nexport class LogConsole extends BaseInformation {\n\n    public logs: Log[];\n\n    private _loggerService: ILoggerService;\n\n    constructor(labelService: ILabelService, eventAggregator: EventAggregator,\n                dialogService: DialogService, loggerService: ILoggerService) {\n\n        super(labelService, eventAggregator, dialogService);\n        this._loggerService = loggerService;\n    }\n\n    public activateAsync(): Promise<void> {\n        return this._loggerService.getLogs()\n            .then((logs) => this.logs = logs)\n            .return();\n    }\n}\n"],"sourceRoot":"../../../../.."}