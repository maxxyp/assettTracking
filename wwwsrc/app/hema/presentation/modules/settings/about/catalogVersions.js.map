{"version":3,"sources":["hema/presentation/modules/settings/about/catalogVersions.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAaA;QAAqC,mCAAe;QAOhD,yBAAY,YAA2B,EAAE,eAAgC,EAAE,aAA4B,EAC3F,oBAA2C,EAAE,cAA+B;YADxF,YAEI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAKtD;YAHG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;YAClD,KAAI,CAAC,eAAe,GAAG,cAAc,CAAC;;QAC1C,CAAC;QAEM,uCAAa,GAApB;YAAA,iBAMC;YALG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,CAAC;YAClE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,yBAAyB,EAAE;iBAClD,IAAI,CAAC,UAAC,sBAAsB;gBACzB,KAAI,CAAC,sBAAsB,GAAG,IAAI,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;QACX,CAAC;QAtBQ,eAAe;YAD3B,qCAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,EAAE,2CAAoB,EAAE,+BAAc,CAAC;qDAQ7B,0CAAe,EAAiB,8BAAa;WAP9F,eAAe,CAuB3B;QAAD,sBAAC;KAvBD,AAuBC,CAvBoC,iCAAe,GAuBnD;IAvBY,0CAAe","file":"catalogVersions.js","sourcesContent":["import {ILabelService} from \"../../../../business/services/interfaces/ILabelService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {DialogService} from \"aurelia-dialog\";\nimport {LabelService} from \"../../../../business/services/labelService\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {BaseInformation} from \"./baseInformation\";\nimport {ReferenceDataService} from \"../../../../business/services/referenceDataService\";\nimport {IReferenceDataService} from \"../../../../business/services/interfaces/IReferenceDataService\";\nimport {ReferenceVersion} from \"../../../../business/models/reference/referenceVersion\";\nimport {StorageService} from \"../../../../business/services/storageService\";\nimport {IStorageService} from \"../../../../business/services/interfaces/IStorageService\";\n\n@inject(LabelService, EventAggregator, DialogService, ReferenceDataService, StorageService)\nexport class CatalogVersions extends BaseInformation {\n    public referenceVersions: ReferenceVersion[];\n    public lastSuccessfulSyncTime: Date;\n\n    private _referenceDataService: IReferenceDataService;\n    private _storageService: IStorageService;\n\n    constructor(labelService: ILabelService, eventAggregator: EventAggregator, dialogService: DialogService,\n                referenceDataService: IReferenceDataService, storageService: IStorageService) {\n        super(labelService, eventAggregator, dialogService);\n\n        this.isExpanded = false;\n        this._referenceDataService = referenceDataService;\n        this._storageService = storageService;\n    }\n\n    public attachedAsync() : Promise<void> {\n        this.referenceVersions = this._referenceDataService.getVersions();\n        return this._storageService.getLastSuccessfulSyncTime()\n            .then((lastSuccessfulSyncTime) => {\n                this.lastSuccessfulSyncTime = new Date(lastSuccessfulSyncTime);\n            });\n    }\n}\n"],"sourceRoot":"../../../../.."}