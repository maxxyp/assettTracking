{"version":3,"sources":["hema/presentation/modules/settings/about/endpointDetails.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAWA;QAAqC,mCAAe;QAKhD,yBAAY,YAA2B,EAAE,eAAgC,EAAE,aAA4B,EAC3F,oBAA2C;YADvD,YAEI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAKtD;YAHG,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YACxB,KAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;YAClD,KAAI,CAAC,SAAS,GAAG,EAAE,CAAC;;QACxB,CAAC;QAEM,uCAAa,GAApB;YACI,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,CAAC;YAC9C,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,CAAC;YACjD,IAAI,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,CAAC;YAChD,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,CAAC,CAAC;YACjD,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAEO,4CAAkB,GAA1B,UAA2B,OAAe;YAA1C,iBAQC;YAPG,IAAI,qBAAqB,GAA2B,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAyB,OAAO,CAAC,CAAC;YACjI,EAAE,CAAC,CAAC,qBAAqB;gBACrB,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC/B,qBAAqB,CAAC,MAAM,CAAC,OAAO,CAAC,UAAA,KAAK;oBACvC,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,IAAI,EAAC,CAAC,CAAC;gBACzI,CAAC,CAAC,CAAC;YACP,CAAC;QACL,CAAC;QA9BQ,eAAe;YAD3B,qCAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,EAAE,2CAAoB,CAAC;qDAMb,0CAAe,EAAiB,8BAAa;WAL9F,eAAe,CA+B3B;QAAD,sBAAC;KA/BD,AA+BC,CA/BoC,iCAAe,GA+BnD;IA/BY,0CAAe","file":"endpointDetails.js","sourcesContent":["import {ILabelService} from \"../../../../business/services/interfaces/ILabelService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {DialogService} from \"aurelia-dialog\";\nimport {LabelService} from \"../../../../business/services/labelService\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {BaseInformation} from \"./baseInformation\";\nimport {IConfigurationService} from \"../../../../../common/core/services/IConfigurationService\";\nimport {ConfigurationService} from \"../../../../../common/core/services/configurationService\";\nimport {IEndpointConfiguration} from \"../../../../../common/resilience/models/IEndpointConfiguration\";\n\n@inject(LabelService, EventAggregator, DialogService, ConfigurationService)\nexport class EndpointDetails extends BaseInformation {\n    public endpoints: { routeName: string, client: string, path: string }[];\n\n    private _configurationService: IConfigurationService;\n\n    constructor(labelService: ILabelService, eventAggregator: EventAggregator, dialogService: DialogService,\n                configurationService: IConfigurationService) {\n        super(labelService, eventAggregator, dialogService);\n\n        this.isExpanded = false;\n        this._configurationService = configurationService;\n        this.endpoints = [];\n    }\n\n    public attachedAsync() : Promise<void> {\n        this.addClientEndpoints(\"fftServiceEndpoint\");\n        this.addClientEndpoints(\"whoAmIServiceEndpoint\");\n        this.addClientEndpoints(\"adaptServiceEndpoint\");\n        this.addClientEndpoints(\"assetTrackingEndpoint\");\n        return Promise.resolve();\n    }\n\n    private addClientEndpoints(service: string) : void {\n        let endpointConfiguration: IEndpointConfiguration = this._configurationService.getConfiguration<IEndpointConfiguration>(service);\n        if (endpointConfiguration &&\n            endpointConfiguration.routes) {\n            endpointConfiguration.routes.forEach(route => {\n               this.endpoints.push({routeName: service.replace(\"ServiceEndpoint\", \"\") + \"::\" + route.route, client: route.client, path: route.path});\n            });\n        }\n    }\n}\n"],"sourceRoot":"../../../../.."}