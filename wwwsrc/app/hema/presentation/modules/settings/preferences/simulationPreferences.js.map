{"version":3,"sources":["hema/presentation/modules/settings/preferences/simulationPreferences.ts"],"names":[],"mappings":"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","file":"simulationPreferences.js","sourcesContent":["import {inject} from \"aurelia-dependency-injection\";\r\nimport {EventAggregator} from \"aurelia-event-aggregator\";\r\nimport {SimulationConstants} from \"../../../../../common/simulation/constants/simulationConstants\";\r\nimport {observable} from \"aurelia-binding\";\r\nimport {StorageService} from \"../../../../business/services/storageService\";\r\nimport {IStorageService} from \"../../../../business/services/interfaces/IStorageService\";\r\nimport {ConfigurationService} from \"../../../../../common/core/services/configurationService\";\r\nimport {IConfigurationService} from \"../../../../../common/core/services/IConfigurationService\";\r\nimport {ITrainingModeConfiguration} from \"../../../../business/services/interfaces/ITrainingModeConfiguration\";\r\nimport {ISimulation} from \"../../../../business/services/interfaces/ISimulation\";\r\nimport {BaseViewModel} from \"../../../models/baseViewModel\";\r\nimport {ILabelService} from \"../../../../business/services/interfaces/ILabelService\";\r\nimport {DialogService} from \"aurelia-dialog\";\r\nimport {LabelService} from \"../../../../business/services/labelService\";\r\nimport {WindowHelper} from \"../../../../core/windowHelper\";\r\n\r\n@inject(LabelService, EventAggregator, DialogService, ConfigurationService, StorageService)\r\nexport class SimulationPreferences extends BaseViewModel {\r\n\r\n    public simulations: ISimulation[];\r\n\r\n    @observable()\r\n    public engineerId: string;\r\n\r\n    @observable()\r\n    public customEngineerId: string;\r\n\r\n    private _storageService: IStorageService;\r\n    private _pageReady: boolean;\r\n    private _configurationService: IConfigurationService;\r\n    private _appConfig: ITrainingModeConfiguration;\r\n\r\n    constructor(labelService: ILabelService,\r\n                eventAggregator: EventAggregator,\r\n                dialogService: DialogService,\r\n                configurationService: IConfigurationService,\r\n                storageService: IStorageService) {\r\n        super(labelService, eventAggregator, dialogService);\r\n\r\n        this._storageService = storageService;\r\n        this._configurationService = configurationService;\r\n        this._appConfig = this._configurationService.getConfiguration<ITrainingModeConfiguration>();\r\n        this.simulations = this._appConfig.simulation || [];\r\n    }\r\n\r\n    public activateAsync(): Promise<void> {\r\n        return this._storageService.getSimulationEngineer()\r\n            .then((engineerId) => {\r\n                if (this.simulations && this.simulations.some(sim => sim.engineerId === engineerId)) {\r\n                    this.engineerId = engineerId;\r\n                } else {\r\n                    this.customEngineerId = engineerId;\r\n                }\r\n                this._pageReady = true;\r\n            });\r\n    }\r\n\r\n    public engineerIdChanged(newValue: string, oldValue: string): void {\r\n        if (this._pageReady && newValue !== oldValue) {\r\n            let simulation = this.simulations.find(sim => sim.engineerId === this.engineerId);\r\n\r\n            this.setEngineer(simulation);\r\n        }\r\n    }\r\n\r\n    public assignCustomEngineerId(): void {\r\n        let simulation: ISimulation = {\r\n            firstName: \"Custom\",\r\n            lastName: \"Engineer\",\r\n            engineerId: this.customEngineerId\r\n        };\r\n\r\n        this.setEngineer(simulation);\r\n    }\r\n\r\n    private setEngineer(simulation: ISimulation): void {\r\n        if (simulation) {\r\n            this._storageService.deleteEngineer()\r\n                .then(() => this._storageService.setWorkListJobs(null))\r\n                .then(() => this._storageService.setMaterials(null))\r\n                .then(() => this._storageService.setMaterialAdjustments(null))\r\n                .then(() => this._storageService.setSimulationEngineer(simulation.engineerId))\r\n                .then(() => this._storageService.setMessages(null))\r\n                .then(() => {\r\n                    this._eventAggregator.publish(SimulationConstants.SIMULATION_OVERRIDE_EVENT, {\r\n                        route: \"whoami/v1\",\r\n                        data: {\r\n                            userId: simulation.firstName.toLowerCase() + simulation.lastName.toLowerCase(),\r\n                            attributes: [\r\n                                {\r\n                                    \"employeeid\": simulation.engineerId\r\n                                },\r\n                                {\r\n                                    \"givenname\": simulation.firstName\r\n                                },\r\n                                {\r\n                                    \"sn\": simulation.lastName\r\n                                },\r\n                                {\r\n                                    \"telephonenumber\": \"01234 567890\"\r\n                                }\r\n                            ]\r\n                        }\r\n                    });\r\n\r\n                    WindowHelper.reload();\r\n                });\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"../../../../.."}