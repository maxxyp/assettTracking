{"version":3,"sources":["hema/presentation/modules/settings/preferences/preferences.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAcA;QAAiC,+BAAa;QAO1C,qBAAY,YAA2B,EAAE,eAAgC,EAAE,aAA4B,EAC3F,oBAA2C,EAAE,cAA+B;YADxF,YAEI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAKtD;YAHG,KAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;YAClD,KAAI,CAAC,eAAe,GAAG,cAAc,CAAC;YACtC,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAA8B,CAAC;;QAChG,CAAC;QAEM,mCAAa,GAApB;YACI,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,IAAI,CAAC,CAAC,+BAAc,CAAC,aAAa,CAAC;YACrF,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAEM,wCAAkB,GAAzB;YACI,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE,CAAC;QACvD,CAAC;QAvBQ,WAAW;YADvB,qCAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,EAAE,2CAAoB,EAAE,+BAAc,CAAC;qDAQ7B,0CAAe,EAAiB,8BAAa;WAP9F,WAAW,CAwBvB;QAAD,kBAAC;KAxBD,AAwBC,CAxBgC,6BAAa,GAwB7C;IAxBY,kCAAW","file":"preferences.js","sourcesContent":["import { inject } from \"aurelia-dependency-injection\";\nimport { ILabelService } from \"../../../../business/services/interfaces/ILabelService\";\nimport { LabelService } from \"../../../../business/services/labelService\";\nimport {BaseViewModel} from \"../../../models/baseViewModel\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {DialogService} from \"aurelia-dialog\";\nimport {IConfigurationService} from \"../../../../../common/core/services/IConfigurationService\";\nimport {ConfigurationService} from \"../../../../../common/core/services/configurationService\";\nimport {StorageService} from \"../../../../business/services/storageService\";\nimport {IStorageService} from \"../../../../business/services/interfaces/IStorageService\";\nimport {ITrainingModeConfiguration} from \"../../../../business/services/interfaces/ITrainingModeConfiguration\";\nimport {PlatformHelper} from \"../../../../../common/core/platformHelper\";\n\n@inject(LabelService, EventAggregator, DialogService, ConfigurationService, StorageService)\nexport class Preferences extends BaseViewModel {\n    public showSimulation: boolean;\n\n    private _configurationService: IConfigurationService;\n    private _storageService: IStorageService;\n    private _appConfig: ITrainingModeConfiguration;\n\n    constructor(labelService: ILabelService, eventAggregator: EventAggregator, dialogService: DialogService,\n                configurationService: IConfigurationService, storageService: IStorageService) {\n        super(labelService, eventAggregator, dialogService);\n\n        this._configurationService = configurationService;\n        this._storageService = storageService;\n        this._appConfig = this._configurationService.getConfiguration<ITrainingModeConfiguration>();\n    }\n\n    public activateAsync(): Promise<any> {\n        this.showSimulation = !!this._appConfig.simulation || !!PlatformHelper.isDevelopment;\n        return Promise.resolve();\n    }\n\n    public canDeactivateAsync(): Promise<boolean> {\n        return this._storageService.userSettingsComplete();\n    }\n}\n"],"sourceRoot":"../../../../.."}