{"version":3,"sources":["hema/presentation/modules/risks/riskMain.ts"],"names":[],"mappings":"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","file":"riskMain.js","sourcesContent":["/// <reference path=\"./../../../../../typings/app.d.ts\" />\n\nimport { inject } from \"aurelia-framework\";\nimport { Router, RouterConfiguration, RouteConfig } from \"aurelia-router\";\n\nimport { IRiskService } from \"../../../business/services/interfaces/IRiskService\";\nimport { RiskService } from \"../../../business/services/RiskService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { EditableViewModel } from \"../../models/editableViewModel\";\nimport { CatalogService } from \"../../../business/services/catalogService\";\nimport { BusinessRuleService } from \"../../../business/services/businessRuleService\";\nimport { ValidationService } from \"../../../business/services/validationService\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { IBusinessRuleService } from \"../../../business/services/interfaces/IBusinessRuleService\";\nimport { ICatalogService } from \"../../../business/services/interfaces/ICatalogService\";\nimport { IValidationService } from \"../../../business/services/interfaces/IValidationService\";\nimport { EngineerService } from \"../../../business/services/engineerService\";\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { AnimationService } from \"../../../../common/ui/services/animationService\";\nimport { IAnimationService } from \"../../../../common/ui/services/IAnimationService\";\n\n@inject(JobService, EngineerService, RiskService, LabelService, EventAggregator, DialogService, ValidationService, BusinessRuleService, CatalogService, AnimationService)\nexport class RiskMain extends EditableViewModel {\n    public router: Router;\n\n    public jobId: string;\n    public riskId: string;\n    public riskIds: string[];\n    public card: HTMLElement;\n\n    private _childRoutes: RouteConfig[];\n    private _riskPosition: number;\n    private _animationService: IAnimationService;\n    private _riskService: IRiskService;\n\n    constructor(jobService: IJobService,\n        engineerService: IEngineerService,\n        riskService: IRiskService,\n        labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        validationService: IValidationService,\n        businessRuleService: IBusinessRuleService,\n        catalogService: ICatalogService,\n        animationService: IAnimationService) {\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRuleService, catalogService);\n        this._animationService = animationService;\n        this._riskService = riskService;\n        this.riskIds = [];\n    }\n\n    public configureRouter(config: RouterConfiguration, childRouter: Router): void {\n        this.router = childRouter;\n\n        this.setupChildRoutes();\n        config.map(this._childRoutes);\n    }\n\n    public activateAsync(params: { jobId: string, riskId: string }): Promise<void> {\n        this.jobId = params.jobId;\n        this.riskId = params.riskId;\n\n        return this.load()\n                .then(() => this.showContent());\n\n    }\n    public swipeFunction(swipeDirection: string): void {\n        if (this._riskPosition !== -1) {\n            if (swipeDirection === \"left\") {\n                this._animationService.swipe(this.card, this.riskIds, this._riskPosition, swipeDirection, \"slide-in-right\", \"slide-out-left\", 300).then((position) => {\n                    this.router.parent.navigate(this.router.parent.currentInstruction.fragment.replace(this.riskIds[this._riskPosition], this.riskIds[position]));\n                    this._riskPosition = position;\n                })\n                    .catch();\n            } else {\n                this._animationService.swipe(this.card, this.riskIds, this._riskPosition, swipeDirection, \"slide-in-left\", \"slide-out-right\", 300).then((position) => {\n                    this.router.parent.navigate(this.router.parent.currentInstruction.fragment.replace(this.riskIds[this._riskPosition], this.riskIds[position]));\n                    this._riskPosition = position;\n                })\n                    .catch();\n            }\n        }\n    }\n\n    protected loadModel(): Promise<void> {\n        return this._riskService.getRisks(this.jobId)\n            .then(risks => {\n                if (risks) {\n                    this.riskIds = risks.map(r => r.id);\n                    this._riskPosition = this.riskIds.indexOf(this.riskId);\n                }\n            });\n    }\n\n    private setupChildRoutes(): void {\n        this._childRoutes = [\n            {\n                route: \"\",\n                redirect: \"details\"\n            },\n            {\n                route: \"details\",\n                moduleId: \"hema/presentation/modules/risks/riskItem\",\n                name: \"details\",\n                nav: true,\n                title: \"Details\",\n                settings: { tabGroupParent: \"risks\" }\n            }\n        ];\n    }\n\n}\n"],"sourceRoot":"../../../.."}