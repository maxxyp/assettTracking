{"version":3,"sources":["hema/presentation/modules/appliances/gasSafety.ts"],"names":[],"mappings":"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","file":"gasSafety.js","sourcesContent":["import { inject, BindingEngine } from \"aurelia-framework\";\nimport { Router, Redirect } from \"aurelia-router\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { Subscription } from \"aurelia-event-aggregator\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { IValidationService } from \"../../../business/services/interfaces/IValidationService\";\nimport { ValidationService } from \"../../../business/services/validationService\";\nimport { IBusinessRuleService } from \"../../../business/services/interfaces/IBusinessRuleService\";\nimport { BusinessRuleService } from \"../../../business/services/businessRuleService\";\nimport { IApplianceService } from \"../../../business/services/interfaces/IApplianceService\";\nimport { ApplianceService } from \"../../../business/services/applianceService\";\nimport { CatalogService } from \"../.././../business/services/catalogService\";\nimport { ICatalogService } from \"../../../business/services/interfaces/ICatalogService\";\nimport { EditableViewModel } from \"../../models/editableViewModel\";\nimport { GasSafetyViewModel } from \"./viewModels/gasSafetyViewModel\";\nimport { GasUnsafetyViewModel } from \"./viewModels/gasUnsafetyViewModel\";\nimport { Appliance } from \"../../../business/models/appliance\";\nimport { IApplianceGasSafetyFactory } from \"../../factories/interfaces/IApplianceGasSafetyFactory\";\nimport { ApplianceGasSafetyFactory } from \"../../factories/applianceGasSafetyFactory\";\nimport { ButtonListItem } from \"../../../../common/ui/elements/models/buttonListItem\";\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\nimport { EngineerService } from \"../../../business/services/engineerService\";\nimport { ApplianceReading } from \"./applianceReading\";\nimport { ObjectHelper } from \"../../../../common/core/objectHelper\";\nimport { StringHelper } from \"../../../../common/core/stringHelper\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { GasApplianceReadingViewModel } from \"./viewModels/gasApplianceReadingViewModel\";\nimport { Threading } from \"../../../../common/core/threading\";\nimport { GasApplianceReadingsMasterViewModel } from \"./viewModels/gasApplianceReadingsMasterViewModel\";\nimport { CatalogConstants } from \"../../../business/services/constants/catalogConstants\";\nimport { YesNoNa } from \"../../../business/models/yesNoNa\";\nimport { AppliancePageHelper } from \"./appliancePageHelper\";\n// import { BaseException } from \"../../../../common/core/models/baseException\";\nimport { observable } from \"aurelia-binding\";\n\n@inject(JobService, EngineerService, LabelService, ApplianceService, Router,\n    EventAggregator, DialogService, ValidationService, BusinessRuleService, CatalogService, BindingEngine, ApplianceGasSafetyFactory)\nexport class GasSafety extends EditableViewModel {\n    public gasSafetyViewModel: GasSafetyViewModel;\n    public gasUnsafeViewModel: GasUnsafetyViewModel;\n    public appliance: Appliance;\n    public applianceId: string;\n    public jobId: string;\n    public isSafe: boolean;\n    public unsafeReasonFields: string[];\n    public unsafeSituationLookup: { [id: string]: string };\n    public isLandlordJob: boolean;\n\n    /* Gas Safety */\n    public showPerformanceTestNotDoneReasons: boolean;\n    public showPerformanceTestNotDoneReasonsForSupplementary: boolean;\n    @observable\n    public showApplianceStripped: boolean;\n    public showSupplementaryApplianceStripped: boolean;\n    public showApplianceTightnessOk: boolean;\n    public showVentSizeConfigOk: boolean;\n    public showVisuallyCheckRelight: boolean;\n    public showSafetyDevice: boolean;\n    public showApplianceSafe: boolean;\n    public showCurrentStandards: boolean;\n    public disableToCurrentStandards: boolean;\n    public disableApplianceSafe: boolean;\n    public disableConditionAsLeft: boolean;\n    public showChimneyInstallationAndTests: boolean;\n    public showUnsafeWarningMsg: boolean;\n\n    public performanceTestNotDoneReasonLookup: ButtonListItem[];\n    public performanceTestNotDoneReasonLookupForSupplementary: ButtonListItem[];\n    public applianceStrippedLookup: ButtonListItem[];\n    public didYouWorkOnApplianceLookup: ButtonListItem[];\n    public didYouVisuallyCheckLookup: ButtonListItem[];\n    public applianceTightnessLookup: ButtonListItem[];\n    public chimneyInstallationAndTestsLookup: ButtonListItem[];\n    public ventSizeConfigLookup: ButtonListItem[];\n    public safetyDeviceLookup: ButtonListItem[];\n    public isApplianceSafeLookup: ButtonListItem[];\n    public toCurrentStandardsLookup: ButtonListItem[];\n\n    public requestedToTestLookup: ButtonListItem[];\n    public ableToTestLookup: ButtonListItem[];\n\n    /* Gas Safety */\n\n    /* Gas Unsafe */\n    public conditionAsLeftLookup: ButtonListItem[];\n    public cappedTurnedOffLookup: ButtonListItem[];\n    public labelAttachedRemovedLookup: ButtonListItem[];\n    public ownedByCustomerLookup: ButtonListItem[];\n    public letterLeftLookup: ButtonListItem[];\n    public signatureObtainedLookup: ButtonListItem[];\n\n    private _showToasts: boolean;\n    private _applianceStrippedQuestionBusinessRule: string[];\n    private _applianceStrippedQuestionbusinessRuleForSupplementary: string[];\n    /* Gas Unsafe */\n\n    private _performanceTestNotDoneReasonExceptions: string[];\n    private _flueTypesExceptions: string[];\n    private _gasReadings: GasApplianceReadingsMasterViewModel;\n\n    private _applianceService: IApplianceService;\n    private _applianceGasSafetyFactory: IApplianceGasSafetyFactory;\n    private _bindingEngine: BindingEngine;\n    private _gasSubscriptions: Subscription[];\n    private _unsafeToastDismissTime: number;\n    private _conditionsAsLeftNotToCurrentStandardsOption: string;\n    private _cappedTurnedOffDisabledOptionsForNTCS: string[];\n    private _cappedTurnedOffNotApplicableOption: string;\n    private _labelARDisabledOptionsForNTCS: string[];\n    private _labelARDisabledOptionsForNonNTCS: string[];\n    private _didYouWorkOnApplianceNoOption: boolean;\n    private _conditionAsLeftImmediatelyDangerousOption: string;\n    private _cappedTurnedOffOptionsForWarningMsg: string[];\n\n    public constructor(jobService: IJobService,\n        engineerService: IEngineerService,\n        labelService: ILabelService,\n        applianceService: IApplianceService,\n        router: Router,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        validationService: IValidationService,\n        businessRulesService: IBusinessRuleService,\n        catalogService: ICatalogService,\n        bindingEngine: BindingEngine,\n        applianceGasSafetyFactory: IApplianceGasSafetyFactory) {\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRulesService, catalogService);\n        this._applianceService = applianceService;\n        this._applianceGasSafetyFactory = applianceGasSafetyFactory;\n        this._bindingEngine = bindingEngine;\n        this.unsafeReasonFields = [];\n        this.showUnsafeWarningMsg = false;\n        this.showSupplementaryApplianceStripped = false;\n        this.showPerformanceTestNotDoneReasonsForSupplementary = false;\n    }\n\n    public canActivateAsync(...rest: any[]): Promise<boolean | Redirect> {\n        return AppliancePageHelper.checkApplianceSafetyType(this._applianceService, rest);\n    }\n\n    public activateAsync(params: { applianceId: string, jobId: string }): Promise<any> {\n        this.applianceId = params.applianceId;\n        this.jobId = params.jobId;\n        if (this._isCleanInstance) {\n            return this.loadBusinessRules()\n                .then(() => this.buildBusinessRules())\n                .then(() => this.buildValidationRules())\n                .then(() => this.loadCatalogs())\n                .then(() => this._labelService.getGroupWithoutCommon(StringHelper.toCamelCase(ObjectHelper.getClassName(ApplianceReading))))\n                .then(labels => this.attachLabels(labels))\n                .then(() => this.load())\n                .then(() => this.showContent());\n        } else {\n            return this.load();\n        }\n    }\n\n    public deactivateAsync(): Promise<void> {\n        this._showToasts = false;\n        this.removeObservables();\n        return Promise.resolve();\n    }\n\n    public unsafeSituation(): void {\n        if (this.gasSafetyViewModel) {\n            this.gasSafetyViewModel.isApplianceSafe = false;\n        }\n    }\n\n    /* observables start */\n    public obserApplianceSafe(newValue: boolean, oldValue: boolean, onload: boolean): void {\n        this.isSafe = newValue;\n\n        if (!this.isSafe && this.gasSafetyViewModel.toCurrentStandards === YesNoNa.No) {\n            this.gasUnsafeViewModel.conditionAsLeft = undefined;\n            this.gasUnsafeViewModel.cappedTurnedOff = undefined;\n            this.gasUnsafeViewModel.labelAttachedRemoved = undefined;\n        }\n\n        if (!onload || this.disableApplianceSafe) {\n            this.gasSafetyViewModel.toCurrentStandards = newValue === undefined ? undefined : YesNoNa.Yes;\n        }\n\n        this.disableToCurrentStandards = this.isSafe === false;\n        if (this.disableToCurrentStandards) {\n            this.disableConditionAsLeft = false;\n            this.populateUnsafeReason(\"toCurrentStandards\", true);\n        }\n\n        if (newValue !== undefined) {\n            this.populateUnsafeReason(\"applianceSafe\", newValue);\n        }\n\n        if (newValue === true) {\n            this.showCurrentStandards = this.gasSafetyViewModel.isApplianceSafe !== false || this.gasSafetyViewModel.toCurrentStandards !== undefined;\n        }\n\n        if (!onload && oldValue === undefined) {\n            this.showApplianceSafe = true;\n            this.showCurrentStandards = this.gasSafetyViewModel.isApplianceSafe !== false || this.gasSafetyViewModel.toCurrentStandards !== undefined;\n        }\n\n        if (newValue !== undefined && this.showApplianceSafe === false) {\n            this.showApplianceSafe = true;\n            this.showCurrentStandards = this.gasSafetyViewModel.isApplianceSafe !== false || this.gasSafetyViewModel.toCurrentStandards !== undefined;\n        }\n    }\n\n    public obserToCurrentStandards(newValue: YesNoNa, oldValue: YesNoNa, onload: boolean): void {\n        switch (newValue) {\n            case YesNoNa.No:\n                this.populateUnsafeReason(\"toCurrentStandards\", false);\n                this.disableConditionAsLeft = true;\n                this.gasUnsafeViewModel.conditionAsLeft = this._conditionsAsLeftNotToCurrentStandardsOption;\n                break;\n            case YesNoNa.Na:\n                this.populateUnsafeReason(\"toCurrentStandards\", true);\n                this.disableConditionAsLeft = false;\n                break;\n        }\n    }\n\n    public obserApplianceTightnessOk(newValue: YesNoNa, oldValue: YesNoNa, onload: boolean): void {\n        this.populateUnsafeReason(\"applianceTightness\", (newValue === YesNoNa.No) ? false : true);       \n    }\n\n    public obserVentSizeConfigOk(newValue: boolean, oldValue: boolean, onload: boolean): void {\n        this.populateUnsafeReason(\"ventSizeConfig\", newValue);         \n    }\n\n    public obserSafetyDevice(newValue: YesNoNa, oldValue: YesNoNa, onload: boolean): void {\n        this.populateUnsafeReason(\"safetyDevice\", (newValue === YesNoNa.No) ? false : true);        \n    }\n\n    public obserDidYouVisuallyCheck(newValue: boolean, oldValue: boolean, onload: boolean): void {\n        if (this.gasSafetyViewModel.workedOnAppliance === true) {\n            newValue = undefined;\n        }\n        this.populateUnsafeReason(\"didYouVisuallyCheck\", newValue);\n    }\n\n    public obserWorkedOnAppliance(newValue: boolean, oldValue: boolean, onload: boolean): Promise<void> {\n        if (newValue === true) {\n            this.showSafetyDevice = true;\n            this.showApplianceTightnessOk = true;\n            this.showApplianceStripped = true;\n            this.showVentSizeConfigOk = true;\n            this.showVisuallyCheckRelight = false;\n            this.disableApplianceSafe = false;\n            this.disableConditionAsLeft = false;\n            this.showApplianceSafe = true;\n            this.showCurrentStandards = true;\n            this.isChimneyInstallationRequired();\n            this.updatePerformanceTestCarriedOutAndApplianceStripped(newValue, onload);\n            this.gasSafetyViewModel.overrideWorkedOnAppliance = false;\n            this.gasSafetyViewModel.didYouVisuallyCheck = undefined;\n\n            return Promise.resolve();\n        } else if (newValue === false) {\n            if (!onload) {\n                if (this.isApplianceSafetyAndReadingsAreEmpty() === false) {\n                    return this.clearReadings().then((clear) => {\n                        if (clear === true) {\n                            this.clearForWorkOnAppliance(newValue, onload);\n                        } else {\n                            Threading.nextCycle(() => {\n                                this.gasSafetyViewModel.workedOnAppliance = true;\n                            });\n                        }\n                        return Promise.resolve();\n                    });\n                } else {\n                    // no readings and no safet details hence...\n                    // dont bother asking question just clear\n                    this.clearForWorkOnAppliance(newValue, onload);\n                    return Promise.resolve();\n                }\n            } else {\n                this.showVisuallyCheckRelight = true;\n                this.showApplianceSafe = true;\n                this.showCurrentStandards = true;\n                this.showPerformanceTestNotDoneReasons = false;\n                this.showApplianceStripped = false;\n                this.showPerformanceTestNotDoneReasonsForSupplementary = false;\n                this.showSupplementaryApplianceStripped = false;\n                this.gasSafetyViewModel.performanceTestsNotDoneReason = undefined;\n                this.gasSafetyViewModel.applianceStripped = undefined;\n                this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary = undefined;\n                this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n                this.showApplianceTightnessOk = false;\n                this.showVentSizeConfigOk = false;\n                this.showSafetyDevice = false;\n                this.gasSafetyViewModel.overrideWorkedOnAppliance = true;\n                this.showChimneyInstallationAndTests = false;\n                this.updatePerformanceTestCarriedOutAndApplianceStripped(newValue, onload);\n                return Promise.resolve();\n            }\n        } else {\n            this.gasSafetyViewModel.overrideWorkedOnAppliance = false;\n            this.updatePerformanceTestCarriedOutAndApplianceStripped(newValue, onload);\n            return Promise.resolve();\n        }\n    }\n\n    public obserApplianceStripped(newValue: boolean, oldValue: boolean, onload: boolean): void {\n        if (newValue === true) {\n            this.populateUnsafeReason(\"applianceStripped\", true);\n        } else if (newValue === false) {\n            if (this._performanceTestNotDoneReasonExceptions) {\n                if (this._performanceTestNotDoneReasonExceptions\n                    .some(x => x === this.gasSafetyViewModel.performanceTestsNotDoneReason)) {\n                    this.populateUnsafeReason(\"applianceStripped\", true);\n                } else {\n                    this.populateUnsafeReason(\"applianceStripped\", false);\n                }\n            }\n        }\n    }\n\n    public obserSupplementaryApplianceStripped(newValue: boolean, oldValue: boolean, onload: boolean): void {\n        if (newValue === true) {\n            this.populateUnsafeReason(\"supplementaryApplianceStripped\", true);\n        } else if (newValue === false) {\n            if (this._performanceTestNotDoneReasonExceptions) {\n                if (this._performanceTestNotDoneReasonExceptions\n                    .some(x => x === this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary)) {\n                    this.populateUnsafeReason(\"supplementaryApplianceStripped\", true);\n                } else {\n                    this.populateUnsafeReason(\"supplementaryApplianceStripped\", false);\n                }\n            }\n        }\n    }\n\n    public obserChimneyInstallationAndTests(newValue: YesNoNa, oldValue: YesNoNa, onload: boolean): void {\n        this.populateUnsafeReason(\"chimneyInstallationAndTests\", (newValue === YesNoNa.No) ? false : true);        \n    }\n\n    public obserPerformanceTestsNotDoneReason(newValue: string, oldValue: string, onload: boolean): void {\n        if (newValue !== undefined) {\n            if (this._applianceStrippedQuestionBusinessRule) {\n                if (this._applianceStrippedQuestionBusinessRule.some(x => x === newValue)) {\n                    this.showApplianceStripped = true;\n                } else {\n                    this.showApplianceStripped = false;\n                    this.gasSafetyViewModel.applianceStripped = undefined;\n                    this.populateUnsafeReason(\"applianceStripped\", true);\n                }\n            }\n        } else {\n            this.gasSafetyViewModel.applianceStripped = undefined;\n        }\n    }\n\n    public obserPerformanceTestsNotDoneReasonForSupplementary(newValue: string, oldValue: string, onload: boolean): void {\n        if (newValue !== undefined) {\n            if (this._applianceStrippedQuestionbusinessRuleForSupplementary) {\n                if (this._applianceStrippedQuestionbusinessRuleForSupplementary.some(x => x === newValue)) {\n                    this.showSupplementaryApplianceStripped = true;\n                } else {\n                    this.showSupplementaryApplianceStripped = false;\n                    this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n                    this.populateUnsafeReason(\"supplementaryApplianceStripped\", true);\n                }\n            }\n        } else {\n            this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n        }\n    }\n\n    public obserAbleToTest(newValue: boolean, oldValue: boolean): void {\n        this.disableWorkedOnApplianceNoButton();\n    }\n\n    public obserRequestedTest(newValue: boolean, oldValue: boolean): void {\n        this.disableWorkedOnApplianceNoButton();\n    }\n    /* observables end */\n\n    protected saveModel(): Promise<void> {\n        if (this.gasSafetyViewModel.workedOnAppliance === false) {\n            this.resetReadingsViewModel();\n        }\n        this.gasSafetyViewModel.dataState = this.getFinalDataState();\n\n        // need to keep the dataStateId to track. Used object assign to make sure the current dataStateId gets mapped to the new object\n        let gasReadings = Object.assign({ dataStateId: this.appliance.safety.applianceGasReadingsMaster.dataStateId }, this._gasReadings);\n\n        // todo: beware - at this point this.appliance is actually a reference to the real appliance model, at this point\n        //  we are manipulating the stored model (i.e. saveApplianceSafetyDetails() is effectively just writing already updated model to storage)\n        this.appliance.safety.applianceGasReadingsMaster = this._applianceGasSafetyFactory.createApplianceGasReadingsBusinessModel(gasReadings);\n        this.appliance.safety.applianceGasSafety = this._applianceGasSafetyFactory.createApplianceGasSafetyBusinessModel(this.gasSafetyViewModel, this.appliance.isSafetyRequired);\n        this.appliance.safety.applianceGasUnsafeDetail = this._applianceGasSafetyFactory.createApplianceGasUnsafeBusinessModel(this.gasUnsafeViewModel);\n\n        return this._applianceService.saveApplianceSafetyDetails(this.jobId, this.appliance.id, this.appliance.safety, this._isDirty, false);\n    }\n\n    protected loadModel(): Promise<void> {\n        return this._jobService.getJob(this.jobId)\n            .then((job) => {\n                this.isLandlordJob = job.isLandlordJob;\n\n                return this._applianceService.getAppliance(this.jobId, this.applianceId);\n            })\n            .then((appliance) => {\n                this.resetLocalModels();\n\n                if (appliance) {\n                    this.appliance = appliance;\n\n                    this.gasSafetyViewModel = this._applianceGasSafetyFactory.createApplianceGasSafetyViewModel(appliance.safety.applianceGasSafety, appliance.isSafetyRequired);\n                    this.gasUnsafeViewModel = this._applianceGasSafetyFactory.createApplianceGasUnsafeViewModel(appliance.safety.applianceGasUnsafeDetail);\n                    this._gasReadings = this._applianceGasSafetyFactory.createApplianceGasReadingsViewModel(appliance.safety.applianceGasReadingsMaster);\n                    this.setInitialDataState(this.gasSafetyViewModel.dataStateId, this.gasSafetyViewModel.dataState);\n                } else {\n                    this.setNewDataState(\"appliances\");\n                }\n            })\n            .then(() => this.populateUnsafeFieldLabelMap())\n            .then(() => this.removeObservables())\n            .then(() => this.initGasSafetyStatus())\n            .then(() => this.setObservables())\n            .then(() => this.updatePerformanceTestCarriedOutAndApplianceStripped(this.gasSafetyViewModel.workedOnAppliance, true))\n            .then(() => {\n                // get adapt make and model non blocking.\n                this._showToasts = true;\n            });\n    }\n\n    protected clearModel(): Promise<void> {\n        this.removeObservables();\n        this.resetLocalModels();\n        this.resetReadingsViewModel();\n        this.initGasSafetyStatus();\n        this.setObservables();\n        return Promise.resolve();\n    }\n\n    protected undoModel(): void {\n        this._showToasts = false;\n    }\n\n    private loadCatalogs(): Promise<void> {\n        let catalogPromises = [\n            this._catalogService.getSafetyActions()\n                .then(safetyActions => {\n                    this.cappedTurnedOffLookup = this.toButtonListItemArray(safetyActions, CatalogConstants.SAFETY_ACTION_ID, CatalogConstants.SAFETY_ACTION_DESCRIPTION);\n                }),\n\n            this._catalogService.getSafetyNoticeTypes()\n                .then(safetyNoticeTypes => {\n                    this.conditionAsLeftLookup = this.toButtonListItemArray(safetyNoticeTypes, CatalogConstants.SAFETY_NOTICE_TYPE_ID, CatalogConstants.SAFETY_NOTICE_TYPE_DESCRIPTION);\n                }),\n\n            this._catalogService.getSafetyNoticeStatuses()\n                .then(safetyNoticeStatus => {\n                    this.labelAttachedRemovedLookup = this.toButtonListItemArray(safetyNoticeStatus, CatalogConstants.SAFETY_NOTICE_STATUS_ID, CatalogConstants.SAFETY_NOTICE_STATUS_DESCRIPTION);\n                }),\n\n            this._catalogService.getPerformanceTestReasons()\n                .then(performanceTestNotDoneReason => {\n                    this.performanceTestNotDoneReasonLookup = \n                        this.toButtonListItemArray(performanceTestNotDoneReason.filter(p => p.category === this.getLabel(\"preliminary\")),\n                            CatalogConstants.PERFORMANCE_TEST_REASON_ID,\n                            CatalogConstants.PERFORMANCE_TEST_REASON_DESCRIPTION);\n\n                    this.performanceTestNotDoneReasonLookupForSupplementary = \n                        this.toButtonListItemArray(performanceTestNotDoneReason.filter(p => p.category === this.getLabel(\"supplementary\")),\n                            CatalogConstants.PERFORMANCE_TEST_REASON_ID,\n                            CatalogConstants.PERFORMANCE_TEST_REASON_DESCRIPTION);\n                })\n        ];\n        return Promise.all(catalogPromises)\n            .then(() =>\n                Promise.all([\n                    this.buildNoYesList(),\n                    this.buildNoYesList(),\n                    this.buildNoYesList(),\n                    this.buildNoYesNaList(),\n                    this.buildNoYesNaList(),\n                    this.buildNoYesList(),\n                    this.buildNoYesNaList(),\n                    this.buildNoYesList(),\n\n                    this.buildNoNaList(),\n                    this.buildNoYesList(),\n                    this.buildNoYesList(),\n                    this.buildNoYesList(),\n                    this.buildNoYesList(),\n                    this.buildNoYesList()])\n                    .then(([\n                        applianceStrippedLookup,\n                        didYouWorkOnApplianceLookup,\n                        didYouVisuallyCheckLookup,\n                        applianceTightnessLookup,\n                        chimneyInstallationAndTestsLookup,\n                        ventSizeConfigLookup,\n                        safetyDeviceLookup,\n                        isApplianceSafeLookup,\n                        toCurrentStandardsLookup,\n                        ownedByCustomerLookup,\n                        letterLeftLookup,\n                        signatureObtainedLookup,\n                        requestedToTestLookup,\n                        ableToTestLookup\n                    ]) => {\n                        this.applianceStrippedLookup = applianceStrippedLookup;\n                        this.didYouWorkOnApplianceLookup = didYouWorkOnApplianceLookup;\n                        this.didYouVisuallyCheckLookup = didYouVisuallyCheckLookup;\n                        this.applianceTightnessLookup = applianceTightnessLookup;\n                        this.chimneyInstallationAndTestsLookup = chimneyInstallationAndTestsLookup;\n                        this.ventSizeConfigLookup = ventSizeConfigLookup;\n                        this.safetyDeviceLookup = safetyDeviceLookup;\n                        this.isApplianceSafeLookup = isApplianceSafeLookup;\n                        this.toCurrentStandardsLookup = toCurrentStandardsLookup;\n                        this.ownedByCustomerLookup = ownedByCustomerLookup;\n                        this.letterLeftLookup = letterLeftLookup;\n                        this.signatureObtainedLookup = signatureObtainedLookup;\n                        this.requestedToTestLookup = requestedToTestLookup;\n                        this.ableToTestLookup = ableToTestLookup;\n                    }));\n    }\n\n    private setObservables(): void {\n        if (this.gasSafetyViewModel) {\n            let sub1 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"workedOnAppliance\")\n                .subscribe((newValue: boolean, oldValue: boolean) => {\n                    this.obserWorkedOnAppliance(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub1);\n            let sub2 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"applianceTightness\")\n                .subscribe((newValue: YesNoNa, oldValue: YesNoNa) => {\n                    this.obserApplianceTightnessOk(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub2);\n            let sub3 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"ventSizeConfig\")\n                .subscribe((newValue: boolean, oldValue: boolean) => {\n                    this.obserVentSizeConfigOk(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub3);\n            let sub4 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"safetyDevice\")\n                .subscribe((newValue: YesNoNa, oldValue: YesNoNa) => {\n                    this.obserSafetyDevice(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub4);\n            let sub5 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"isApplianceSafe\")\n                .subscribe((newValue: boolean, oldValue: boolean) => {\n                    this.obserApplianceSafe(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub5);\n            let sub6 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"didYouVisuallyCheck\")\n                .subscribe((newValue: boolean, oldValue: boolean) => {\n                    this.obserDidYouVisuallyCheck(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub6);\n            let sub7 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"applianceStripped\")\n                .subscribe((newValue: boolean, oldValue: boolean) => {\n                    this.obserApplianceStripped(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub7);\n            let sub8 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"chimneyInstallationAndTests\")\n                .subscribe((newValue: YesNoNa, oldValue: YesNoNa) => {\n                    this.obserChimneyInstallationAndTests(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub8);\n            let sub9 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"performanceTestsNotDoneReason\")\n                .subscribe((newValue: string, oldValue: string) => {\n                    this.obserPerformanceTestsNotDoneReason(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub9);\n            let sub10 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"toCurrentStandards\")\n                .subscribe((newValue: YesNoNa, oldValue: YesNoNa) => {\n                    this.obserToCurrentStandards(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub10);\n            let sub11 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"ableToTest\")\n                .subscribe((newValue: boolean, oldValue: boolean) => {\n                    this.obserAbleToTest(newValue, oldValue);\n                });\n            this._gasSubscriptions.push(sub11);\n            let sub12 = this._bindingEngine.propertyObserver(this.gasUnsafeViewModel, \"conditionAsLeft\")\n            .subscribe((newValue: string, oldValue: string) => {\n                this.obserConditionAsLeft(newValue, oldValue);\n            });\n            this._gasSubscriptions.push(sub12);\n            let sub13 = this._bindingEngine.propertyObserver(this.gasUnsafeViewModel, \"cappedTurnedOff\")\n                .subscribe((newValue: string, oldValue: string) => {\n                    this.obserCappedTurnedOff(newValue, oldValue);\n                });\n            this._gasSubscriptions.push(sub13);\n            let sub14 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"requestedToTest\")\n                .subscribe((newValue: boolean, oldValue: boolean) => {\n                    this.obserRequestedTest(newValue, oldValue);\n                });\n            this._gasSubscriptions.push(sub14);\n            let sub15 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"performanceTestsNotDoneReasonForSupplementary\")\n                .subscribe((newValue: string, oldValue: string) => {\n                    this.obserPerformanceTestsNotDoneReasonForSupplementary(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub15);\n            let sub16 = this._bindingEngine.propertyObserver(this.gasSafetyViewModel, \"supplementaryApplianceStripped\")\n                .subscribe((newValue: boolean, oldValue: boolean) => {\n                    this.obserSupplementaryApplianceStripped(newValue, oldValue, false);\n                });\n            this._gasSubscriptions.push(sub16);\n        }\n    }\n\n    private initGasSafetyStatus(): void {\n        if (this.gasSafetyViewModel) {\n            if (this._gasReadings.workedOnMainReadings === true || this._gasReadings.workedOnPreliminaryPerformanceReadings === true) {\n                this.gasSafetyViewModel.workedOnAppliance = true;\n            }\n\n            if (this.isLandlordJob) {\n                this.obserAbleToTest(this.gasSafetyViewModel.ableToTest, undefined);\n                this.obserRequestedTest(this.gasSafetyViewModel.requestedToTest, undefined);\n            }\n            this.obserWorkedOnAppliance(this.gasSafetyViewModel.workedOnAppliance, undefined, true);\n            this.obserDidYouVisuallyCheck(this.gasSafetyViewModel.didYouVisuallyCheck, undefined, true);\n            this.obserChimneyInstallationAndTests(this.gasSafetyViewModel.chimneyInstallationAndTests, undefined, true);\n            this.obserVentSizeConfigOk(this.gasSafetyViewModel.ventSizeConfig, undefined, true);\n            this.obserSafetyDevice(this.gasSafetyViewModel.safetyDevice, undefined, true);\n            this.obserApplianceTightnessOk(this.gasSafetyViewModel.applianceTightness, undefined, true);\n\n            if (this.isApplianceSafetyAndReadingsAreEmpty() === false) {\n                this.showApplianceSafe = true;\n                this.setPerformanceReadingsQuestions();\n            }\n\n            if (this.gasSafetyViewModel.summaryPrelimLpgWarningTrigger) {\n                this.populateUnsafeReason(\"isLpg\", false);\n            }\n            if (this._gasReadings.preliminaryReadings) {\n                if (this._gasReadings.preliminaryReadings.burnerPressureUnsafe) {\n                    this.populateUnsafeReason(\"burnerPressureUnsafe\", false);\n                }\n                if (this._gasReadings.preliminaryReadings.gasReadingUnsafe) {\n                    this.populateUnsafeReason(\"gasReadingUnsafe\", false);\n                }\n                if (this._gasReadings.preliminaryReadings.finalRatioUnsafe) {\n                    this.populateUnsafeReason(\"finalRatioUnsafe\", false);\n                }\n            }\n\n            if (this._gasReadings.supplementaryReadings) {\n                if (this._gasReadings.supplementaryReadings.burnerPressureUnsafe) {\n                    this.populateUnsafeReason(\"suppBurnerPressureUnsafe\", false);\n                }\n                if (this._gasReadings.supplementaryReadings.gasReadingUnsafe) {\n                    this.populateUnsafeReason(\"suppGasReadingUnsafe\", false);\n                }\n                if (this._gasReadings.supplementaryReadings.finalRatioUnsafe) {\n                    this.populateUnsafeReason(\"suppFinalRatioUnsafe\", false);\n                }\n            }\n            if (this._gasReadings.preliminaryReadings && this._gasReadings.preliminaryReadings.isUnsafeReadings) {\n                if (!!this._gasReadings.preliminaryReadings.isUnsafeReadings === false\n                    && !!this._gasReadings.supplementaryReadings.isUnsafeReadings === false) {\n                    if (this.isSafetyEmpty() === true) {\n                        this.gasSafetyViewModel.isApplianceSafe = undefined;\n                    }\n                } else {\n                    this.gasSafetyViewModel.isApplianceSafe = false;\n                }\n            }\n\n            this.obserApplianceSafe(this.gasSafetyViewModel.isApplianceSafe, undefined, true);\n            this.obserToCurrentStandards(this.gasSafetyViewModel.toCurrentStandards, undefined, true);\n            this.obserConditionAsLeft(this.gasUnsafeViewModel.conditionAsLeft, undefined);\n            this.obserCappedTurnedOff(this.gasUnsafeViewModel.cappedTurnedOff, undefined);\n        }\n    }\n\n    private isChimneyInstallationRequired(): void {\n        if (this.appliance.flueType) {\n            this.showChimneyInstallationAndTests = true;\n\n            if (this._flueTypesExceptions) {\n                if (!this._flueTypesExceptions.some(x => x === this.appliance.flueType)) {\n                    // need to filter the options\n                    if (this.chimneyInstallationAndTestsLookup) {\n                        this.chimneyInstallationAndTestsLookup.forEach(option => {\n                            if (option.value !== YesNoNa.Na) {\n                                option.disabled = true;\n                            } else {\n                                option.disabled = false;\n                            }\n                        });\n                    }\n                } else {\n                    if (this.gasSafetyViewModel.chimneyInstallationAndTests === YesNoNa.Na) {\n                        this.gasSafetyViewModel.chimneyInstallationAndTests = undefined;\n                    }\n\n                    this.chimneyInstallationAndTestsLookup.forEach(option => {\n                        if (option.value === YesNoNa.Na) {\n                            option.disabled = true;\n                        } else {\n                            option.disabled = false;\n                        }\n                    });\n                }\n            }\n\n        } else {\n            this.showChimneyInstallationAndTests = false;\n        }\n    }\n\n    private isCurrentStandardsRequired(): boolean {\n        return this.disableToCurrentStandards || (this.gasSafetyViewModel && this.gasSafetyViewModel.isApplianceSafe && this.gasSafetyViewModel.toCurrentStandards !== YesNoNa.Yes);\n    }\n\n    private buildValidationRules(): Promise<void> {\n        return this.buildValidation([\n            { property: \"gasSafetyViewModel.workedOnAppliance\", condition: () => this.appliance && this.appliance.isSafetyRequired },\n            { property: \"gasSafetyViewModel.didYouVisuallyCheck\", condition: () => this.showVisuallyCheckRelight },\n            { property: \"gasSafetyViewModel.performanceTestsNotDoneReason\", condition: () => this.showPerformanceTestNotDoneReasons },\n            { property: \"gasSafetyViewModel.applianceStripped\", condition: () => this.showApplianceStripped },\n            { property: \"gasSafetyViewModel.supplementaryApplianceStripped\", condition: () => this.showSupplementaryApplianceStripped },\n            { property: \"gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary\", condition: () => this.showPerformanceTestNotDoneReasonsForSupplementary },\n            { property: \"gasSafetyViewModel.applianceTightness\", condition: () => this.showApplianceTightnessOk },\n            { property: \"gasSafetyViewModel.chimneyInstallationAndTests\", condition: () => this.showChimneyInstallationAndTests },\n            { property: \"gasSafetyViewModel.ventSizeConfig\", condition: () => this.showVentSizeConfigOk },\n            { property: \"gasSafetyViewModel.safetyDevice\", condition: () => this.showSafetyDevice },\n            { property: \"gasSafetyViewModel.isApplianceSafe\", condition: () => this.showApplianceSafe },\n            {\n                property: \"gasSafetyViewModel.toCurrentStandards\",\n                passes: [{\n                    test: () => this.isCurrentStandardsRequired(),\n                    message: \"*\"\n                }],\n                condition: () => this.showCurrentStandards\n            },\n            { property: \"gasUnsafeViewModel.report\", condition: () => this.isSafe === false || (this.gasSafetyViewModel && this.gasSafetyViewModel.toCurrentStandards === YesNoNa.No) },\n            { property: \"gasUnsafeViewModel.conditionAsLeft\", condition: () => this.isSafe === false || (this.gasSafetyViewModel && this.gasSafetyViewModel.toCurrentStandards === YesNoNa.No) },\n            { property: \"gasUnsafeViewModel.cappedTurnedOff\", condition: () => this.isSafe === false || (this.gasSafetyViewModel && this.gasSafetyViewModel.toCurrentStandards === YesNoNa.No) },\n            { property: \"gasUnsafeViewModel.labelAttachedRemoved\", condition: () => this.isSafe === false || (this.gasSafetyViewModel && this.gasSafetyViewModel.toCurrentStandards === YesNoNa.No) },\n            { property: \"gasUnsafeViewModel.ownedByCustomer\", condition: () => this.isSafe === false || (this.gasSafetyViewModel && this.gasSafetyViewModel.toCurrentStandards === YesNoNa.No) },\n            { property: \"gasUnsafeViewModel.letterLeft\", condition: () => this.isSafe === false || (this.gasSafetyViewModel && this.gasSafetyViewModel.toCurrentStandards === YesNoNa.No) },\n            { property: \"gasUnsafeViewModel.signatureObtained\", condition: () => this.isSafe === false || (this.gasSafetyViewModel && this.gasSafetyViewModel.toCurrentStandards === YesNoNa.No) },\n            { property: \"gasSafetyViewModel.applianceMake\", condition: () => this.isLandlordJob === true },\n            { property: \"gasSafetyViewModel.applianceModel\", condition: () => this.isLandlordJob === true },\n            { property: \"gasSafetyViewModel.requestedToTest\", condition: () => this.isLandlordJob === true },\n            { property: \"gasSafetyViewModel.ableToTest\", condition: () => this.isLandlordJob === true }\n        ]);\n    }\n\n    private buildBusinessRules(): void {\n        let rule1 = this.getBusinessRule<string>(\"performanceTestNotDoneReasonExceptions\");\n        if (rule1) {\n            this._performanceTestNotDoneReasonExceptions = rule1.split(\",\");\n        }\n        let rule2 = this.getBusinessRule<string>(\"flueTypesExceptions\");\n        if (rule2) {\n            this._flueTypesExceptions = rule2.split(\",\");\n        }\n        let rule3 = this.getBusinessRule<string>(\"showApplianceStrippedQuestion\");\n        if (rule3) {\n            this._applianceStrippedQuestionBusinessRule = rule3.split(\",\");\n        }\n\n        this._applianceStrippedQuestionbusinessRuleForSupplementary = this.getBusinessRule<string>(\"showApplianceStrippedQuestionForSupplementary\").split(\",\");\n\n        this._unsafeToastDismissTime = this.getBusinessRule<number>(\"unsafeToastDismissTime\");\n\n        this._conditionsAsLeftNotToCurrentStandardsOption = this.getBusinessRule<string>(\"conditionsAsLeftNotToCurrentStandardsOption\");\n\n        this._cappedTurnedOffDisabledOptionsForNTCS = this.getBusinessRule<string>(\"cappedTurnedOffDisabledOptionsForNTCS\").split(\",\");\n\n        this._cappedTurnedOffNotApplicableOption = this.getBusinessRule<string>(\"cappedTurnedOffNotApplicableOption\");\n\n        this._labelARDisabledOptionsForNTCS = this.getBusinessRule<string>(\"labelAttachedRemovedDisabledOptionsForNTCS\").split(\",\");\n\n        this._labelARDisabledOptionsForNonNTCS = this.getBusinessRule<string>(\"labelAttachedRemovedDisabledOptionsForNonNTCS\").split(\",\");\n\n        this._didYouWorkOnApplianceNoOption = this.getBusinessRule<boolean>(\"didYouWorkOnApplianceNoOption\");\n\n        this._conditionAsLeftImmediatelyDangerousOption = this.getBusinessRule<string>(\"conditionAsLeftImmediatelyDangerousOption\");\n\n        this._cappedTurnedOffOptionsForWarningMsg = this.getBusinessRule<string>(\"cappedTurnedOffOptionsForWarningMsg\").split(\",\");\n    }\n\n    private populateUnsafeReason(fieldName: string, safe: boolean): void {\n        if (safe === false) {\n            let existingItem = this.unsafeReasonFields.some(u => u === fieldName);\n            if (!existingItem) {\n                this.unsafeReasonFields.push(fieldName);\n                if (fieldName !== \"toCurrentStandards\" && fieldName !== \"applianceSafe\") {\n                    this.gasSafetyViewModel.isApplianceSafe = false;\n                    this.disableApplianceSafe = true;\n                }\n            }\n\n            if (this.gasSafetyViewModel.isApplianceSafe === false) {\n                // update conditionAsLeftLookup options\n                this.disableButtons(this.conditionAsLeftLookup, [this._conditionsAsLeftNotToCurrentStandardsOption]);\n                // update cappedTurnedOffLookup options\n                this.disableButtons(this.cappedTurnedOffLookup, [this._cappedTurnedOffNotApplicableOption]);\n                // update labelAttachedRemovedLookup options\n                this.disableButtons(this.labelAttachedRemovedLookup, this._labelARDisabledOptionsForNonNTCS);\n            }\n\n            if (fieldName === \"toCurrentStandards\") {\n                // update cappedTurnedOffLookup options if toCurrentStandards NO option is chosen\n                this.disableButtons(this.cappedTurnedOffLookup, this._cappedTurnedOffDisabledOptionsForNTCS);\n                // update labelAttachedRemovedLookup options if toCurrentStandards NO option is chosen\n                this.disableButtons(this.labelAttachedRemovedLookup, this._labelARDisabledOptionsForNTCS);\n            }\n\n            if (this._showToasts) {\n                this.showWarning(this.getLabel(\"unsafeSituation\"), this.unsafeSituationLookup[fieldName], null, this._unsafeToastDismissTime);\n            }\n        } else if (safe === true) {\n            if (this.removeReason(fieldName)) {\n                if (fieldName === \"toCurrentStandards\" || fieldName === \"applianceSafe\") {\n                    this.clearUnSafeSituationFields();\n                    return;\n                }\n\n                if (this.unsafeReasonFields.length === 0) {\n                    this.clearUnSafeSituationFields();\n                } else if (this.unsafeReasonFields.length === 1 && this.unsafeReasonFields.indexOf(\"applianceSafe\") > -1) {\n                    this.disableApplianceSafe = false;\n                }\n            }\n        }\n    }\n\n    private removeReason(fieldName: string): boolean {\n        let removed: boolean = false;\n        let existingIndex = this.unsafeReasonFields.findIndex(u => u === fieldName);\n        if (existingIndex > -1) {\n            this.unsafeReasonFields.splice(existingIndex, 1);\n            removed = true;\n        }\n        return removed;\n    }\n\n    private populateUnsafeFieldLabelMap(): void {\n        this.unsafeSituationLookup = {};\n        let fields: string[] = [];\n        fields.push(\"applianceTightness\");\n        fields.push(\"didYouVisuallyCheck\");\n        fields.push(\"applianceStripped\");\n        fields.push(\"supplementaryApplianceStripped\");\n        fields.push(\"chimneyInstallationAndTests\");\n        fields.push(\"ventSizeConfig\");\n        fields.push(\"isLpg\");\n        fields.push(\"burnerPressureUnsafe\");\n        fields.push(\"gasReadingUnsafe\");\n        fields.push(\"finalRatioUnsafe\");\n        fields.push(\"suppBurnerPressureUnsafe\");\n        fields.push(\"suppGasReadingUnsafe\");\n        fields.push(\"suppFinalRatioUnsafe\");\n        fields.push(\"safetyDevice\");\n        fields.push(\"toCurrentStandards\");\n        fields.push(\"applianceSafe\");\n        fields.forEach(x => {\n            switch (x) {\n                case \"suppBurnerPressureUnsafe\":\n                    const suppBurnerPressureUnsafe: string = \"suppBurnerPressureUnsafe\";\n                    this.unsafeSituationLookup[suppBurnerPressureUnsafe] = this.getLabel(\"supplementaryBurnerPressureUnsafe\");                       \n                    break;\n                case \"suppGasReadingUnsafe\":\n                    const suppGasReadingUnsafe: string = \"suppGasReadingUnsafe\";\n                    this.unsafeSituationLookup[suppGasReadingUnsafe] = this.getLabel(\"supplementaryGasReadingUnsafe\");\n                    break;\n                case \"suppFinalRatioUnsafe\":\n                    const suppFinalRatioUnsafe: string = \"suppFinalRatioUnsafe\";\n                    this.unsafeSituationLookup[suppFinalRatioUnsafe] = this.getLabel(\"supplementaryFinalRatioUnsafe\");\n                    break;\n                default:\n                    this.unsafeSituationLookup[x] = this.getLabel(x);\n                    break;\n            }\n        });\n    }\n\n    private removeObservables(): void {\n        if (this._gasSubscriptions) {\n            this._gasSubscriptions.forEach(x => {\n                if (x) {\n                    x.dispose();\n                    x = null;\n                }\n            });\n            this._gasSubscriptions = [];\n        } else {\n            this._gasSubscriptions = [];\n        }\n    }\n\n    private clearReadings(): Promise<boolean> {\n        return this.showConfirmation(this.getLabel(\"confirmation\"), this.getLabel(\"readingClearQuestion\"))\n            .then((result) => {\n                if (!result.wasCancelled) {\n                    this.gasSafetyViewModel.workedOnAppliance = false;\n                    this.resetReadingsViewModel();\n                    return Promise.resolve(true);\n                } else {\n                    return Promise.resolve(false);\n                }\n            });\n    }\n\n    private resetReadingsViewModel(): void {\n        this.gasSafetyViewModel.summaryPrelimLpgWarningTrigger = false;\n        this._gasReadings = new GasApplianceReadingsMasterViewModel();\n        this._gasReadings.preliminaryReadings = new GasApplianceReadingViewModel();\n        this._gasReadings.supplementaryReadings = new GasApplianceReadingViewModel();\n        this._gasReadings.supplementaryBurnerFitted = false;\n        this._gasReadings.workedOnMainReadings = false;\n        this._gasReadings.workedOnPreliminaryPerformanceReadings = false;\n        this._gasReadings.workedOnSupplementaryPerformanceReadings = false;\n    }\n\n    private updatePerformanceTestCarriedOutAndApplianceStripped(didYouWorkedOnAppliance: boolean, onload: boolean): void {\n        if (didYouWorkedOnAppliance === true) {\n            this.showPerformanceTestNotDoneReasons = !this._gasReadings.workedOnPreliminaryPerformanceReadings;\n            this.showApplianceStripped = !this._gasReadings.workedOnPreliminaryPerformanceReadings;\n            \n            if (this._gasReadings.supplementaryBurnerFitted) {\n                this.showPerformanceTestNotDoneReasonsForSupplementary = !this._gasReadings.workedOnSupplementaryPerformanceReadings;\n                this.showSupplementaryApplianceStripped = !this._gasReadings.workedOnSupplementaryPerformanceReadings;  \n                this.obserPerformanceTestsNotDoneReasonForSupplementary(this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary, undefined, false);\n                this.obserSupplementaryApplianceStripped(this.gasSafetyViewModel.supplementaryApplianceStripped, undefined, false);   \n            } else {\n                this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary = undefined;\n                this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n            }  \n            this.obserPerformanceTestsNotDoneReason(this.gasSafetyViewModel.performanceTestsNotDoneReason, undefined, false);\n            this.obserApplianceStripped(this.gasSafetyViewModel.applianceStripped, undefined, false);\n            \n        } else {\n            this.showPerformanceTestNotDoneReasons = false;\n            this.showApplianceStripped = false;\n            this.showPerformanceTestNotDoneReasonsForSupplementary = false;\n            this.showSupplementaryApplianceStripped = false;\n            if (!onload) {\n                this.gasSafetyViewModel.applianceStripped = undefined;\n                this.gasSafetyViewModel.performanceTestsNotDoneReason = undefined;\n                this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary = undefined;\n                this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n            }\n        }        \n    }\n\n    private isApplianceSafetyAndReadingsAreEmpty(): boolean {\n        let isEmpty: boolean = false;\n        if (this.isSafetyEmpty() && this.areReadingsEmpty()) {\n            isEmpty = true;\n        } else {\n            isEmpty = false;\n        }\n        return isEmpty;\n    }\n\n    private isSafetyEmpty(): boolean {\n        let isEmpty: boolean = false;\n        if (this.gasSafetyViewModel === undefined) {\n            isEmpty = true;\n        }\n        if (this.gasSafetyViewModel.applianceStripped === undefined &&\n            this.gasSafetyViewModel.applianceTightness === undefined &&\n            this.gasSafetyViewModel.chimneyInstallationAndTests === undefined &&\n            this.gasSafetyViewModel.didYouVisuallyCheck === undefined &&\n            this.gasSafetyViewModel.isApplianceSafe === undefined &&\n            this.gasSafetyViewModel.performanceTestsNotDoneReason === undefined &&\n            this.gasSafetyViewModel.ventSizeConfig === undefined &&\n            (this.gasSafetyViewModel.workedOnAppliance === undefined || this.gasSafetyViewModel.workedOnAppliance === false)) {\n            isEmpty = true;\n        }\n        return isEmpty;\n    }\n\n    private areReadingsEmpty(): boolean {\n        let isEmpty: boolean = false;\n        if (this._gasReadings === undefined) {\n            isEmpty = true;\n        }\n        if (!!this._gasReadings.workedOnMainReadings === false &&\n            !!this._gasReadings.workedOnPreliminaryPerformanceReadings === false) {\n            isEmpty = true;\n        }\n        return isEmpty;\n    }\n\n    private setPerformanceReadingsQuestions(): void {\n        if (this._gasReadings.workedOnPreliminaryPerformanceReadings === true) {\n            this.gasSafetyViewModel.performanceTestsNotDoneReason = undefined;\n            this.gasSafetyViewModel.applianceStripped = undefined;\n            this.showPerformanceTestNotDoneReasons = false;\n            this.showApplianceStripped = false;\n            if (this._gasReadings.supplementaryBurnerFitted && this._gasReadings.workedOnSupplementaryPerformanceReadings === true) {\n                this.showPerformanceTestNotDoneReasonsForSupplementary = false;\n                this.showSupplementaryApplianceStripped = false;\n                this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary = undefined;\n                this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n            }\n        } else {\n            if (this.gasSafetyViewModel.workedOnAppliance === true) {\n                this.obserPerformanceTestsNotDoneReason(this.gasSafetyViewModel.performanceTestsNotDoneReason, undefined, true);\n                this.obserApplianceStripped(this.gasSafetyViewModel.applianceStripped, undefined, true);                \n                this.showPerformanceTestNotDoneReasons = true;\n                this.showApplianceStripped = true;\n                if (this._gasReadings.supplementaryBurnerFitted) {\n                    this.showPerformanceTestNotDoneReasonsForSupplementary = true;\n                    this.showSupplementaryApplianceStripped = true;\n                    this.obserPerformanceTestsNotDoneReasonForSupplementary(this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary, undefined, true);\n                    this.obserSupplementaryApplianceStripped(this.gasSafetyViewModel.supplementaryApplianceStripped, undefined, true);\n                }\n            } else {\n                this.gasSafetyViewModel.performanceTestsNotDoneReason = undefined;\n                this.gasSafetyViewModel.applianceStripped = undefined;\n                this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary = undefined;\n                this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n                this.showPerformanceTestNotDoneReasons = false;\n                this.showApplianceStripped = false;\n                this.showPerformanceTestNotDoneReasonsForSupplementary = false;\n                this.showSupplementaryApplianceStripped = false;\n            }\n        }\n    }\n\n    private resetLocalModels(): void {\n        if (this.gasSafetyViewModel) {\n            this.gasSafetyViewModel.applianceMake = undefined;\n            this.gasSafetyViewModel.applianceModel = undefined;\n            this.gasSafetyViewModel.workedOnAppliance = undefined;\n            this.gasSafetyViewModel.applianceTightness = undefined;\n            this.gasSafetyViewModel.ventSizeConfig = undefined;\n            this.gasSafetyViewModel.chimneyInstallationAndTests = undefined;\n            this.gasSafetyViewModel.safetyDevice = undefined;\n            this.gasSafetyViewModel.didYouVisuallyCheck = undefined;\n            this.gasSafetyViewModel.isApplianceSafe = undefined;\n            this.gasSafetyViewModel.toCurrentStandards = undefined;\n            this.gasSafetyViewModel.performanceTestsNotDoneReason = undefined;\n            this.gasSafetyViewModel.applianceStripped = undefined;\n            this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary = undefined;\n            this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n            this.gasSafetyViewModel.requestedToTest = undefined;\n            this.gasSafetyViewModel.ableToTest = undefined;\n            this.clearUnSafeSituationFields();\n        }\n        this.isSafe = undefined;\n        this.disableApplianceSafe = false;\n        this.showVisuallyCheckRelight = false;\n        this.showApplianceSafe = false;\n        this.showCurrentStandards = false;\n        this.showApplianceTightnessOk = false;\n        this.showVentSizeConfigOk = false;\n        this.showSafetyDevice = false;\n        this.showChimneyInstallationAndTests = false;\n        this.showPerformanceTestNotDoneReasons = false;\n        this.showApplianceStripped = false;\n        this.showPerformanceTestNotDoneReasonsForSupplementary = false;\n        this.showSupplementaryApplianceStripped = false;\n        this.unsafeReasonFields = [];\n    }\n\n    private clearForWorkOnAppliance(workedOnAppliance: boolean, onload: boolean): void {\n        this.removeObservables();\n        this.gasSafetyViewModel.applianceTightness = undefined;\n        this.gasSafetyViewModel.ventSizeConfig = undefined;\n        this.gasSafetyViewModel.chimneyInstallationAndTests = undefined;\n        this.gasSafetyViewModel.safetyDevice = undefined;\n        this.gasSafetyViewModel.didYouVisuallyCheck = undefined;\n        this.gasSafetyViewModel.isApplianceSafe = undefined;\n        this.gasSafetyViewModel.toCurrentStandards = undefined;\n        this.gasSafetyViewModel.performanceTestsNotDoneReason = undefined;\n        this.gasSafetyViewModel.performanceTestsNotDoneReasonForSupplementary = undefined;\n        this.gasSafetyViewModel.supplementaryApplianceStripped = undefined;\n        this.clearUnSafeSituationFields();\n        this.disableApplianceSafe = false;\n        this.initGasSafetyStatus();\n        this.setObservables();\n        this.showVisuallyCheckRelight = true;\n        this.showApplianceStripped = true;\n        this.showApplianceTightnessOk = false;\n        this.showVentSizeConfigOk = false;\n        this.showSafetyDevice = false;\n        this.showApplianceSafe = true;\n        this.gasSafetyViewModel.overrideWorkedOnAppliance = true;\n        this.updatePerformanceTestCarriedOutAndApplianceStripped(workedOnAppliance, onload);\n    }\n\n    private clearUnSafeSituationFields(): void {\n        this.unsafeReasonFields = [];\n        if (this.gasUnsafeViewModel) {\n            this.gasUnsafeViewModel.report = undefined;\n            this.gasUnsafeViewModel.conditionAsLeft = undefined;\n            this.gasUnsafeViewModel.cappedTurnedOff = undefined;\n            this.gasUnsafeViewModel.labelAttachedRemoved = undefined;\n            this.gasUnsafeViewModel.ownedByCustomer = undefined;\n            this.gasUnsafeViewModel.letterLeft = undefined;\n            this.gasUnsafeViewModel.signatureObtained = undefined;\n        }\n    }\n\n    private disableButtons(buttonItemList: ButtonListItem[], options: string[]): void {\n        if (buttonItemList !== undefined) {\n            buttonItemList.forEach(btn => {\n                btn.disabled = options.some(option => option === btn.value);\n            });\n        }\n    }\n\n    private obserConditionAsLeft(newValue: string, oldValue: string): void {\n        this.showUnsafeWarningMsg = this.showUnsafeWarningMessage();\n    }\n        \n    private obserCappedTurnedOff(newValue: string, oldValue: string): void {\n        this.showUnsafeWarningMsg = this.showUnsafeWarningMessage();        \n    }\n\n    private showUnsafeWarningMessage(): boolean {\n        return this.gasUnsafeViewModel.conditionAsLeft \n                && this.gasUnsafeViewModel.cappedTurnedOff \n                && this.gasUnsafeViewModel.conditionAsLeft === this._conditionAsLeftImmediatelyDangerousOption \n                && this._cappedTurnedOffOptionsForWarningMsg.some(c => this.gasUnsafeViewModel.cappedTurnedOff === c);\n    }\n\n    private disableWorkedOnApplianceNoButton(): void {\n        let disableNoButton = (value: boolean) => {\n            this.didYouWorkOnApplianceLookup.forEach(btn => {\n                if (btn.value === this._didYouWorkOnApplianceNoOption) {\n                    btn.disabled = value;\n                }\n            });\n        };\n\n        if (this.gasSafetyViewModel.requestedToTest && this.gasSafetyViewModel.ableToTest) {\n            this.gasSafetyViewModel.workedOnAppliance = true;\n            disableNoButton(true);\n        } else {\n            disableNoButton(false);\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}