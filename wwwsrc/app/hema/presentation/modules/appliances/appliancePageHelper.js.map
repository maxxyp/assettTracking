{"version":3,"sources":["hema/presentation/modules/appliances/appliancePageHelper.ts"],"names":[],"mappings":";;;IAKA;QAAA;QAuCA,CAAC;QArCG,8IAA8I;QAChI,4CAAwB,GAAtC,UAAuC,gBAAmC,EAAE,iBAAwB;YAEhG,IAAI,gBAAgB,GAAG,iBAAiB;mBACjC,iBAAiB,CAAC,CAAC,CAAC,CAAC,uBAAuB;mBAC5C,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;YAErC,IAAI,cAAc,GAAG,iBAAiB;mBAC/B,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAE5B,EAAE,CAAC,CAAC,gBAAgB,IAAI,cAAc,CAAC,CAAC,CAAC;gBAErC,IAAI,KAAK,GAAW,cAAc,CAAC,KAAK,CAAC;gBACzC,IAAI,aAAW,GAAW,cAAc,CAAC,WAAW,CAAC;gBACrD,IAAI,0BAAwB,GAAwB,gBAAgB,CAAC,mBAAmB,CAAC;gBACzF,IAAI,qBAAmB,GAAY,gBAAgB,CAAC,cAAc,CAAC;gBAEnE,EAAE,CAAC,CAAC,KAAK,IAAI,aAAW,IAAI,0BAAwB,IAAI,gBAAgB,CAAC,CAAC,CAAC;oBACvE,MAAM,CAAC,gBAAgB,CAAC,YAAY,CAAC,KAAK,EAAE,aAAW,CAAC;yBACnD,IAAI,CAAC,UAAA,SAAS;wBAEX,IAAI,2BAA2B,GAAG,SAAS,IAAI,SAAS,CAAC,mBAAmB,KAAK,0BAAwB,CAAC;wBAC1G,IAAI,mBAAmB,GAAG,SAAS,IAAI,SAAS,CAAC,mBAAmB,IAAI,qBAAmB,CAAC;wBAExF;;;0BAGE;wBACF,MAAM,CAAC,2BAA2B,IAAI,mBAAmB;4BACrD,CAAC,CAAC,IAAI,6BAAa,CAAC,WAAW,EAAE,EAAC,WAAW,eAAA,EAAC,EAAE,EAAC,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;4BACtF,CAAC,CAAC,IAAI,CAAC;oBACnB,CAAC,CACJ,CAAC;gBACN,CAAC;YACL,CAAC;YACD,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACjC,CAAC;QACL,0BAAC;IAAD,CAvCA,AAuCC,IAAA;IAvCY,kDAAmB","file":"appliancePageHelper.js","sourcesContent":["import { NamedRedirect } from \"../../../../common/ui/namedRedirect\";\nimport { ApplianceSafetyType } from \"../../../business/models/applianceSafetyType\";\nimport { IApplianceService } from \"../../../business/services/interfaces/IApplianceService\";\nimport { Redirect } from \"aurelia-router\";\n\nexport class AppliancePageHelper  {\n\n    // #16497 DF_1058 - using prevNext buttons, we may find ourselves e.g. on a gas appliance-specific page but with an electric appliance in data\n    public static checkApplianceSafetyType(applianceService: IApplianceService, canActivateParams: any[]): Promise<boolean | Redirect > {\n\n        let routeSettingsObj = canActivateParams\n            && canActivateParams[1] // this is route config\n            && canActivateParams[1].settings;\n\n        let routeParamsObj = canActivateParams\n            && canActivateParams[0];\n\n        if (routeSettingsObj && routeParamsObj) {\n\n            let jobId: string = routeParamsObj.jobId;\n            let applianceId: string = routeParamsObj.applianceId;\n            let routeApplianceSafetyType: ApplianceSafetyType = routeSettingsObj.applianceSafetyType;\n            let routeHideIfInstPrem: boolean = routeSettingsObj.hideIfInstPrem;\n\n            if (jobId && applianceId && routeApplianceSafetyType && applianceService) {\n                return applianceService.getAppliance(jobId, applianceId)\n                    .then(appliance => {\n\n                        let isWrongApplianceTypeForPage = appliance && appliance.applianceSafetyType !== routeApplianceSafetyType;\n                        let isInstPremAppliance = appliance && appliance.isInstPremAppliance && routeHideIfInstPrem;\n\n                            /* Using \"appliance\" route rather than \"appliance-details\" for a good reason:\n                            if you use \"appliance-details\" and navigate using navButtons, you get redirected to the\n                            details page of the appliance you are navigating from, not the one you are navigating to\n                            */\n                            return isWrongApplianceTypeForPage || isInstPremAppliance\n                                ? new NamedRedirect(\"appliance\", {applianceId}, {useChildRouter: true, trigger: true})\n                                : true;\n                    }\n                );\n            }\n        }\n        return Promise.resolve(true);\n    }\n}\n"],"sourceRoot":"../../../.."}