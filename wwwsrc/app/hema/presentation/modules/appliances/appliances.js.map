{"version":3,"sources":["hema/presentation/modules/appliances/appliances.ts"],"names":[],"mappings":"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","file":"appliances.js","sourcesContent":["import { inject } from \"aurelia-dependency-injection\";\nimport { AppLauncher } from \"../../../../common/core/services/appLauncher\";\nimport { IAppLauncher } from \"../../../../common/core/services/IappLauncher\";\nimport { IConfigurationService } from \"../../../../common/core/services/IConfigurationService\";\nimport { ConfigurationService } from \"../../../../common/core/services/configurationService\";\nimport { IHemaConfiguration } from \"../../../IHemaConfiguration\";\nimport { EditableViewModel } from \"../../models/editableViewModel\";\nimport { IApplianceService } from \"../../../business/services/interfaces/IApplianceService\";\nimport { ApplianceService } from \"../../../business/services/applianceService\";\nimport { Appliance } from \"../../../business/models/appliance\";\nimport { ApplianceSummaryViewModel } from \"./viewModels/applianceSummaryViewModel\";\nimport { Router } from \"aurelia-router\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { ICatalogService } from \"../../../business/services/interfaces/ICatalogService\";\nimport { CatalogService } from \"../../../business/services/catalogService\";\nimport { IValidationService } from \"../../../business/services/interfaces/IValidationService\";\nimport { ValidationService } from \"../../../business/services/validationService\";\nimport { BusinessRuleService } from \"../../../business/services/businessRuleService\";\nimport { IBusinessRuleService } from \"../../../business/services/interfaces/IBusinessRuleService\";\nimport { Guid } from \"../../../../common/core/guid\";\nimport { EngineerService } from \"../../../business/services/engineerService\";\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { DataStateSummary } from \"../../../business/models/dataStateSummary\";\nimport { DataState } from \"../../../business/models/dataState\";\nimport { TaskService } from \"../../../business/services/taskService\";\nimport { ITaskService } from \"../../../business/services/interfaces/ITaskService\";\nimport { ArrayHelper } from \"../../../../common/core/arrayHelper\";\nimport { Task } from \"../../../business/models/task\";\nimport { ChargeServiceConstants } from \"../../../business/services/constants/chargeServiceConstants\";\nimport { ApplianceOperationType } from \"../../../business/models/applianceOperationType\";\n\n@inject(LabelService,  ApplianceService, Router, JobService, EngineerService,\n    EventAggregator, DialogService, ValidationService, BusinessRuleService, CatalogService, AppLauncher, ConfigurationService, TaskService)\nexport class Appliances extends EditableViewModel {\n\n    public viewModels: ApplianceSummaryViewModel[];\n    private _applianceService: IApplianceService;\n    private _router: Router;\n    private _appLauncher: IAppLauncher;\n    private _configurationService: IConfigurationService;\n    private _taskService: ITaskService;\n\n    public constructor(labelService: ILabelService,\n        applianceService: IApplianceService,\n        router: Router,\n        jobService: IJobService,\n        engineerService: IEngineerService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        validationService: IValidationService,\n        businessRuleService: IBusinessRuleService,\n        catalogService: ICatalogService,\n        appLauncher: IAppLauncher,\n        configurationService: IConfigurationService,\n        taskService: ITaskService) {\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRuleService, catalogService);\n\n        this._applianceService = applianceService;\n        this._router = router;\n        this._appLauncher = appLauncher;\n        this._configurationService = configurationService;\n        this._taskService = taskService;\n    }\n\n    public activateAsync(params: { jobId: string }): Promise<void> {\n        return this.buildValidation()\n                .then(() => this.loadBusinessRules())\n                .then(() => this.load())\n                .then(() => this.showContent());\n    }\n\n    public navigateToAppliance(id: string, applianceExcluded: boolean): void {\n        this._router.navigateToRoute(\"appliance\", { applianceId: id });\n    }\n\n    public newAppliance(): void {\n        this._router.navigateToRoute(\"appliance\", { applianceId: Guid.empty });\n    }\n\n    public launchAdapt(gcCode: string, applianceExcluded: boolean): void {\n        this._appLauncher.launchApplication(this._configurationService.getConfiguration<IHemaConfiguration>().adaptLaunchUri + \" \" + gcCode);\n    }\n\n    public async excludeAppliance(event: MouseEvent, id: string): Promise<void> {\n        event.stopPropagation();\n\n        let tasks = await this._taskService.getTasks(this.jobId);\n        let associatedTasks = tasks.filter(task => task.applianceId === id);\n\n        if (associatedTasks.length > 0) {\n            let dialogResult = await this.showConfirmation(this.getLabel(\"objectName\"), this.getLabel(\"delinkApplianceMessage\"));\n\n            if (dialogResult.wasCancelled === false) {\n                await this.excludeApp(id);\n                if (tasks.some(task => task.isCharge)) {\n                    this._eventAggregator.publish(ChargeServiceConstants.CHARGE_UPDATE_START, this.jobId);\n                }\n            }\n        } else {\n            let shouldDelete = await this.showConfirmation(this.getLabel(\"objectName\"), this.getLabel(\"hideQuestion\"));\n            if (shouldDelete) {\n                await this.excludeApp(id);\n            }\n        }\n    }\n\n    protected loadModel(): Promise<void> {\n        /* do not await */ this._applianceService.ensureAdaptInformationIsSynced(this.jobId);\n        return this._applianceService.getAppliances(this.jobId)\n        .then(appliances => {\n            appliances = ArrayHelper.sortByColumnDescending(appliances, \"dataState\");\n            return Promise.all(appliances.map(app => this.createViewModel(app, appliances)))\n            .then(viewModels => {\n                this.viewModels = viewModels;\n            });\n        });\n    }\n\n    private createViewModel(appliance: Appliance, allAppliances: Appliance[]): Promise<ApplianceSummaryViewModel> {\n        let vm = new ApplianceSummaryViewModel();\n        vm.appliance = appliance;\n\n        this.setApplianceAggregateDataState(vm);\n        this.setContractStatus(vm);\n\n        return this._applianceService.isFullGcCode(appliance.gcCode)\n            .then(isFullGcCode => {\n                vm.isDisplayableGcCode = isFullGcCode;\n            })\n            .then(() => this.setApplianceDescription(vm))\n            .then(() => this._taskService.getTasks(this.jobId))\n            .then((liveTasks: Task[]) => {\n                vm.isAssociatedWithTask = liveTasks.filter(task => task.applianceId === appliance.id).length > 0;\n                vm.canExclude = !vm.appliance.parentId && !vm.isUnderContract && !liveTasks.some(task => task.applianceId === vm.appliance.id && task.sequence > 1);\n                return vm;\n            });\n    }\n\n    private setApplianceAggregateDataState(vm: ApplianceSummaryViewModel): void {\n        let totals = new DataStateSummary(vm.appliance).getTotals(\"appliances\");\n        vm.aggregateDataState = totals.invalid ? DataState.invalid\n            : totals.notVisited ? DataState.notVisited\n                : totals.valid ? DataState.valid\n                                    : DataState.dontCare;\n    }\n\n    private setContractStatus(vm: ApplianceSummaryViewModel): void {\n        let nonContractContractTypes = (this.getBusinessRule<string>(\"nonContractContractTypes\") || \"\").split(\",\");\n        vm.isUnderContract =  !!vm\n            && !!vm.appliance\n            && !!vm.appliance.contractType\n            && !nonContractContractTypes.some(nonContractContractType => nonContractContractType === vm.appliance.contractType);\n    }\n\n    private setApplianceDescription(vm: ApplianceSummaryViewModel): Promise<void> {\n        if (vm.appliance.gcCode && vm.isDisplayableGcCode) {\n            return this._catalogService.getGCCode(vm.appliance.gcCode)\n                .then((gcCode) => {\n                    vm.applianceDescription = gcCode ? gcCode.gcCodeDescription : vm.appliance.description;\n                });\n        } else {\n            vm.applianceDescription = vm.appliance.description;\n            return Promise.resolve();\n        }\n    }\n\n    private async excludeApp(applianceId: string): Promise<void> {\n        let foundItem = this.viewModels.find(vm => vm.appliance.id === applianceId);\n\n        if (foundItem) {\n            this.viewModels.splice(this.viewModels.indexOf(foundItem), 1);\n            if (foundItem.appliance.childId) {\n                let childIndex = this.viewModels.findIndex(child => child.appliance.id === foundItem.appliance.childId);\n                if (childIndex >= 0) {\n                    this.viewModels.splice(childIndex, 1);\n                }\n            }\n            await this._applianceService.deleteOrExcludeAppliance(this.jobId, applianceId, ApplianceOperationType.exclude);\n            if (foundItem.appliance.childId) {\n                await this._applianceService.deleteOrExcludeAppliance(this.jobId, foundItem.appliance.childId, ApplianceOperationType.exclude);\n            }\n            this.notifyDataStateChanged();\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}