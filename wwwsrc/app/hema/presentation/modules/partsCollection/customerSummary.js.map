{"version":3,"sources":["hema/presentation/modules/partsCollection/customerSummary.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IASA;QAAqC,mCAAa;QAI9C,yBAAY,YAA2B,EACnC,eAAgC,EAChC,aAA4B;mBAC5B,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC;QACvD,CAAC;QAEM,uCAAa,GAApB,UAAqB,MAAqE;YACtF,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACT,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC;gBACjC,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAC9B,CAAC;YACD,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAhBQ,eAAe;YAD3B,0BAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,CAAC;qDAM5B,0CAAe;gBACjB,8BAAa;WANvB,eAAe,CAiB3B;QAAD,sBAAC;KAjBD,AAiBC,CAjBoC,6BAAa,GAiBjD;IAjBY,0CAAe","file":"customerSummary.js","sourcesContent":["import { inject } from \"aurelia-framework\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { PartsCollectionCustomerViewModel } from \"../../models/PartsCollectionCustomerViewModel\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { BaseViewModel } from \"../../models/baseViewModel\";\n\n@inject(LabelService, EventAggregator, DialogService)\nexport class CustomerSummary extends BaseViewModel {\n    public viewModel: PartsCollectionCustomerViewModel;\n    public jobId: string;\n\n    constructor(labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService) {\n        super(labelService, eventAggregator, dialogService);\n    }\n\n    public activateAsync(params: { jobId: string, customer: PartsCollectionCustomerViewModel }): Promise<void> {\n        if (params) {\n            this.viewModel = params.customer;\n            this.jobId = params.jobId;\n        }\n        return Promise.resolve();\n    }\n}\n"],"sourceRoot":"../../../.."}