{"version":3,"sources":["hema/presentation/modules/propertySafety/previousSafetyDetail.ts"],"names":[],"mappings":"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","file":"previousSafetyDetail.js","sourcesContent":["/// <reference path=\"./../../../../../typings/app.d.ts\" />\r\n\r\nimport {inject} from \"aurelia-framework\";\r\nimport {IPropertySafetyService} from \"../../../business/services/interfaces/IPropertySafetyService\";\r\nimport {PropertySafetyService} from \"../../../business/services/propertySafetyService\";\r\nimport {LabelService} from \"../../../business/services/labelService\";\r\nimport {ILabelService} from \"../../../business/services/interfaces/ILabelService\";\r\nimport {BaseViewModel} from \"../../models/baseViewModel\";\r\nimport {JobService} from \"../../../business/services/jobService\";\r\nimport {IJobService} from \"../../../business/services/interfaces/IJobService\";\r\nimport {ICatalogService} from \"../../../business/services/interfaces/ICatalogService\";\r\nimport {CatalogService} from \"../../../business/services/catalogService\";\r\nimport {EventAggregator} from \"aurelia-event-aggregator\";\r\nimport {DialogService} from \"aurelia-dialog\";\r\nimport {ISftyReasonCat} from \"../../../business/models/reference/ISftyReasonCat\";\r\nimport {CatalogConstants} from \"../../../business/services/constants/catalogConstants\";\r\n\r\n@inject(LabelService, EventAggregator, DialogService, PropertySafetyService, JobService, CatalogService)\r\nexport class PreviousSafetyDetail extends BaseViewModel {\r\n\r\n    public hasData: boolean;\r\n\r\n    public report: string;\r\n    public lastVisitDate: string;\r\n    public safetyNoticeNotLeftReason: string;\r\n    public unsafeSituation: string;\r\n    public conditionAsLeft: string;\r\n    public cappedTurnedOff: string;\r\n    public labelAttached: string;\r\n    public ownedByCustomer: string;\r\n    public letterLeft: string;\r\n    public signatureObtained: string;\r\n\r\n    private _propertySafetyService: IPropertySafetyService;\r\n    private _jobId: string;\r\n    private _jobService: IJobService;\r\n    private _catalogService: ICatalogService;\r\n\r\n    private _unsafeReasonLookup: ISftyReasonCat[];\r\n\r\n    constructor(\r\n                labelService: ILabelService,\r\n                eventAggregator: EventAggregator,\r\n                dialogService: DialogService,\r\n                propertySafetyService: IPropertySafetyService,\r\n                jobService: IJobService,\r\n                catalogService: ICatalogService) {\r\n        super(labelService, eventAggregator, dialogService);\r\n\r\n        this._propertySafetyService = propertySafetyService;\r\n        this._jobService = jobService;\r\n        this._catalogService = catalogService;\r\n    }\r\n\r\n    public activateAsync(params: { jobId: string }): Promise<any> {\r\n        this._jobId = params.jobId;\r\n        return this._jobService.getJob(this._jobId).then(job => {\r\n            this.hasData = !!(job.propertySafety && (job.propertySafety.previousPropertySafetyDetail));\r\n            this.showContent();\r\n        });\r\n    }\r\n\r\n    public attachedAsync(): Promise<void> {\r\n        return this.loadCatalogs().then(() => {\r\n            return this._propertySafetyService.getPropertySafetyDetails(this._jobId)\r\n                .then((safetyDetail) => {\r\n                    let previousPropertySafety = safetyDetail.previousPropertySafetyDetail;\r\n                    if (!previousPropertySafety) {\r\n                        return;\r\n                    }\r\n\r\n                    this.lastVisitDate = previousPropertySafety.lastVisitDate;\r\n                    this.safetyNoticeNotLeftReason = previousPropertySafety.safetyNoticeNotLeftReason;\r\n                    this.report = previousPropertySafety.report;\r\n\r\n                    if (previousPropertySafety.reasons) {\r\n                        let reasonDescriptions: string[] = [];\r\n                        previousPropertySafety.reasons.forEach(x => {\r\n                            let unsafeReasonResult = this._unsafeReasonLookup.find(c => c.safetyReasonCategoryCode === x);\r\n                            if (unsafeReasonResult && unsafeReasonResult.safetyReasonCategoryReason) {\r\n                                reasonDescriptions.push(unsafeReasonResult.safetyReasonCategoryReason);\r\n                            }\r\n                        });\r\n                        this.unsafeSituation = reasonDescriptions.join(\",\");\r\n                    }\r\n\r\n                    this._catalogService.getSafetyNoticeType(previousPropertySafety.conditionAsLeft)\r\n                        .then((conditionAsLeftResult) => {\r\n                            if (conditionAsLeftResult) {\r\n                                this.conditionAsLeft = conditionAsLeftResult.safetyNoticeTypeDescription;\r\n                            }\r\n                        });\r\n\r\n                    this._catalogService.getSafetyAction(previousPropertySafety.cappedOrTurnedOff)\r\n                        .then((cappedTurnedOffResult) => {\r\n                            if (cappedTurnedOffResult) {\r\n                                this.cappedTurnedOff = cappedTurnedOffResult.safetyActionDescription;\r\n                            }\r\n                        });\r\n\r\n                    this._catalogService.getSafetyNoticeStatus(previousPropertySafety.labelAttachedOrRemoved)\r\n                        .then((labelAttachedResult) => {\r\n                            if (labelAttachedResult) {\r\n                                this.labelAttached = labelAttachedResult.safetyNoticeStatusDescription;\r\n                            }\r\n                        });\r\n\r\n                    this.ownedByCustomer = previousPropertySafety.ownedByCustomer ? \"Yes\" : \"No\";\r\n                    this.letterLeft = previousPropertySafety.letterLeft ? \"Yes\" : \"No\";\r\n                    this.signatureObtained = previousPropertySafety.signatureObtained ? \"Yes\" : \"No\";\r\n\r\n                });\r\n        });\r\n    }\r\n\r\n    private loadCatalogs(): Promise<void> {\r\n        return this._catalogService.getSafetyReasonCats(CatalogConstants.SAFETY_REASON_CAT_GROUP_UNSAFE_REASON)\r\n                .then((safetyReasons) => {\r\n                    this._unsafeReasonLookup = safetyReasons;\r\n                });\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"../../../.."}