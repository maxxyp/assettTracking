{"version":3,"sources":["hema/presentation/modules/propertySafety/propertySafetyMain.ts"],"names":[],"mappings":"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","file":"propertySafetyMain.js","sourcesContent":["/// <reference path=\"./../../../../../typings/app.d.ts\" />\n\nimport {inject} from \"aurelia-dependency-injection\";\nimport {Router, RouterConfiguration, RouteConfig} from \"aurelia-router\";\nimport {IJobService} from \"../../../business/services/interfaces/IJobService\";\nimport {JobService} from \"../../../business/services/jobService\";\nimport {PropertySafetyType} from \"../../../business/models/propertySafetyType\";\nimport {LabelService} from \"../../../business/services/labelService\";\nimport {ILabelService} from \"../../../business/services/interfaces/ILabelService\";\nimport {EventAggregator, Subscription} from \"aurelia-event-aggregator\";\nimport { DataState } from \"../../../business/models/dataState\";\nimport {ICatalogService} from \"../../../business/services/interfaces/ICatalogService\";\nimport {IBusinessRuleService} from \"../../../business/services/interfaces/IBusinessRuleService\";\nimport {IValidationService} from \"../../../business/services/interfaces/IValidationService\";\nimport {CatalogService} from \"../../../business/services/catalogService\";\nimport {BusinessRuleService} from \"../../../business/services/businessRuleService\";\nimport {ValidationService} from \"../../../business/services/validationService\";\nimport {EditableViewModel} from \"../../models/editableViewModel\";\nimport {EngineerService} from \"../../../business/services/engineerService\";\nimport {IEngineerService} from \"../../../business/services/interfaces/IEngineerService\";\nimport {DialogService} from \"aurelia-dialog\";\nimport {JobServiceConstants} from \"../../../business/services/constants/jobServiceConstants\";\nimport {DataStateSummary} from \"../../../business/models/dataStateSummary\";\nimport {JobState} from \"../../../business/models/jobState\";\nimport {IPageService} from \"../../services/interfaces/IPageService\";\nimport {PageService} from \"../../services/pageService\";\nimport { ObjectHelper } from \"../../../../common/core/objectHelper\";\n\n@inject(LabelService, JobService, EngineerService, EventAggregator, DialogService, ValidationService, BusinessRuleService, CatalogService, PageService)\nexport class PropertySafetyMain extends EditableViewModel {\n\n    public jobId: string;\n    public propertySafetyType: PropertySafetyType;\n    public router: Router;\n    public isFullScreen: boolean;\n\n    private _childRoutes: RouteConfig[];\n    private _jobDataStateSubscription: Subscription;\n    private _jobState: JobState;\n    private _pageService: IPageService;\n\n    constructor(labelService: ILabelService,\n                jobService: IJobService,\n                engineerService: IEngineerService,\n                eventAggregator: EventAggregator,\n                dialogService: DialogService,\n                validationService: IValidationService,\n                businessRuleService: IBusinessRuleService,\n                catalogService: ICatalogService,\n                pageService: IPageService) {\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRuleService, catalogService);\n        this.isFullScreen = window.isFullScreen;\n        this._pageService = pageService;\n    }\n\n    public configureRouter(config: RouterConfiguration, childRouter: Router): void {\n        this.router = childRouter;\n        this.setupChildRoutes();\n        config.map(this._childRoutes);\n    }\n\n    public activateAsync(params: { jobId: string }): Promise<any> {\n        return this.load()\n                .then(() => this.showContent());\n    }\n\n    public deactivateAsync(): Promise<void> {\n        if (this._jobDataStateSubscription) {\n            this._jobDataStateSubscription.dispose();\n            this._jobDataStateSubscription = null;\n        }\n\n        return Promise.resolve();\n    }\n\n    public navigateToRoute(name: string): void {\n        this.router.navigateToRoute(name);\n    }\n\n    protected stateChanged(): Promise<void> {\n        return super.stateChanged()\n            .then(() => {\n                this.router.navigateToRoute((!this.canEdit && this._jobState !== JobState.done) ? \"previous-detail\" : this.getRedirectRoute());\n             });\n    }\n\n    protected loadModel(): Promise<void> {\n        return this._jobService.getJob(this.jobId)\n            .then(job => {\n                this.propertySafetyType = job.propertySafetyType;\n                this._jobState = job.state;\n                this._jobDataStateSubscription = this._eventAggregator.subscribe(JobServiceConstants.JOB_DATA_STATE_CHANGED, () => this.updateDataState());\n                this.updateDataState();\n            });\n    }\n\n    private getRedirectRoute() : string {\n        let landingPage = this._pageService.getLastVisitedPage(ObjectHelper.getClassName(this));\n        if (!landingPage) {        \n            switch (this.propertySafetyType) {\n                case PropertySafetyType.gas:\n                    return \"current-detail-gas\";\n                case PropertySafetyType.electrical:\n                    return \"current-detail-electrical\";\n                default:\n                    return \"previous-detail\";\n            }\n        }\n        return landingPage;\n    }\n\n    private setupChildRoutes(): void {\n        this._childRoutes = [];\n\n        this._childRoutes.push({\n            route: \"current-detail-gas\",\n            moduleId: \"hema/presentation/modules/propertySafety/gasSafetyDetail\",\n            name: \"current-detail-gas\",\n            nav: true,\n            title: \"Property Safety Details\",\n            settings: {\n                tabGroupParent: \"property-safety\",\n                propertySafetyType: PropertySafetyType.gas,\n                dataState: DataState.dontCare\n            }\n        });\n\n        this._childRoutes.push({\n            route: \"current-detail-electrical\",\n            moduleId: \"hema/presentation/modules/propertySafety/electricalSafetyDetail\",\n            name: \"current-detail-electrical\",\n            nav: true,\n            title: \"Property Safety Details\",\n            settings: {\n                tabGroupParent: \"property-safety\",\n                propertySafetyType: PropertySafetyType.electrical,\n                dataState: DataState.dontCare\n            }\n        });\n\n        this._childRoutes.push({\n            route: \"\",\n            redirect: this.getRedirectRoute()\n        });\n\n        this._childRoutes.push({\n            route: \"previous-detail\",\n            moduleId: \"hema/presentation/modules/propertySafety/previousSafetyDetail\",\n            name: \"previous-detail\",\n            nav: true,\n            title: \"Previous Safety Detail\",\n            settings: {\n                tabGroupParent: \"property-safety\",\n                dataState: DataState.dontCare\n            }\n        });\n    }\n\n    private updateDataState(): void {\n        let isActivitiesOverride = DataStateSummary.dataStateCompletionOverrideGroup === \"activities\";\n        if (isActivitiesOverride) {\n            this._childRoutes\n                .filter(rt => !rt.redirect)\n                .forEach(rt => rt.settings.dataState = DataState.dontCare);\n        } else {\n\n            this._jobService.getJob(this.jobId)\n                .then((job) => {\n                    if (job) {\n                        if (this.propertySafetyType === PropertySafetyType.gas) {\n                            let currentDetailRoute = this._childRoutes.find(r => r.route === \"current-detail-gas\");\n\n                            currentDetailRoute.settings.dataState = job.propertySafety &&\n                                job.propertySafety.propertyGasSafetyDetail ?\n                                job.propertySafety.propertyGasSafetyDetail.dataState : DataState.dontCare;\n\n                        } else if (this.propertySafetyType === PropertySafetyType.electrical) {\n                            let currentDetailRoute = this._childRoutes.find(r => r.route === \"current-detail-electrical\");\n\n                            currentDetailRoute.settings.dataState = job.propertySafety &&\n                                job.propertySafety.propertyElectricalSafetyDetail ?\n                                job.propertySafety.propertyElectricalSafetyDetail.dataState : DataState.dontCare;\n\n                        }\n                    }\n                });\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}