{"version":3,"sources":["hema/presentation/modules/propertySafety/electricalSafetyDetail.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IA4BA;QAA4C,0CAAiB;QAsDzD,gCAAY,UAAuB,EAC/B,eAAiC,EACjC,YAA2B,EAC3B,eAAgC,EAChC,aAA4B,EAC5B,iBAAqC,EACrC,mBAAyC,EACzC,cAA+B,EAC/B,qBAA6C;YARjD,YASI,kBAAM,UAAU,EAAE,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,aAAa,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,cAAc,CAAC,SAQ3I;YANG,KAAI,CAAC,eAAe,GAAG,cAAc,CAAC;YACtC,KAAI,CAAC,sBAAsB,GAAG,qBAAqB,CAAC;YACpD,KAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;YACzC,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,KAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;YAC3B,KAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;;QAC3C,CAAC;QAEM,qDAAoB,GAA3B;YACI,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7D,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC;QAEM,+DAA8B,GAArC;YAEI,EAAE,CAAC,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC,CAAC;gBAC/B,iDAAiD;gBACjD,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,0BAA0B,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YACjF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;YAC3C,CAAC;QACL,CAAC;QAEM,kDAAiB,GAAxB;YACI,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC7D,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC;QAEM,kDAAiB,GAAxB;YACI,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjE,CAAC;QAEM,8DAA6B,GAApC;YACI,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjE,CAAC;QAEM,oDAAmB,GAA1B;YACI,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACrC,CAAC;QAEM,gEAA+B,GAAtC;YACI,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACjE,CAAC;QAEM,8CAAa,GAApB;YAAA,iBAOC;YANG,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE;iBAC1B,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,EAAE,EAAzB,CAAyB,CAAC;iBACrC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,oBAAoB,EAAE,EAA3B,CAA2B,CAAC;iBACvC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,YAAY,EAAE,EAAnB,CAAmB,CAAC;iBAC/B,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;iBACvB,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;QACxC,CAAC;QAEM,oDAAmB,GAA1B;YACI,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,CAAC;QAC/C,CAAC;QAES,0CAAS,GAAnB;YAAA,iBAqCC;YApCG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;iBACrC,IAAI,CAAC,UAAC,GAAG;gBACN,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACN,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;gBAC3C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,aAAa,GAAG,KAAK,CAAC;gBAC/B,CAAC;YACL,CAAC,CAAC;iBACD,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,sBAAsB,CAAC,wBAAwB,CAAC,KAAI,CAAC,KAAK,CAAC,EAAhE,CAAgE,CAAC;iBAC5E,IAAI,CAAC,UAAC,YAAY;gBACf,KAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAE/B,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,8BAA8B,CAAC,UAAU,CAAC;gBAC5E,KAAI,CAAC,mBAAmB,GAAG,YAAY,CAAC,8BAA8B,CAAC,gBAAgB,CAAC;gBACxF,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC,8BAA8B,CAAC,aAAa,CAAC;gBAC/E,KAAI,CAAC,wBAAwB,GAAG,YAAY,CAAC,8BAA8B,CAAC,wBAAwB,CAAC;gBACrG,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,8BAA8B,CAAC,UAAU,CAAC;gBACzE,KAAI,CAAC,UAAU,GAAG,YAAY,CAAC,8BAA8B,CAAC,UAAU,CAAC;gBACzE,KAAI,CAAC,sBAAsB,GAAG,YAAY,CAAC,8BAA8B,CAAC,sBAAsB,CAAC;gBACjG,KAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,8BAA8B,CAAC,WAAW,EAAE,YAAY,CAAC,8BAA8B,CAAC,SAAS,CAAC,CAAC;gBAEzI,EAAE,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,oBAAoB,CAAC,CAAC,CAAC;oBACpD,KAAI,CAAC,MAAM,GAAG,YAAY,CAAC,oBAAoB,CAAC,MAAM,CAAC;oBACvD,KAAI,CAAC,uBAAuB,GAAG,YAAY,CAAC,oBAAoB,CAAC,eAAe,CAAC;oBACjF,KAAI,CAAC,uBAAuB,GAAG,YAAY,CAAC,oBAAoB,CAAC,eAAe,CAAC;oBACjF,KAAI,CAAC,4BAA4B,GAAG,YAAY,CAAC,oBAAoB,CAAC,oBAAoB,CAAC;oBAC3F,KAAI,CAAC,uBAAuB,GAAG,YAAY,CAAC,oBAAoB,CAAC,eAAe,CAAC;oBACjF,KAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC,oBAAoB,CAAC,UAAU,CAAC;oBACvE,KAAI,CAAC,yBAAyB,GAAG,YAAY,CAAC,oBAAoB,CAAC,iBAAiB,CAAC;gBACzF,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,CAAC;gBAED,MAAM,CAAC,KAAI,CAAC,+BAA+B,CAAC,KAAI,CAAC,iBAAiB,CAAC;qBAC9D,IAAI,CAAC,cAAQ,KAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC,CAAC,CAAC;QACX,CAAC;QAES,0CAAS,GAAnB;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC7B,CAAC;YACD,IAAI,iBAAiB,GAAG,IAAI,+DAA8B,EAAE,CAAC;YAC7D,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;YAClD,iBAAiB,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YACrD,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC;YAC9D,iBAAiB,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,CAAC;YAC3E,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAC/C,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAC/C,iBAAiB,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAEvE,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAEvD,IAAI,iBAAiB,GAAyB,IAAI,2CAAoB,EAAE,CAAC;YAEzE,iBAAiB,CAAC,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACjE,iBAAiB,CAAC,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACjE,iBAAiB,CAAC,oBAAoB,GAAG,IAAI,CAAC,4BAA4B,CAAC;YAC3E,iBAAiB,CAAC,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACjE,iBAAiB,CAAC,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC;YACrE,iBAAiB,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACvD,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YACvC,iBAAiB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,SAAS,EAAX,CAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAEnF,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,2BAA2B,CAAC,IAAI,CAAC,KAAK,EAAE,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;QACrH,CAAC;QAES,2CAAU,GAApB;YACI,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;YAC/B,0GAA0G;YAC1G,wHAAwH;YACxH,6FAA6F;YAC7F,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAC/B,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;YAE/B,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC;YAErC,IAAI,CAAC,wBAAwB,GAAG,SAAS,CAAC;YAC1C,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;YAC5B,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;YACxB,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;YAExC,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,YAAY,EAAE,CAAC;YAEpB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAEO,6CAAY,GAApB;YAAA,iBA0CC;YAzCG,IAAI,eAAe,GAAG;gBAClB,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE;qBAClC,IAAI,CAAC,UAAA,aAAa;oBACf,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,qBAAqB,CAAC,aAAa,EAAE,mCAAgB,CAAC,gBAAgB,EAAE,mCAAgB,CAAC,yBAAyB,CAAC,CAAC;gBAC1J,CAAC,CAAC;gBAEN,IAAI,CAAC,eAAe,CAAC,oBAAoB,EAAE;qBACtC,IAAI,CAAC,UAAA,iBAAiB;oBACnB,IAAI,wBAAwB,GAAG,KAAI,CAAC,eAAe,CAAS,+BAA+B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACxG,IAAI,oBAAoB,GAAG,iBAAiB,CAAC,MAAM,CAAC,UAAA,gBAAgB,IAAI,OAAA,wBAAwB,CAAC,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAlE,CAAkE,CAAC,CAAC;oBAE5I,KAAI,CAAC,qBAAqB,GAAG,KAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,mCAAgB,CAAC,qBAAqB,EAAE,mCAAgB,CAAC,8BAA8B,CAAC,CAAC;gBAC3K,CAAC,CAAC;gBAEN,IAAI,CAAC,eAAe,CAAC,uBAAuB,EAAE;qBACzC,IAAI,CAAC,UAAA,oBAAoB;oBAEtB,IAAI,0BAA0B,GAAG,KAAI,CAAC,eAAe,CAAS,6BAA6B,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;oBACxG,IAAI,uBAAuB,GAAG,oBAAoB,CAAC,MAAM,CAAC,UAAA,kBAAkB,IAAI,OAAA,0BAA0B,CAAC,OAAO,CAAC,kBAAkB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,EAAxE,CAAwE,CAAC,CAAC;oBAE1J,KAAI,CAAC,0BAA0B,GAAG,KAAI,CAAC,qBAAqB,CAAC,uBAAuB,EAAE,mCAAgB,CAAC,uBAAuB,EAAE,mCAAgB,CAAC,gCAAgC,CAAC,CAAC;gBACvL,CAAC,CAAC;gBAEN,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,mCAAgB,CAAC,mCAAmC,CAAC;qBACzF,IAAI,CAAC,UAAA,gBAAgB;oBAClB,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE,mCAAgB,CAAC,oBAAoB,EAAE,mCAAgB,CAAC,6BAA6B,CAAC,CAAC;gBAChK,CAAC,CAAC;gBAEN,IAAI,CAAC,eAAe,CAAC,wBAAwB,EAAE;qBAC1C,IAAI,CAAC,UAAA,qBAAqB;oBACvB,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,qBAAqB,CAAC,qBAAqB,EAAE,mCAAgB,CAAC,yBAAyB,EAAE,mCAAgB,CAAC,kCAAkC,CAAC,CAAC;gBAC/K,CAAC,CAAC;gBAEN,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,8BAA8B,GAAG,KAAK,EAA3C,CAA2C,CAAC;gBAChF,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,4BAA4B,GAAG,KAAK,EAAzC,CAAyC,CAAC;gBAC9E,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,qBAAqB,GAAG,KAAK,EAAlC,CAAkC,CAAC;gBACvE,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,gBAAgB,GAAG,KAAK,EAA7B,CAA6B,CAAC;gBAClE,IAAI,CAAC,cAAc,EAAE,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,KAAI,CAAC,uBAAuB,GAAG,KAAK,EAApC,CAAoC,CAAC;aAC5E,CAAC;YAEF,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,IAAI,CAAC,cAAQ,CAAC,CAAC,CAAC;QACxD,CAAC;QAEO,0CAAS,GAAjB;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACnD,CAAC;QAEO,gEAA+B,GAAvC,UAAwC,eAAwB;YAAhE,iBAoCC;YAnCG,IAAM,mBAAmB,GAAW,IAAI,CAAC,eAAe,CAAS,qBAAqB,CAAC,CAAC;YACxF,IAAI,YAAY,GAAmC,IAAI,+DAA8B,EAAE,CAAC;YACxF,YAAY,CAAC,wBAAwB,GAAG,IAAI,CAAC,wBAAwB,CAAC;YACtE,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1C,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;YAChD,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAC1C,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;YAC7C,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC;YAElE,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,+BAA+B,CAAC,YAAY,EAC3E,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,YAAY,EACjB,mBAAmB,EACnB,IAAI,CAAC,mBAAmB,CAAC;iBACxB,IAAI,CAAC,UAAC,OAAO;gBACV,IAAI,eAAe,GAAa,EAAE,CAAC;gBAEnC,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;wBACvB,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;oBACvC,CAAC,CAAC,CAAC;gBACP,CAAC;gBAED,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBAEvB,EAAE,CAAC,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;oBACf,gFAAgF;oBAChF,KAAI,CAAC,OAAO,CAAC,OAAO,CAAC,UAAA,MAAM;wBACvB,MAAM,CAAC,KAAK,GAAG,KAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;wBACrF,EAAE,CAAC,CAAC,eAAe,IAAI,eAAe,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;4BAClE,KAAI,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;wBACjE,CAAC;oBACL,CAAC,CAAC,CAAC;gBACP,CAAC;YACL,CAAC,CAAC,CAAC;QACX,CAAC;QAEO,kDAAiB,GAAzB;YACI,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;YACzC,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;YACzC,IAAI,CAAC,4BAA4B,GAAG,SAAS,CAAC;YAC9C,IAAI,CAAC,uBAAuB,GAAG,SAAS,CAAC;YACzC,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;YACpC,IAAI,CAAC,yBAAyB,GAAG,SAAS,CAAC;QAC/C,CAAC;QAEO,6CAAY,GAApB;YACI,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACtB,CAAC;QAEO,mDAAkB,GAA1B;YACI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAS,cAAc,CAAC,CAAC;YACjE,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAS,yBAAyB,CAAC,CAAC;YACvF,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAS,qBAAqB,CAAC,CAAC;YAC/E,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAS,4BAA4B,CAAC,CAAC;QAEjG,CAAC;QAEO,qDAAoB,GAA5B;YAAA,iBAmBC;YAlBG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;gBACxB,EAAE,QAAQ,EAAE,eAAe,EAAE,SAAS,EAAE,cAAM,OAAA,CAAC,KAAI,CAAC,aAAa,EAAnB,CAAmB,EAAE;gBACnE;oBACI,QAAQ,EAAE,YAAY;oBACtB,SAAS,EAAE,cAAM,OAAA,CAAC,KAAI,CAAC,UAAU,KAAK,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,EAA9D,CAA8D;iBAClF;gBACD;oBACI,QAAQ,EAAE,wBAAwB;oBAClC,SAAS,EAAE,cAAM,OAAA,CAAC,KAAI,CAAC,UAAU,KAAK,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,mBAAmB,CAAC,EAA1F,CAA0F;iBAC9G;gBACD,EAAE,QAAQ,EAAE,yBAAyB,EAAE,SAAS,EAAE,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE;gBAC1E,EAAE,QAAQ,EAAE,yBAAyB,EAAE,SAAS,EAAE,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE;gBAC1E,EAAE,QAAQ,EAAE,8BAA8B,EAAE,SAAS,EAAE,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE;gBAC/E,EAAE,QAAQ,EAAE,yBAAyB,EAAE,SAAS,EAAE,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE;gBAC1E,EAAE,QAAQ,EAAE,oBAAoB,EAAE,SAAS,EAAE,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE;gBACrE,EAAE,QAAQ,EAAE,2BAA2B,EAAE,SAAS,EAAE,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE;gBAC5E,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,cAAM,OAAA,KAAI,CAAC,SAAS,EAAE,EAAhB,CAAgB,EAAE;aAC5D,CAAC,CAAC;QACP,CAAC;QAEO,0DAAyB,GAAjC;YACI,IAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;YAExC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBACvG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;oBACzF,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC;gBAC3C,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;gBAC5C,CAAC;YACL,CAAC;QACL,CAAC;QA/VD;YADC,4BAAU;;qEACkB;QAM7B;YADC,4BAAU;;gFAC8B;QAIzC;YADC,4BAAU;;kEACe;QAI1B;YADC,4BAAU;;kEACe;QAI1B;YADC,4BAAU;;8EAC4B;QAEvC;YADC,4BAAU;;oEACiB;QAE5B;YADC,4BAAU;;+EAC4B;QASvC;YADC,4BAAU;;+EAC4B;QAlC9B,sBAAsB;YADlC,0BAAM,CAAC,uBAAU,EAAE,iCAAe,EAAE,2BAAY,EAAE,0CAAe,EAAE,8BAAa,EAAE,qCAAiB,EAAE,yCAAmB,EAAE,+BAAc,EAAE,6CAAqB,CAAC;qEA0DxI,0CAAe;gBACjB,8BAAa;WA1DvB,sBAAsB,CAmWlC;QAAD,6BAAC;KAnWD,AAmWC,CAnW2C,qCAAiB,GAmW5D;IAnWY,wDAAsB","file":"electricalSafetyDetail.js","sourcesContent":["/// <reference path=\"./../../../../../typings/app.d.ts\" />\r\nimport { observable } from \"aurelia-binding\";\r\nimport { inject } from \"aurelia-framework\";\r\n\r\nimport { ICatalogService } from \"../../../business/services/interfaces/ICatalogService\";\r\nimport { CatalogService } from \"../../../business/services/catalogService\";\r\nimport { ButtonListItem } from \"../../../../common/ui/elements/models/buttonListItem\";\r\nimport { IPropertySafetyService } from \"../../../business/services/interfaces/IPropertySafetyService\";\r\nimport { PropertySafetyService } from \"../../../business/services/propertySafetyService\";\r\nimport { PropertyElectricalSafetyDetail } from \"../../../business/models/propertyElectricalSafetyDetail\";\r\nimport { ValidationService } from \"../../../business/services/validationService\";\r\nimport { IValidationService } from \"../../../business/services/interfaces/IValidationService\";\r\nimport { BusinessRuleService } from \"../../../business/services/businessRuleService\";\r\nimport { IBusinessRuleService } from \"../../../business/services/interfaces/IBusinessRuleService\";\r\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\r\nimport { LabelService } from \"../../../business/services/labelService\";\r\nimport { EditableViewModel } from \"../../models/editableViewModel\";\r\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\r\nimport { JobService } from \"../../../business/services/jobService\";\r\nimport { EventAggregator } from \"aurelia-event-aggregator\";\r\nimport { UnsafeReason } from \"../../../business/models/unsafeReason\";\r\nimport { PropertyUnsafeDetail } from \"../../../business/models/propertyUnsafeDetail\";\r\nimport { EngineerService } from \"../../../business/services/engineerService\";\r\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\r\nimport { DialogService } from \"aurelia-dialog\";\r\nimport { CatalogConstants } from \"../../../business/services/constants/catalogConstants\";\r\n\r\n@inject(JobService, EngineerService, LabelService, EventAggregator, DialogService, ValidationService, BusinessRuleService, CatalogService, PropertySafetyService)\r\nexport class ElectricalSafetyDetail extends EditableViewModel {\r\n\r\n    @observable\r\n    public iniEliReading: number;\r\n    // @observable\r\n    public noEliReadings: boolean;\r\n    public noEliReadingsReason: string;\r\n    public consumerUnitSatisfactoryLookup: ButtonListItem[];\r\n    @observable\r\n    public consumerUnitSatisfactory: boolean;\r\n\r\n    public systemTypeLookup: ButtonListItem[];\r\n    @observable\r\n    public systemType: string;\r\n\r\n    public rcdPresentLookup: ButtonListItem[];\r\n    @observable\r\n    public rcdPresent: string;\r\n\r\n    public eliSafeAccordingToTopsLookup: ButtonListItem[];\r\n    @observable\r\n    public eliSafeAccordingToTops: boolean;\r\n    @observable\r\n    public ttSystemType: string;\r\n    @observable\r\n    public unableToCheckSystemType: string;\r\n    public safeInTopsThreshold: number;\r\n    public showEliSafeAccordingToTops: boolean;\r\n\r\n    /* unsafe details */\r\n    public reasons: UnsafeReason[];\r\n    public report: string;\r\n    public conditionAsLeftLookup: ButtonListItem[];\r\n    @observable\r\n    public conditionAsLeftSelected: string;\r\n    public cappedTurnedOffLookup: ButtonListItem[];\r\n    public cappedTurnedOffSelected: string;\r\n    public labelAttachedRemovedLookup: ButtonListItem[];\r\n    public labelAttachedRemovedSelected: string;\r\n    public ownedByCustomerLookup: ButtonListItem[];\r\n    public ownedByCustomerSelected: boolean;\r\n    public letterLeftLookup: ButtonListItem[];\r\n    public letterLeftSelected: boolean;\r\n    public signatureObtainedLookup: ButtonListItem[];\r\n    public signatureObtainedSelected: boolean;\r\n    public unsafeDetailRequired: boolean;\r\n    public iniEliReadingDecimalPlaces: number;\r\n    /* unsafe details */\r\n\r\n    public isLandlordJob: boolean;\r\n\r\n    private _propertySafetyService: IPropertySafetyService;\r\n    private _readyToShowToast: boolean;\r\n\r\n    constructor(jobService: IJobService,\r\n        engineerService: IEngineerService,\r\n        labelService: ILabelService,\r\n        eventAggregator: EventAggregator,\r\n        dialogService: DialogService,\r\n        validationService: IValidationService,\r\n        businessRuleService: IBusinessRuleService,\r\n        catalogService: ICatalogService,\r\n        propertySafetyService: IPropertySafetyService) {\r\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRuleService, catalogService);\r\n\r\n        this._catalogService = catalogService;\r\n        this._propertySafetyService = propertySafetyService;\r\n        this.consumerUnitSatisfactoryLookup = [];\r\n        this.systemTypeLookup = [];\r\n        this.rcdPresentLookup = [];\r\n        this.eliSafeAccordingToTopsLookup = [];\r\n    }\r\n\r\n    public iniEliReadingChanged(): void {\r\n        this.populateElectricalUnsafeReasons(this._readyToShowToast);\r\n        this.setEliSafeAccordingToTops();\r\n    }\r\n\r\n    public conditionAsLeftSelectedChanged(): void {\r\n\r\n        if (this.conditionAsLeftSelected) {\r\n            // set the first one since its only got \"A\" in it\r\n            this.labelAttachedRemovedSelected = this.labelAttachedRemovedLookup[0].value;\r\n        } else {\r\n            this.labelAttachedRemovedSelected = \"\";\r\n        }\r\n    }\r\n\r\n    public systemTypeChanged(): void {\r\n        this.populateElectricalUnsafeReasons(this._readyToShowToast);\r\n        this.setEliSafeAccordingToTops();\r\n    }\r\n\r\n    public rcdPresentChanged(): void {\r\n        this.populateElectricalUnsafeReasons(this._readyToShowToast);\r\n    }\r\n\r\n    public eliSafeAccordingToTopsChanged(): void {\r\n        this.populateElectricalUnsafeReasons(this._readyToShowToast);\r\n    }\r\n\r\n    public ttSystemTypeChanged(): void {\r\n        this.setEliSafeAccordingToTops();\r\n    }\r\n\r\n    public consumerUnitSatisfactoryChanged(): void {\r\n        this.populateElectricalUnsafeReasons(this._readyToShowToast);\r\n    }\r\n\r\n    public activateAsync(): Promise<void> {\r\n        return this.loadBusinessRules()\r\n            .then(() => this.buildBusinessRules())\r\n            .then(() => this.buildValidationRules())\r\n            .then(() => this.loadCatalogs())\r\n            .then(() => this.load())\r\n            .then(() => this.showContent());\r\n    }\r\n\r\n    public toggleNoEliReadings(): void {\r\n        this.noEliReadings = !this.noEliReadings;\r\n        this.iniEliReading = null;\r\n        this.populateElectricalUnsafeReasons(true);\r\n    }\r\n\r\n    protected loadModel(): Promise<void> {\r\n        return this._jobService.getJob(this.jobId)\r\n            .then((job) => {\r\n                if (job) {\r\n                    this.isLandlordJob = job.isLandlordJob;\r\n                } else {\r\n                    this.isLandlordJob = false;\r\n                }\r\n            })\r\n            .then(() => this._propertySafetyService.getPropertySafetyDetails(this.jobId))\r\n            .then((safetyDetail) => {\r\n                this._readyToShowToast = false;\r\n\r\n                this.iniEliReading = safetyDetail.propertyElectricalSafetyDetail.eliReading;\r\n                this.noEliReadingsReason = safetyDetail.propertyElectricalSafetyDetail.eliReadingReason;\r\n                this.noEliReadings = safetyDetail.propertyElectricalSafetyDetail.noEliReadings;\r\n                this.consumerUnitSatisfactory = safetyDetail.propertyElectricalSafetyDetail.consumerUnitSatisfactory;\r\n                this.systemType = safetyDetail.propertyElectricalSafetyDetail.systemType;\r\n                this.rcdPresent = safetyDetail.propertyElectricalSafetyDetail.rcdPresent;\r\n                this.eliSafeAccordingToTops = safetyDetail.propertyElectricalSafetyDetail.eliSafeAccordingToTops;\r\n                this.setInitialDataState(safetyDetail.propertyElectricalSafetyDetail.dataStateId, safetyDetail.propertyElectricalSafetyDetail.dataState);\r\n\r\n                if (safetyDetail && safetyDetail.propertyUnsafeDetail) {\r\n                    this.report = safetyDetail.propertyUnsafeDetail.report;\r\n                    this.conditionAsLeftSelected = safetyDetail.propertyUnsafeDetail.conditionAsLeft;\r\n                    this.cappedTurnedOffSelected = safetyDetail.propertyUnsafeDetail.cappedTurnedOff;\r\n                    this.labelAttachedRemovedSelected = safetyDetail.propertyUnsafeDetail.labelAttachedRemoved;\r\n                    this.ownedByCustomerSelected = safetyDetail.propertyUnsafeDetail.ownedByCustomer;\r\n                    this.letterLeftSelected = safetyDetail.propertyUnsafeDetail.letterLeft;\r\n                    this.signatureObtainedSelected = safetyDetail.propertyUnsafeDetail.signatureObtained;\r\n                } else {\r\n                    this.clearUnsafeDetail();\r\n                }\r\n\r\n                return this.populateElectricalUnsafeReasons(this._readyToShowToast)\r\n                    .then(() => { this._readyToShowToast = true; });\r\n            });\r\n    }\r\n\r\n    protected saveModel(): Promise<void> {\r\n        if (!this.hasReason()) {\r\n            this.clearUnsafeDetail();\r\n        }\r\n        let safetyDetailModel = new PropertyElectricalSafetyDetail();\r\n        safetyDetailModel.eliReading = this.iniEliReading;\r\n        safetyDetailModel.noEliReadings = this.noEliReadings;\r\n        safetyDetailModel.eliReadingReason = this.noEliReadingsReason;\r\n        safetyDetailModel.consumerUnitSatisfactory = this.consumerUnitSatisfactory;\r\n        safetyDetailModel.systemType = this.systemType;\r\n        safetyDetailModel.rcdPresent = this.rcdPresent;\r\n        safetyDetailModel.eliSafeAccordingToTops = this.eliSafeAccordingToTops;\r\n\r\n        safetyDetailModel.dataState = this.getFinalDataState();\r\n\r\n        let unsafeDetailModel: PropertyUnsafeDetail = new PropertyUnsafeDetail();\r\n\r\n        unsafeDetailModel.cappedTurnedOff = this.cappedTurnedOffSelected;\r\n        unsafeDetailModel.conditionAsLeft = this.conditionAsLeftSelected;\r\n        unsafeDetailModel.labelAttachedRemoved = this.labelAttachedRemovedSelected;\r\n        unsafeDetailModel.ownedByCustomer = this.ownedByCustomerSelected;\r\n        unsafeDetailModel.signatureObtained = this.signatureObtainedSelected;\r\n        unsafeDetailModel.letterLeft = this.letterLeftSelected;\r\n        unsafeDetailModel.report = this.report;\r\n        unsafeDetailModel.reasons = this.reasons ? this.reasons.map(r => r.catalogId) : [];\r\n\r\n        return this._propertySafetyService.saveElectricalSafetyDetails(this.jobId, safetyDetailModel, unsafeDetailModel);\r\n    }\r\n\r\n    protected clearModel(): Promise<void> {\r\n        this._readyToShowToast = false;\r\n        // .DF_1582 noEliReadings must be cleared before iniEliReading due to the change handler on iniEliReadings\r\n        //  firing off populateElectricalUnsafeReasons(). If we don't do this, when populateElectricalUnsafeReasons() gets fired\r\n        //  it will use the old version of noEliReadings and register a false positive unsafe reason.\r\n        this.noEliReadings = undefined;\r\n        this.iniEliReading = undefined;\r\n\r\n        this.noEliReadingsReason = undefined;\r\n\r\n        this.consumerUnitSatisfactory = undefined;\r\n        this.systemType = undefined;\r\n        this.rcdPresent = undefined;\r\n        this.eliSafeAccordingToTops = undefined;\r\n        this.report = undefined;\r\n        this.showEliSafeAccordingToTops = false;\r\n\r\n        this.clearUnsafeDetail();\r\n        this.clearReasons();\r\n\r\n        this._readyToShowToast = true;\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private loadCatalogs(): Promise<void> {\r\n        let catalogPromises = [\r\n            this._catalogService.getSafetyActions()\r\n                .then(safetyActions => {\r\n                    this.cappedTurnedOffLookup = this.toButtonListItemArray(safetyActions, CatalogConstants.SAFETY_ACTION_ID, CatalogConstants.SAFETY_ACTION_DESCRIPTION);\r\n                }),\r\n\r\n            this._catalogService.getSafetyNoticeTypes()\r\n                .then(safetyNoticeTypes => {\r\n                    let availableNoticeTypeCodes = this.getBusinessRule<string>(\"availableConditionAsLeftCodes\").split(\",\");\r\n                    let availableNoticeTypes = safetyNoticeTypes.filter(safetyNoticeType => availableNoticeTypeCodes.indexOf(safetyNoticeType.noticeType) > -1);\r\n\r\n                    this.conditionAsLeftLookup = this.toButtonListItemArray(availableNoticeTypes, CatalogConstants.SAFETY_NOTICE_TYPE_ID, CatalogConstants.SAFETY_NOTICE_TYPE_DESCRIPTION);\r\n                }),\r\n\r\n            this._catalogService.getSafetyNoticeStatuses()\r\n                .then(safetyNoticeStatuses => {\r\n\r\n                    let availableNoticeStatusCodes = this.getBusinessRule<string>(\"availableLabelAttachedCodes\").split(\",\");\r\n                    let availableNoticeStatuses = safetyNoticeStatuses.filter(safetyNoticeStatus => availableNoticeStatusCodes.indexOf(safetyNoticeStatus.noticeStatus) > -1);\r\n\r\n                    this.labelAttachedRemovedLookup = this.toButtonListItemArray(availableNoticeStatuses, CatalogConstants.SAFETY_NOTICE_STATUS_ID, CatalogConstants.SAFETY_NOTICE_STATUS_DESCRIPTION);\r\n                }),\r\n\r\n            this._catalogService.getSafetyReasonCats(CatalogConstants.SAFETY_REASON_CAT_GROUP_RCD_PRESENT)\r\n                .then(safetyReasonCats => {\r\n                    this.rcdPresentLookup = this.toButtonListItemArray(safetyReasonCats, CatalogConstants.SAFETY_REASON_CAT_ID, CatalogConstants.SAFETY_REASON_CAT_DESCRIPTION);\r\n                }),\r\n\r\n            this._catalogService.getElectricalSystemTypes()\r\n                .then(electricalSystemTypes => {\r\n                    this.systemTypeLookup = this.toButtonListItemArray(electricalSystemTypes, CatalogConstants.ELECTRICAL_SYSTEM_TYPE_ID, CatalogConstants.ELECTRICAL_SYSTEM_TYPE_DESCRIPTION);\r\n                }),\r\n\r\n            this.buildNoYesList().then(yesNo => this.consumerUnitSatisfactoryLookup = yesNo),\r\n            this.buildNoYesList().then(yesNo => this.eliSafeAccordingToTopsLookup = yesNo),\r\n            this.buildNoYesList().then(yesNo => this.ownedByCustomerLookup = yesNo),\r\n            this.buildNoYesList().then(yesNo => this.letterLeftLookup = yesNo),\r\n            this.buildNoYesList().then(yesNo => this.signatureObtainedLookup = yesNo),\r\n        ];\r\n\r\n        return Promise.all(catalogPromises).then(() => { });\r\n    }\r\n\r\n    private hasReason(): boolean {\r\n        return this.reasons && this.reasons.length > 0;\r\n    }\r\n\r\n    private populateElectricalUnsafeReasons(isToastRequired: boolean): Promise<void> {\r\n        const rcdPresentThreshold: number = this.getBusinessRule<number>(\"rcdPresentThreshold\");\r\n        let safetyDetail: PropertyElectricalSafetyDetail = new PropertyElectricalSafetyDetail();\r\n        safetyDetail.consumerUnitSatisfactory = this.consumerUnitSatisfactory;\r\n        safetyDetail.systemType = this.systemType;\r\n        safetyDetail.noEliReadings = this.noEliReadings;\r\n        safetyDetail.rcdPresent = this.rcdPresent;\r\n        safetyDetail.eliReading = this.iniEliReading;\r\n        safetyDetail.eliSafeAccordingToTops = this.eliSafeAccordingToTops;\r\n\r\n        return this._propertySafetyService.populateElectricalUnsafeReasons(safetyDetail,\r\n            this.unableToCheckSystemType,\r\n            this.ttSystemType,\r\n            rcdPresentThreshold,\r\n            this.safeInTopsThreshold)\r\n            .then((reasons) => {\r\n                let currentWarnings: string[] = [];\r\n\r\n                if (this.reasons) {\r\n                    this.reasons.forEach(reason => {\r\n                        currentWarnings.push(reason.label);\r\n                    });\r\n                }\r\n\r\n                this.reasons = reasons;\r\n\r\n                if (this.reasons) {\r\n                    /* If there are reasons that we didn't have before then show a toast for them */\r\n                    this.reasons.forEach(reason => {\r\n                        reason.label = this.getParameterisedLabel(reason.lookupId + \"Unsafe\", reason.params);\r\n                        if (isToastRequired && currentWarnings.indexOf(reason.label) === -1) {\r\n                            this.showWarning(this.getLabel(\"unsafeToast\"), reason.label);\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    private clearUnsafeDetail(): void {\r\n        this.conditionAsLeftSelected = undefined;\r\n        this.cappedTurnedOffSelected = undefined;\r\n        this.labelAttachedRemovedSelected = undefined;\r\n        this.ownedByCustomerSelected = undefined;\r\n        this.letterLeftSelected = undefined;\r\n        this.signatureObtainedSelected = undefined;\r\n    }\r\n\r\n    private clearReasons(): void {\r\n        this.reasons = [];\r\n    }\r\n\r\n    private buildBusinessRules(): void {\r\n        this.ttSystemType = this.getBusinessRule<string>(\"ttSystemType\");\r\n        this.unableToCheckSystemType = this.getBusinessRule<string>(\"unableToCheckSystemType\");\r\n        this.safeInTopsThreshold = this.getBusinessRule<number>(\"safeInTopsThreshold\");\r\n        this.iniEliReadingDecimalPlaces = this.getBusinessRule<number>(\"iniEliReadingDecimalPlaces\");\r\n\r\n    }\r\n\r\n    private buildValidationRules(): Promise<void> {\r\n        return this.buildValidation([\r\n            { property: \"iniEliReading\", condition: () => !this.noEliReadings },\r\n            {\r\n                property: \"rcdPresent\",\r\n                condition: () => (this.systemType === this.ttSystemType) && !this.noEliReadings\r\n            },\r\n            {\r\n                property: \"eliSafeAccordingToTops\",\r\n                condition: () => (this.systemType !== this.ttSystemType) && (this.iniEliReading > this.safeInTopsThreshold)\r\n            },\r\n            { property: \"conditionAsLeftSelected\", condition: () => this.hasReason() },\r\n            { property: \"cappedTurnedOffSelected\", condition: () => this.hasReason() },\r\n            { property: \"labelAttachedRemovedSelected\", condition: () => this.hasReason() },\r\n            { property: \"ownedByCustomerSelected\", condition: () => this.hasReason() },\r\n            { property: \"letterLeftSelected\", condition: () => this.hasReason() },\r\n            { property: \"signatureObtainedSelected\", condition: () => this.hasReason() },\r\n            { property: \"report\", condition: () => this.hasReason() }\r\n        ]);\r\n    }\r\n\r\n    private setEliSafeAccordingToTops(): void {\r\n        this.showEliSafeAccordingToTops = false;\r\n\r\n        if (this.systemType && this.ttSystemType && this.iniEliReading !== undefined && this.safeInTopsThreshold) {\r\n            if (this.systemType !== this.ttSystemType && this.iniEliReading > this.safeInTopsThreshold) {\r\n                this.showEliSafeAccordingToTops = true;\r\n            } else {\r\n                this.eliSafeAccordingToTops = undefined;\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":"../../../.."}