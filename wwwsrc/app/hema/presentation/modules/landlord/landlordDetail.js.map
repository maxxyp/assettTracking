{"version":3,"sources":["hema/presentation/modules/landlord/landlordDetail.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAWA;QAAoC,kCAAa;QAQ7C,wBAAY,YAA2B,EACnC,eAAgC,EAChC,aAA4B,EAC5B,UAAuB,EACvB,UAA4B;YAJhC,YAKI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAMtD;YAJG,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,KAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAE7B,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;;QACxB,CAAC;QAEM,sCAAa,GAApB,UAAqB,MAAyB;YAA9C,iBAOC;YANG,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;YAE1B,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,GAAG;gBACjD,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC,eAAe,CAAC;gBACnC,KAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC,CAAC,CAAC;QACP,CAAC;QA5BQ,cAAc;YAD1B,qCAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,EAAE,uBAAU,EAAE,iCAAgB,CAAC;qDAU1D,0CAAe;gBACjB,8BAAa,UAEhB,iCAAgB;WAZvB,cAAc,CA6B1B;QAAD,qBAAC;KA7BD,AA6BC,CA7BmC,6BAAa,GA6BhD;IA7BY,wCAAc","file":"landlordDetail.js","sourcesContent":["import { BaseViewModel } from \"../../models/baseViewModel\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { inject } from \"aurelia-dependency-injection\";\nimport { DialogController, DialogService } from \"aurelia-dialog\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { CustomerContact } from \"../../../business/models/customerContact\";\n\n@inject(LabelService, EventAggregator, DialogService, JobService, DialogController)\nexport class LandlordDetail extends BaseViewModel {\n\n    public contact: CustomerContact;\n    public jobId: string;\n    public controller: DialogController;\n\n    private _jobService: IJobService;\n\n    constructor(labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        jobService: IJobService,\n        controller: DialogController) {\n        super(labelService, eventAggregator, dialogService);\n\n        this._jobService = jobService;\n        this.controller = controller;\n\n        this.contact = null;\n    }\n\n    public activateAsync(params: { jobId: string }): Promise<void> {\n        this.jobId = params.jobId;\n\n        return this._jobService.getJob(params.jobId).then(job => {\n            this.contact = job.customerContact;\n            this.showContent();\n        });\n    }\n}\n"],"sourceRoot":"../../../.."}