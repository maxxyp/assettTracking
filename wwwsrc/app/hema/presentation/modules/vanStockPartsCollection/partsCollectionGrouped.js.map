{"version":3,"sources":["hema/presentation/modules/vanStockPartsCollection/partsCollectionGrouped.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAUA;QAA4C,0CAAa;QASrD,gCAAY,YAA2B,EAC3B,eAAgC,EAChC,aAA4B;YAFxC,YAII,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAKtD;YAHG,KAAI,CAAC,WAAW,GAAG,aAAa,CAAC;YACjC,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,KAAI,CAAC,UAAU,GAAG,EAAE,CAAC;;QACzB,CAAC;QAEM,8CAAa,GAApB,UAAqB,MAA4F;YAAjH,iBAwBC;YAtBG,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACV,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YAC7B,CAAC;YAEM,IAAA,oBAAK,EAAE,8BAAU,CAAW;YAEnC,KAAK,CAAC,OAAO,CAAC,UAAA,CAAC;gBAEJ,IAAA,YAAiC,EAAjC,gDAAiC,CAAM,CAAC,wCAAwC;gBAEvF,EAAE,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACvB,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC/B,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,UAAU,GAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC5C,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAE9B,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QA5CQ,sBAAsB;YADlC,qCAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,CAAC;qDAWpB,0CAAe;gBACjB,8BAAa;WAX/B,sBAAsB,CA8ClC;QAAD,6BAAC;KA9CD,AA8CC,CA9C2C,6BAAa,GA8CxD;IA9CY,wDAAsB","file":"partsCollectionGrouped.js","sourcesContent":["import {inject} from \"aurelia-dependency-injection\";\nimport {LabelService} from \"../../../business/services/labelService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {DialogService} from \"aurelia-dialog\";\nimport {BaseViewModel} from \"../../models/baseViewModel\";\nimport {ILabelService} from \"../../../business/services/interfaces/ILabelService\";\nimport {PartCollectionItemViewModel} from \"./viewModels/partCollectionItemViewModel\";\nimport { Material } from \"../../../business/models/material\";\n\n@inject(LabelService, EventAggregator, DialogService)\nexport class PartsCollectionGrouped extends BaseViewModel {\n\n    public VANSTOCK_ID: string;\n\n    public groups: { [jobId: string]: PartCollectionItemViewModel [] };\n    public returns: Material[];\n    public groupNames: string[];\n    public myVanAreas: string[];\n\n    constructor(labelService: ILabelService,\n                eventAggregator: EventAggregator,\n                dialogService: DialogService) {\n\n        super(labelService, eventAggregator, dialogService);\n\n        this.VANSTOCK_ID = \"VANSTOCK_ID\";\n        this.groups = {};\n        this.groupNames = [];\n    }\n\n    public activateAsync(params: { parts: PartCollectionItemViewModel [], returns: Material[], myVanAreas: string []}): Promise<void> {\n\n        if (!params) {\n            return Promise.resolve();\n        }\n\n        const {parts, myVanAreas} = params;\n\n        parts.forEach(m => {\n\n            const {jobId: groupId = this.VANSTOCK_ID} = m; // undefined job id means van stock item\n\n            if (this.groups[groupId]) {\n                this.groups[groupId].push(m);\n            } else {\n                this.groups[groupId] = [m];\n            }\n        });\n\n        this.groupNames =  Object.keys(this.groups);\n        this.myVanAreas = myVanAreas;\n        this.returns = params.returns;\n\n        return Promise.resolve();\n    }\n\n}\n"],"sourceRoot":"../../../.."}