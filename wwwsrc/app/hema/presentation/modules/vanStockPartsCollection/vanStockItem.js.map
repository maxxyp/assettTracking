{"version":3,"sources":["hema/presentation/modules/vanStockPartsCollection/vanStockItem.ts"],"names":[],"mappings":"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","file":"vanStockItem.js","sourcesContent":["import { LabelService } from \"../../../business/services/labelService\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { inject } from \"aurelia-framework\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { BaseViewModel } from \"../../models/baseViewModel\";\nimport { PartCollectionItemViewModel } from \"./viewModels/partCollectionItemViewModel\";\nimport { UpdateDialog } from \"./updateDialog\";\nimport { PartsCollectionMain } from \"./partsCollectionMain\";\nimport { EngineerServiceConstants } from \"../../../business/services/constants/engineerServiceConstants\";\nimport { EngineerService } from \"../../../business/services/engineerService\";\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\n\n@inject(LabelService, EventAggregator, DialogService, EngineerService)\nexport class VanStockItem extends BaseViewModel {\n\n    public part: PartCollectionItemViewModel;\n    public isDone: boolean;\n    public show: boolean;\n    public myVanAreas: string[];\n\n    private _engineerService: IEngineerService;\n\n    constructor(labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        engineerService: IEngineerService) {\n\n        super(labelService, eventAggregator, dialogService);\n        this._engineerService = engineerService;\n    }\n\n    public async activateAsync(params: { part: PartCollectionItemViewModel, myVanAreas: string[] }): Promise<void> {\n\n        this.part = params.part;\n        this.myVanAreas = params.myVanAreas;\n        this._eventAggregator.subscribe(EngineerServiceConstants.ENGINEER_STATUS_CHANGED, () => this.update());\n        await this.update();\n        return Promise.resolve();\n    }\n\n    public toggleVerified(): void {\n        this.part.verified = !this.part.verified;\n        this._eventAggregator.publish(PartsCollectionMain.MARK_PART_AS_VERIFIED);\n    }\n\n    public async editVanStock(): Promise<void> {\n\n        // setup modal\n        const part = { ...this.part, verified: false };\n        const model = { part, myVanAreas: this.myVanAreas };\n\n        const viewModel = UpdateDialog;\n\n        // handle modal result\n        const result = await this._dialogService.open({ viewModel, model });\n\n        if (result.wasCancelled) {\n            return;\n        }\n\n        // update part in main form\n        const editedPart: PartCollectionItemViewModel = result.output;\n        const areaChanged = editedPart.area !== this.part.area;\n        editedPart.areaChanged = areaChanged;\n\n        this.part = editedPart;\n\n        this._eventAggregator.publish(PartsCollectionMain.UPDATE_PART, editedPart);\n\n        // update zone if changed\n        // const {stockReferenceId, quantityCollected, jobId, area, description, amount} = this.part;\n\n        if (editedPart.areaChanged) {\n\n            // const materialZoneUpdate = {\n            //     stockReferenceId,\n            //     jobId,\n            //     description,\n            //     quantity: quantityCollected,\n            //     area,\n            //     amount\n            // };\n\n            const exists = this.myVanAreas.some(a => a === this.part.area);\n\n            if (exists) {\n                return;\n            }\n\n            this.myVanAreas.push(this.part.area);\n\n        }\n\n    }\n\n    private async update(): Promise<void> {\n        const status = await this._engineerService.getStatus();\n        if (status === EngineerService.OBTAINING_MATS_STATUS) {\n            this.show = true;\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}