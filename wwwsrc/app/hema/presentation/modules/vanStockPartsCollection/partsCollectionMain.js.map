{"version":3,"sources":["hema/presentation/modules/vanStockPartsCollection/partsCollectionMain.ts"],"names":[],"mappings":"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","file":"partsCollectionMain.js","sourcesContent":["import {DialogResult, DialogService} from \"aurelia-dialog\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {LabelService} from \"../../../business/services/labelService\";\nimport {BaseViewModel} from \"../../models/baseViewModel\";\nimport {inject} from \"aurelia-framework\";\nimport {ILabelService} from \"../../../business/services/interfaces/ILabelService\";\nimport {BusinessException} from \"../../../business/models/businessException\";\nimport {PartsCollectionViewModel} from \"./viewModels/partsCollectionViewModel\";\nimport {IVanStockService} from \"../../../business/services/interfaces/IVanStockService\";\nimport {VanStockService} from \"../../../business/services/vanStockService\";\nimport {PartCollectionItemViewModel} from \"./viewModels/partCollectionItemViewModel\";\nimport {Router} from \"aurelia-router\";\nimport {ConfirmDialog} from \"./confirmDialog\";\nimport {EngineerService} from \"../../../business/services/engineerService\";\nimport {IEngineerService} from \"../../../business/services/interfaces/IEngineerService\";\nimport {WorkRetrievalTracker} from \"../../../business/services/workRetrievalTracker\";\nimport { MaterialToCollect } from \"../../../business/models/materialToCollect\";\nimport { Material } from \"../../../business/models/material\";\nimport { EngineerServiceConstants } from \"../../../business/services/constants/engineerServiceConstants\";\n\n@inject(LabelService, EventAggregator, DialogService, VanStockService, EngineerService, WorkRetrievalTracker, Router)\nexport class PartsCollectionMain extends BaseViewModel {\n\n    public static MARK_PART_AS_VERIFIED: string = \"MARK_PART_AS_VERIFIED\";\n    public static UPDATE_PART: string = \"UPDATE_PART\";\n\n    public viewModel: PartsCollectionViewModel;\n    public allPartsVerified: boolean;\n    public headerTitle: { partNo: number; partWord: string; };\n    public myVanAreas: string [];\n    public tracker: WorkRetrievalTracker;\n    public show: boolean;\n    private _vanStockService: IVanStockService;\n    private _engineerService: IEngineerService;\n\n    private _router: Router;\n\n    constructor(labelService: ILabelService,\n                eventAggregator: EventAggregator,\n                dialogService: DialogService,\n                vanStockService: IVanStockService,\n                engineerService: EngineerService,\n                tracker: WorkRetrievalTracker,\n                router: Router) {\n\n        super(labelService, eventAggregator, dialogService);\n\n        this._vanStockService = vanStockService;\n        this._engineerService = engineerService;\n\n        this.tracker = tracker;\n\n        this._router = router;\n\n        this.allPartsVerified = false;\n\n        eventAggregator.subscribe(PartsCollectionMain.MARK_PART_AS_VERIFIED, () => {\n            this.checkPartsVerified();\n        });\n\n        eventAggregator.subscribe(PartsCollectionMain.UPDATE_PART, (part: PartCollectionItemViewModel) => {\n            this.updatePart(part);\n        });\n\n        this._eventAggregator.subscribe(EngineerServiceConstants.ENGINEER_STATUS_CHANGED, () => this.update());\n    }\n\n    public async activateAsync(): Promise<void> {\n        try {\n            // data lookups\n            const materials = (await this._vanStockService.getPartsToCollect());\n\n            const zones = await this._vanStockService.getLocalVanStockAreaLookup();\n\n            if (!zones) {\n                this.myVanAreas = [];\n            } else {\n                this.myVanAreas = zones;\n            }\n\n            // map business to vm for materials\n            this.viewModel = this.mapMaterialsBusinessViewModel(materials.toCollect, materials.expectedReturns);\n\n            // set variables required for text\n            this.headerTitle = this.constructHeaderTitle(this.viewModel.parts, this.viewModel.expectedReturns);\n\n            // if to show submit button based on engineer status\n            this.update();\n\n            // this.setupObservables();\n            this.showContent();\n\n            return Promise.resolve();\n        } catch (e) {\n            this.showError(new BusinessException(this, \"PartsCollectionDetails\", \"Error while loading parts details\", [], e));\n            return Promise.resolve();\n        }\n    }\n\n    public async confirmParts(): Promise<void> {\n\n        const result = await this.confirmDialog();\n\n        if (result.wasCancelled) {\n            return;\n        }\n\n        const setupRegisterMaterialCollectionCalls = (parts: PartCollectionItemViewModel []): Promise<void> [] => {\n\n            let calls: Promise<void> [] = [];\n\n            parts.forEach(part => {\n\n                const {quantityCollected, id} = part;\n\n                calls.push(this._vanStockService.registerMaterialCollection({quantityCollected, dispatchId: id}));\n            });\n\n            return calls;\n        };\n        const setupPartUpdateCalls = (parts: PartCollectionItemViewModel []): Promise<void> [] => {\n\n            let calls: Promise<void> [] = [];\n\n            parts.forEach(part => {\n\n                const {stockReferenceId, description, amount, quantityCollected, jobId, area} = part;\n\n                if (part.areaChanged) {\n                    const materialZoneUpdate = {\n                        stockReferenceId,\n                        jobId,\n                        description,\n                        quantity: quantityCollected,\n                        area,\n                        amount\n                    };\n                    calls.push(this._vanStockService.registerMaterialZoneUpdate(materialZoneUpdate));\n                }\n            });\n\n            return calls;\n        };\n\n        const regCalls = setupRegisterMaterialCollectionCalls(this.viewModel.parts);\n        const updatePartCalls = setupPartUpdateCalls(this.viewModel.parts);\n\n        // order important, make sure materials are registered before updates\n        await Promise.all(regCalls);\n        await Promise.all(updatePartCalls);\n\n        await this.setPartsCollected();\n    }\n\n    public async setCollectingParts(): Promise<void> {\n        this._engineerService.isPartCollectionInProgress = true;\n        await this._engineerService.setStatus(EngineerService.OBTAINING_MATS_STATUS);\n    }\n\n    private confirmDialog(): Promise<DialogResult> {\n\n        // setup modal\n        const collected = this.viewModel.parts.map(p => p.quantityCollected).reduce((a, b) => a + b);\n        const expected = this.viewModel.parts.map(p => p.quantityExpected).reduce((a, b) => a + b);\n\n        const model = {expected, collected};\n        const viewModel = ConfirmDialog;\n\n        // handle modal result\n        return this._dialogService.open({viewModel, model});\n    }\n\n    private mapMaterialsBusinessViewModel(materials: MaterialToCollect [], returns: Material[]): PartsCollectionViewModel {\n\n        const viewModel = new PartsCollectionViewModel();\n\n        const mapMaterialItemToViewModel = (m: MaterialToCollect) => {\n\n            const item = new PartCollectionItemViewModel();\n            item.id = m.id;\n            item.description = m.description;\n\n            item.quantityExpected = m.quantity;\n            item.quantityCollected = m.quantity;\n\n            item.area = m.area;\n            item.stockReferenceId = m.stockReferenceId;\n            item.jobId = m.jobId;\n            item.amount = 9999;\n            item.verified = false;\n\n            return item;\n        };\n\n        viewModel.parts = materials.map((m) => mapMaterialItemToViewModel(m));\n\n        viewModel.expectedReturns = returns;\n        return viewModel;\n    }\n\n    private constructHeaderTitle(parts: PartCollectionItemViewModel [], returns: Material[]): { partNo: number, partWord: string, returnNo: number, returnWord: string } {\n        const partNo = (parts || [])\n                        .map(p => p.quantityExpected || 0)\n                        .reduce((a, b) => a + b, 0);\n\n        const partWord = `item${partNo > 1 ? \"s\" : \"\"}`;\n        const returnNo = (returns || [])\n                        .map(r => r.quantity || 0)\n                        .reduce((a, b) => a + b, 0);\n\n        const returnWord = `item${returnNo > 1 ? \"s\" : \"\"}`;\n        return {\n            partNo,\n            partWord,\n            returnNo,\n            returnWord\n        };\n    }\n\n    private async setPartsCollected(): Promise<void> {\n        this._engineerService.isPartCollectionInProgress = false;\n        // set the engineerstatus back to Working status\n        await this._engineerService.setStatus(undefined);\n        this._router.navigateToRoute(\"to-do\");\n    }\n\n    //#region event subscriptions\n    private checkPartsVerified(): void {\n        this.allPartsVerified = this.viewModel.parts.map(p => p.verified).reduce((a, b) => a && b);\n    }\n\n    private updatePart(newPart: PartCollectionItemViewModel): void {\n        const foundIndex = this.viewModel.parts.findIndex(part => part.id === newPart.id);\n        this.viewModel.parts.splice(foundIndex, 1, newPart);\n        this.allPartsVerified = false;\n    }\n\n    //#endregion\n\n    private async update(): Promise<void> {\n        const status = await this._engineerService.getStatus();\n        if (status === EngineerService.OBTAINING_MATS_STATUS) {\n            this.show = true;\n        }\n    }    \n\n}\n"],"sourceRoot":"../../../.."}