{"version":3,"sources":["hema/presentation/modules/previousJobs/previousJobs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAiBA;QAAkC,gCAAa;QAS3C,sBAAY,MAAc,EACd,UAAuB,EACvB,mBAAyC,EACzC,YAA2B,EAC3B,eAAgC,EAChC,aAA4B;YALxC,YAMI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAQtD;YANG,KAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;YAC9B,KAAI,CAAC,oBAAoB,GAAG,mBAAmB,CAAC;YAChD,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;;QAC5C,CAAC;QAEM,oCAAa,GAApB,UAAqB,MAAyB;YAA9C,iBAQC;YAPG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAC,GAAG;gBAClD,MAAM,CAAC,KAAI,CAAC,oBAAoB,CAAC,2BAA2B,CAAC,GAAG,CAAC;qBAC5D,IAAI,CAAC,UAAC,YAAY;oBACf,KAAI,CAAC,YAAY,GAAG,YAAY,CAAC;oBACjC,KAAI,CAAC,WAAW,EAAE,CAAC;gBACvB,CAAC,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,4CAAqB,GAA5B,UAA6B,EAAU;YACnC,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,cAAc,EAAE,EAAC,aAAa,EAAE,EAAE,EAAC,CAAC,CAAC;QACtE,CAAC;QArCQ,YAAY;YADxB,qCAAM,CAAC,uBAAM,EAAE,uBAAU,EAAE,yCAAmB,EAAE,2BAAY,EAAE,0CAAe,EAAE,8BAAa,CAAC;6CAUtE,uBAAM,0BAIG,0CAAe;gBACjB,8BAAa;WAd/B,YAAY,CAsCxB;QAAD,mBAAC;KAtCD,AAsCC,CAtCiC,6BAAa,GAsC9C;IAtCY,oCAAY","file":"previousJobs.js","sourcesContent":["import {inject} from \"aurelia-dependency-injection\";\r\nimport {Task} from \"../../../business/models/task\";\r\nimport {Job} from \"../../../business/models/job\";\r\nimport {IJobService} from \"../../../business/services/interfaces/IJobService\";\r\nimport {JobService} from \"../../../business/services/jobService\";\r\nimport {PreviousJobViewModel} from \"./viewModels/previousJobViewModel\";\r\nimport {Router} from \"aurelia-router\";\r\n\r\nimport {IPreviousJobsFactory} from \"../../factories/interfaces/IPreviousJobsFactory\";\r\nimport {PreviousJobsFactory} from \"../../factories/previousJobsFactory\";\r\nimport {BaseViewModel} from \"../../models/baseViewModel\";\r\nimport {ILabelService} from \"../../../business/services/interfaces/ILabelService\";\r\nimport {LabelService} from \"../../../business/services/labelService\";\r\nimport {EventAggregator} from \"aurelia-event-aggregator\";\r\nimport {DialogService} from \"aurelia-dialog\";\r\n\r\n@inject(Router, JobService, PreviousJobsFactory, LabelService, EventAggregator, DialogService)\r\nexport class PreviousJobs extends BaseViewModel {\r\n    public tasks: Task[];\r\n    public job: Job;\r\n    public previousJobs: PreviousJobViewModel[];\r\n    public isFullScreen: boolean;\r\n    private _jobService: IJobService;\r\n    private _previousJobsFactory: IPreviousJobsFactory;\r\n    private _router: Router;\r\n\r\n    constructor(router: Router,\r\n                jobService: IJobService,\r\n                previousJobsFactory: IPreviousJobsFactory,\r\n                labelService: ILabelService,\r\n                eventAggregator: EventAggregator,\r\n                dialogService: DialogService) {\r\n        super(labelService, eventAggregator, dialogService);\r\n\r\n        this.tasks = [];\r\n        this.previousJobs = [];\r\n        this._router = router;\r\n        this._jobService = jobService;\r\n        this._previousJobsFactory = previousJobsFactory;\r\n        this.isFullScreen = window.isFullScreen;\r\n    }\r\n\r\n    public activateAsync(params: { jobId: string }): Promise<void> {\r\n        return this._jobService.getJob(params.jobId).then((job) => {\r\n            return this._previousJobsFactory.createPreviousJobsViewModel(job)\r\n                .then((previousJobs) => {\r\n                    this.previousJobs = previousJobs;\r\n                    this.showContent();\r\n                });\r\n        });\r\n    }\r\n\r\n    public navigateToPreviousJob(id: string): void {\r\n        this._router.navigateToRoute(\"previous-job\", {previousJobId: id});\r\n    }\r\n}\r\n"],"sourceRoot":"../../../.."}