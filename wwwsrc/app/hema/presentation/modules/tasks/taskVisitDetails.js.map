{"version":3,"sources":["hema/presentation/modules/tasks/taskVisitDetails.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;IAuBA;QAAsC,oCAAiB;QAQnD,0BAAY,cAA+B,EAC/B,UAAuB,EACvB,eAAiC,EACjC,YAA2B,EAC3B,WAAyB,EACzB,eAAgC,EAChC,aAA4B,EAC5B,iBAAqC,EACrC,oBAA0C;YARtD,YAUI,kBAAM,UAAU,EAAE,eAAe,EAAE,YAAY,EAAE,eAAe,EAAE,aAAa,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,cAAc,CAAC,SAM5I;YAJG,KAAI,CAAC,YAAY,GAAG,WAAW,CAAC;YAChC,KAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,KAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC;;QACvB,CAAC;QAEM,wCAAa,GAApB,UAAqB,MAA0B;YAA/C,iBAMC;YALG,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;YAE7B,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE;iBACjB,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC;iBACvB,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;QAC5C,CAAC;QAES,oCAAS,GAAnB;YAAA,iBAQC;YAPG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAA,IAAI;gBAChE,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;oBAC9B,KAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC;gBACtC,CAAC;gBAEL,KAAI,CAAC,MAAM,GAAG,CAAC,CAAC,KAAI,CAAC,MAAM,IAAI,KAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAC3D,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,uCAAY,GAApB;YAAA,iBAOC;YANG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,iCAAiC,EAAE;iBAC1D,IAAI,CAAC,UAAA,SAAS;gBACX,SAAS,CAAC,GAAG,CAAC,UAAC,EAA6B;oBACxC,OAAA,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB;gBAA/C,CAA+C,CAClD,CAAC;YACN,CAAC,CAAC,CAAC;QACX,CAAC;QAnDQ,gBAAgB;YAD5B,0BAAM,CAAC,+BAAc,EAAE,uBAAU,EAAE,iCAAe,EAAE,2BAAY,EAAE,yBAAW,EAAE,0CAAe,EAAE,8BAAa,EAAE,qCAAiB,EAAE,yCAAmB,CAAC;qFActH,0CAAe;gBACjB,8BAAa;WAd/B,gBAAgB,CAoD5B;QAAD,uBAAC;KApDD,AAoDC,CApDqC,qCAAiB,GAoDtD;IApDY,4CAAgB","file":"taskVisitDetails.js","sourcesContent":["/// <reference path=\"./../../../../../typings/app.d.ts\" />\nimport {inject} from \"aurelia-framework\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {CatalogService} from \"../.././../business/services/catalogService\";\nimport {ICatalogService} from \"../../../business/services/interfaces/ICatalogService\";\nimport {IJobService} from \"../../../business/services/interfaces/IJobService\";\nimport {JobService} from \"../../../business/services/jobService\";\nimport {ITaskService} from \"../../../business/services/interfaces/ITaskService\";\nimport {TaskService} from \"../../../business/services/taskService\";\nimport {EditableViewModel} from \"../../models/editableViewModel\";\nimport {LabelService} from \"../../../business/services/labelService\";\nimport {ILabelService} from \"../../../business/services/interfaces/ILabelService\";\nimport {IValidationService} from \"../../../business/services/interfaces/IValidationService\";\nimport {ValidationService} from \"../../../business/services/validationService\";\nimport {IBusinessRuleService} from \"../../../business/services/interfaces/IBusinessRuleService\";\nimport {BusinessRuleService} from \"../../../business/services/businessRuleService\";\nimport {EngineerService} from \"../../../business/services/engineerService\";\nimport {IEngineerService} from \"../../../business/services/interfaces/IEngineerService\";\nimport {DialogService} from \"aurelia-dialog\";\nimport {TaskVisit} from \"../../../business/models/taskVisit\";\nimport {IActivityCmpnentVstStatus} from \"../../../business/models/reference/IActivityCmpnentVstStatus\";\n\n@inject(CatalogService, JobService, EngineerService, LabelService, TaskService, EventAggregator, DialogService, ValidationService, BusinessRuleService)\nexport class TaskVisitDetails extends EditableViewModel {\n    public noData: boolean;\n    public statuses: {[code: string]: string};\n    public visits: TaskVisit [];\n\n    private _taskService: ITaskService;\n    private _taskId: string;\n\n    constructor(catalogService: ICatalogService,\n                jobService: IJobService,\n                engineerService: IEngineerService,\n                labelService: ILabelService,\n                taskService: ITaskService,\n                eventAggregator: EventAggregator,\n                dialogService: DialogService,\n                validationService: IValidationService,\n                businessRulesService: IBusinessRuleService) {\n\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRulesService, catalogService);\n\n        this._taskService = taskService;\n        this.statuses = {};\n        this.visits = [];\n        this.noData = true;\n    }\n\n    public activateAsync(params: { taskId: string }): Promise<void> {\n        this._taskId = params.taskId;\n\n        return this.loadCatalogs()\n                .then(() => this.load())\n                .then(() => this.showContent());\n    }\n\n    protected loadModel(): Promise<void> {\n        return this._taskService.getTaskItem(this.jobId, this._taskId).then(task => {\n                if (task && task.previousVisits) {\n                    this.visits = task.previousVisits;\n                }\n\n            this.noData = !(this.visits && this.visits.length > 0);\n        });\n    }\n\n    private loadCatalogs(): Promise<void> {\n        return this._catalogService.getActivityComponentVisitStatuses()\n            .then(jobStatus => {\n                jobStatus.map((js: IActivityCmpnentVstStatus) =>\n                    this.statuses[js.status] = js.statusDescription\n                );\n            });\n    }\n}\n"],"sourceRoot":"../../../.."}