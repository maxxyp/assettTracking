{"version":3,"sources":["hema/presentation/modules/jobDetails/jobDetails.ts"],"names":[],"mappings":"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","file":"jobDetails.js","sourcesContent":["import { inject } from \"aurelia-dependency-injection\";\nimport { RouteConfig, Router, RouterConfiguration, NavModel } from \"aurelia-router\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { Job } from \"../../../business/models/job\";\nimport { BaseViewModel } from \"../../models/baseViewModel\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { JobState } from \"../../../business/models/jobState\";\nimport { EventAggregator, Subscription } from \"aurelia-event-aggregator\";\nimport { DataStateSummary } from \"../../../business/models/dataStateSummary\";\nimport { DataState } from \"../../../business/models/dataState\";\nimport { DataStateTotals } from \"../../../business/models/dataStateTotals\";\nimport { EngineerService } from \"../../../business/services/engineerService\";\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { EngineerServiceConstants } from \"../../../business/services/constants/engineerServiceConstants\";\nimport { JobServiceConstants } from \"../../../business/services/constants/jobServiceConstants\";\nimport { JobSummaryFactory } from \"../../factories/jobSummaryFactory\";\nimport { IJobSummaryFactory } from \"../../factories/interfaces/IJobSummaryFactory\";\nimport { JobSummaryViewModel } from \"../../models/jobSummaryViewModel\";\nimport { ChargeService } from \"../../../business/services/charge/chargeService\";\nimport { ChargeServiceConstants } from \"../../../business/services/constants/chargeServiceConstants\";\n\n@inject(JobService, JobSummaryFactory, EngineerService, LabelService, EventAggregator, DialogService)\nexport class JobDetails extends BaseViewModel {\n    public job: Job;\n    public jobSummaryViewModel: JobSummaryViewModel;\n    public router: Router;\n\n    private _jobService: IJobService;\n    private _jobSummaryFactory: IJobSummaryFactory;\n    private _engineerService: IEngineerService;\n    private _subscriptions: Subscription[];\n\n    constructor(jobService: IJobService,\n        jobSummaryFactory: IJobSummaryFactory,\n        engineerService: IEngineerService,\n        labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService) {\n        super(labelService, eventAggregator, dialogService);\n        this._jobService = jobService;\n        this._jobSummaryFactory = jobSummaryFactory;\n        this._engineerService = engineerService;\n        this._subscriptions = [];\n    }\n\n    public configureRouter(config: RouterConfiguration, childRouter: Router): void {\n        this.router = childRouter;\n        config.map(this.getJobChildRoutes());\n    }\n\n    public activateAsync(params: { jobId: string }): Promise<void> {\n        return this._jobService.getJob(params.jobId)\n            .then(job => {\n                this.job = job;\n                this.jobSummaryViewModel = this._jobSummaryFactory.createJobSummaryViewModel(this.job);\n\n                this._subscriptions.push(this._eventAggregator.subscribe(JobServiceConstants.JOB_STATE_CHANGED, () => this.updateDataState()));\n                this._subscriptions.push(this._eventAggregator.subscribe(JobServiceConstants.JOB_DATA_STATE_CHANGED, () => this.updateDataState()));\n                this._subscriptions.push(this._eventAggregator.subscribe(EngineerServiceConstants.ENGINEER_WORKING_CHANGED, () => this.updateDataState()));\n                this._subscriptions.push(this._eventAggregator.subscribe(ChargeServiceConstants.CHARGE_UPDATE_COMPLETED,\n                    () => ChargeService.showHideChargeRoute(job, this.router)\n                ));\n\n                this.updateRiskIndicators();\n\n                // adding dynamic routes like this because in edge it doesnt work in line\n                this.addDynamicRoutes();\n\n                this.updateDataState();\n            })\n            .then(() => this.showContent());\n    }\n\n    public deactivateAsync(): Promise<void> {\n        this._subscriptions.forEach(s => s.dispose());\n        this._subscriptions = [];\n\n        return Promise.resolve();\n    }\n\n    public navigateToJob(): void {\n\n        const routeName = this.job.state === JobState.done ? \"doneJob\" : \"job\";\n\n        this.router.navigateToRoute(routeName, { jobId: this.job.id });\n    }\n\n    public getJobChildRoutes(): RouteConfig[] {\n        return [\n            {\n                route: \"\",\n                redirect: \"risks\"\n            },\n            {\n                route: \"risks\",\n                moduleId: \"hema/presentation/modules/risks/risks\",\n                name: \"risks\",\n                nav: true,\n                title: \"Risks\",\n                settings: {}\n            },\n            {\n                route: \"property-safety\",\n                moduleId: \"hema/presentation/modules/propertySafety/propertySafetyMain\",\n                name: \"property-safety\",\n                nav: true,\n                title: \"Property Safety\",\n                settings: {}\n            },\n            {\n                route: \"risks/:riskId\",\n                moduleId: \"hema/presentation/modules/risks/riskMain\",\n                name: \"risk\",\n                nav: false,\n                title: \"Risk\",\n                settings: {\n                    tabGroupParent: \"risks\",\n                }\n            },\n            {\n                route: \"appliances\",\n                moduleId: \"hema/presentation/modules/appliances/appliances\",\n                name: \"appliances\",\n                nav: true,\n                title: \"Appliances\",\n                settings: {}\n            },\n            {\n                route: \"appliances/:applianceId\",\n                moduleId: \"hema/presentation/modules/appliances/applianceMain\",\n                name: \"appliance\",\n                nav: false,\n                title: \"Appliance\",\n                settings: { tabGroupParent: \"appliances\" }\n            },\n            {\n                route: \"activities\",\n                moduleId: \"hema/presentation/modules/tasks/tasks\",\n                name: \"activities\",\n                nav: true,\n                title: \"Activities\",\n                settings: {\n                    canEditCancelledJob: true\n                }\n            },\n            {\n                route: \"activities/:taskId\",\n                moduleId: \"hema/presentation/modules/tasks/taskMain\",\n                name: \"activity\",\n                nav: false,\n                title: \"Activity\",\n                settings: { tabGroupParent: \"activities\" }\n            },\n            {\n                route: \"task-appliance/:jobId\",\n                moduleId: \"hema/presentation/modules/tasks/taskAppliance\",\n                name: \"task-appliance\",\n                nav: false,\n                title: \"Activity Appliance\",\n                settings: {\n                    tabGroupParent: \"activities\",\n                    canEditCancelledJob: true\n                }\n            },\n            {\n                route: \"parts\",\n                moduleId: \"hema/presentation/modules/parts/partsMain\",\n                name: \"parts\",\n                nav: true,\n                title: \"Parts\",\n                settings: {\n                    tabGroupParent: \"parts\"\n                }\n            },\n            {\n                route: \"charges\",\n                moduleId: \"hema/presentation/modules/charges/charges\",\n                name: \"charges\",\n                nav: true,\n                title: \"Charges\",\n                settings: {\n                    visible: false\n                }\n            },\n            {\n                route: \"appointment\",\n                name: \"appointmentMain\",\n                moduleId: \"hema/presentation/modules/appointment/appointmentBookingMain\",\n                nav: false,\n                title: \"Book an Appointment\",\n                settings: {}\n            },\n            {\n                route: \"landlord-certificate\",\n                moduleId: \"hema/presentation/modules/landlord/certificate/landlordSafetyCertificate\",\n                name: \"landlord-certificate\",\n                nav: true,\n                title: \"Certificate\",\n                settings: {}\n            }\n        ];\n    }\n\n    private addDynamicRoutes(): void {\n        this.addPreviousJobsRoutes();\n        ChargeService.showHideChargeRoute(this.job, this.router);\n    }\n\n    private addPreviousJobsRoutes(): void {\n        let previousJobsRoutes: RouteConfig[] = [{\n            route: \"previous-jobs\",\n            moduleId: \"hema/presentation/modules/previousJobs/previousJobs\",\n            name: \"previous-jobs\",\n            nav: true,\n            title: \"Previous Activities\",\n            settings: {}\n        },\n        {\n            route: \"previous-jobs/:previousJobId\",\n            moduleId: \"hema/presentation/modules/previousJobs/previousJobDetail\",\n            name: \"previous-job\",\n            nav: false,\n            title: \"Previous Activities\",\n            settings: { tabGroupParent: \"previous-jobs\" }\n        }];\n\n        previousJobsRoutes.forEach(route => this.router.addRoute(route));\n    }\n\n    private updateDataState(): void {\n        this._engineerService.isWorking()\n            .then(isWorking => {\n                if (isWorking) {\n                    this.updateRiskIndicators();\n\n                    this._jobService.getDataStateSummary(this.job.id)\n                        .then((dataStateSummary) => {\n                            if (dataStateSummary) {\n                                this._jobService.getJobState(this.job.id).then((state) => {\n                                    this.updateRouterState(\"activities\", dataStateSummary, state.value);\n                                    this.updateRouterState(\"property-safety\", dataStateSummary, state.value);\n                                    this.updateRouterState(\"risks\", dataStateSummary, state.value);\n                                    this.updateRouterState(\"appliances\", dataStateSummary, state.value);\n                                    this.updateRouterState(\"previous-jobs\", dataStateSummary, state.value);\n                                    this.updateRouterState(\"parts\", dataStateSummary, state.value);\n                                    this.updateRouterState(\"charges\", dataStateSummary, state.value);\n                                    // special case: we take certificate dataState as the combination of\n                                    //  propertySafety and appliances\n                                    this.updateCertificateState(dataStateSummary, state.value);\n                                });\n                            }\n                        });\n                }\n            });\n    }\n\n    private updateRouterState(configName: string, dataStateSummary: DataStateSummary, jobState: JobState): void {\n        let navModel: NavModel = this.router.navigation.find(n => n.config.name === configName);\n        if (navModel) {\n            let dataState = this.getRouteState(configName, dataStateSummary, jobState);\n            let cssClass = this.getCssClassFromState(dataState);\n            navModel.settings.stateClass = cssClass;\n        }\n    }\n\n    private updateCertificateState(dataStateSummary: DataStateSummary, jobState: JobState): void {\n        let navModel: NavModel = this.router.navigation.find(n => n.config.name === \"landlord-certificate\");\n        if (navModel) {\n            navModel.settings.visible = this.job.isLandlordJob;\n            let propertySafetyDataState = this.getRouteState(\"property-safety\", dataStateSummary, jobState);\n            let appliancesDataState = this.getRouteState(\"appliances\", dataStateSummary, jobState);\n\n            let dataState = this.getWorstCaseDataState(propertySafetyDataState, appliancesDataState);\n            let cssClass = this.getCssClassFromState(dataState);\n            navModel.settings.stateClass = cssClass;\n        }\n    }\n\n    private updateRiskIndicators(): void {\n        if (this.job) {\n            let propertySafetyNav = this.router.navigation.find(n => n.config.name === \"property-safety\");\n            if (this.job.propertySafety && this.job.propertySafety.previousPropertySafetyDetail) {\n                propertySafetyNav.settings.riskType = \"critical\";\n            }\n\n            let risksNav = this.router.navigation.find(n => n.config.name === \"risks\");\n            if (risksNav) {\n                let existsHazardAndRisk = Job.hasHazardAndRisk(this.job);\n                risksNav.settings.riskType = existsHazardAndRisk.hasHazard ? \"critical\" : existsHazardAndRisk.hasRisk ? \"alert\" : null;\n            }\n\n            let appliancesNav = this.router.navigation.find(n => n.config.name === \"appliances\");\n            if (appliancesNav) {\n                let hasUnSafe = this.job.history.appliances\n                                && this.job.history.appliances.some(a => !a.isDeleted\n                                                                            && !a.isExcluded\n                                                                            && a.safety\n                                                                            && a.safety.previousApplianceUnsafeDetail\n                                                                            && a.safety.previousApplianceUnsafeDetail.noticeType !== undefined);\n                appliancesNav.settings.riskType = hasUnSafe ? \"alert\" : null;\n            }\n        }\n    }\n\n    private getRouteState(configName: string, dataStateSummary: DataStateSummary, jobState: JobState): DataState {\n        if (jobState === JobState.arrived) {\n            let dataStateTotals: DataStateTotals = dataStateSummary.getTotals(configName);\n\n            if (dataStateTotals) {\n                if (dataStateTotals.invalid > 0) {\n                    return DataState.invalid;\n                } else if (dataStateTotals.notVisited > 0) {\n                    return DataState.notVisited;\n                } else if (dataStateTotals.dontCare > 0 && dataStateTotals.valid === 0) {\n                    return DataState.dontCare;\n                } else {\n                    return DataState.valid;\n                }\n            } else {\n                return DataState.dontCare;\n            }\n        } else {\n            return DataState.dontCare;\n        }\n    }\n\n    private getCssClassFromState(dataState: DataState): string {\n        switch (dataState) {\n            case DataState.valid:\n                return \"state-valid\";\n            case DataState.notVisited:\n                return \"state-not-visited\";\n            case DataState.invalid:\n                return \"state-invalid\";\n            case DataState.dontCare:\n                return \"state-dont-care\";\n            default:\n                return \"state-none\";\n        }\n    }\n\n    private getWorstCaseDataState(...dataStates: DataState[]): DataState {\n        if (dataStates.some(state => state === DataState.invalid)) {\n            return DataState.invalid;\n        }\n        if (dataStates.some(state => state === DataState.notVisited)) {\n            return DataState.notVisited;\n        }\n        if (dataStates.some(state => state === DataState.valid)) {\n            return DataState.valid;\n        }\n        return DataState.dontCare;\n    }\n}\n"],"sourceRoot":"../../../.."}