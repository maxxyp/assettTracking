{"version":3,"sources":["hema/presentation/modules/charges/charges.ts"],"names":[],"mappings":"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","file":"charges.js","sourcesContent":["import { ChargeServiceConstants } from \"../../../business/services/constants/chargeServiceConstants\";\nimport { ChargesFactory } from \"../../factories/chargesFactory\";\nimport { ICatalogService } from \"../../../business/services/interfaces/ICatalogService\";\nimport { IBusinessRuleService } from \"../../../business/services/interfaces/IBusinessRuleService\";\nimport { IValidationService } from \"../../../business/services/interfaces/IValidationService\";\nimport { CatalogService } from \"../../../business/services/catalogService\";\nimport { BusinessRuleService } from \"../../../business/services/businessRuleService\";\nimport { ValidationService } from \"../../../business/services/validationService\";\nimport { EditableViewModel } from \"../../models/editableViewModel\";\nimport { inject } from \"aurelia-framework\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { EventAggregator, Subscription } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { IEngineerService } from \"../../../business/services/interfaces/IEngineerService\";\nimport { EngineerService } from \"../../../business/services/engineerService\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { ButtonListItem } from \"../../../../common/ui/elements/models/buttonListItem\";\nimport { ChargeMainViewModel } from \"./viewModels/chargeMainViewModel\";\nimport { IChargesFactory } from \"../../factories/interfaces/IChargesFactory\";\nimport { IChargeService } from \"../../../business/services/interfaces/charge/IChargeService\";\nimport { ChargeService } from \"../../../business/services/charge/chargeService\";\nimport { ChargeTaskViewModel } from \"./viewModels/chargeTaskViewModel\";\nimport { Charge } from \"../../../business/models/charge/charge\";\nimport { ChargeItemPartViewModel } from \"./viewModels/chargeItemPartViewModel\";\nimport { ChargeItemLabourViewModel } from \"./viewModels/chargeItemLabourViewModel\";\nimport { IDiscount } from \"../../../business/models/reference/IDiscount\";\nimport { CatalogConstants } from \"../../../business/services/constants/catalogConstants\";\nimport { IChargeDispute } from \"../../../business/models/reference/IChargeDispute\";\nimport * as bignumber from \"bignumber\";\nimport { BindingEngine, computedFrom } from \"aurelia-binding\";\nimport { ChargeCatalogHelperService } from \"../../../business/services/charge/chargeCatalogHelperService\";\nimport { IChargeCatalogHelperService } from \"../../../business/services/interfaces/charge/IChargeCatalogHelperService\";\nimport { IGoodsItemStatus } from \"../../../business/models/reference/IGoodsItemStatus\";\nimport { Task } from \"../../../business/models/task\";\n\n@inject(LabelService, EventAggregator, DialogService, EngineerService, JobService, ValidationService,\n    BusinessRuleService, CatalogService, ChargesFactory, ChargeService, BindingEngine, ChargeCatalogHelperService)\n\nexport class Charges extends EditableViewModel {\n\n    public discountCatalog: IDiscount[];\n    public chargeOptionCatalog: ButtonListItem[];\n    public chargeDisputeCatalog: IChargeDispute[];\n    public viewModel: ChargeMainViewModel;\n    public hasCharge: boolean;\n    public previousChargeSameAppliance: boolean;\n\n    private _goodsItemStatusesCatalog: IGoodsItemStatus[];\n\n    private _jobId: string;\n    private _chargesFactory: IChargesFactory;\n    private _chargeService: IChargeService;\n    private _viewModelSubscriptions: Subscription[];\n\n    private _bindingEngine: BindingEngine;\n\n    // business rules\n    private _noDiscountCode: string;\n    private _complaintActionCategoryCharge: string;\n    private _complaintReasonCodeCharge: string;\n    private _chargeUpdateCompletedSub: Subscription;\n\n    private readonly _CHARGE_NOT_OK: string;\n    private _discountPercentageCode: string;\n    private _discountFixedCode: string;\n\n    private _chargeCatalogHelper: IChargeCatalogHelperService;\n\n    constructor(labelService: ILabelService,\n                eventAggregator: EventAggregator,\n                dialogService: DialogService,\n                engineerService: IEngineerService,\n                jobService: IJobService,\n                validationService: IValidationService,\n                businessRulesService: IBusinessRuleService,\n                catalogService: ICatalogService,\n                chargesFactory: IChargesFactory,\n                chargeService: IChargeService,\n                bindingEngine: BindingEngine,\n                chargeCatalogHelper: IChargeCatalogHelperService) {\n\n        super(jobService, engineerService, labelService, eventAggregator, dialogService, validationService, businessRulesService, catalogService);\n\n        this._viewModelSubscriptions = [];\n        this._bindingEngine = bindingEngine;\n        this._chargesFactory = chargesFactory;\n        this._chargeService = chargeService;\n        this._chargeCatalogHelper = chargeCatalogHelper;\n        this._CHARGE_NOT_OK = Charge.CHARGE_NOT_OK;\n    }\n\n    public deactivateAsync(): Promise<void> {\n        this.removeObservables();\n        if (this._chargeUpdateCompletedSub) {\n            this._chargeUpdateCompletedSub.dispose();\n            this._chargeUpdateCompletedSub = null;\n        }\n        return Promise.resolve();\n    }\n\n    public activateAsync(params: { jobId: string, applianceId: string }): Promise<any> {\n        this._jobId = params.jobId;\n        this.setupEvents();\n        return this.buildValidationRules()\n            .then(() => this.populateRules())\n            .then(() => this.loadCatalogs())\n            .then(() => this.load())\n            .then(() => {\n                if (this._chargeService.areChargesUptoDate() === true) {\n                    this.showContent();\n                }\n            });\n    }\n\n    public canDeactivateAsync(): Promise<boolean> {\n        return Promise.resolve(this._chargeService.areChargesUptoDate());\n    }\n\n    public toggleItem(task: ChargeTaskViewModel): void {\n        if (task) {\n            task.show = !task.show;\n        }\n    }\n\n    public setDiscount(task: ChargeTaskViewModel): Promise<void> {\n\n        const taskId = task.task.id;\n        let businessModel = this._chargesFactory.createChargesBusinessModel(this.viewModel);\n        const taskIndex = businessModel.tasks.findIndex(t => t.task.id === taskId);\n\n        if (task.discountCode) {\n            let chargeableTask = this._chargesFactory.createChargeableTaskBusinessModel(task);\n\n            this._chargeService.applyDiscountToTask(chargeableTask, this.discountCatalog, this._discountPercentageCode, this._discountFixedCode, this._noDiscountCode);\n            task.discountAmount = chargeableTask.discountAmount;\n            task.discountText = chargeableTask.discountText;\n            task.discountCode = chargeableTask.discountCode;\n            task.netTotal = chargeableTask.netTotal;\n            task.grossTotal = chargeableTask.grossTotal;\n            task.vat = chargeableTask.vat;\n            task.vatCode = chargeableTask.vatCode;\n\n            businessModel.tasks[taskIndex] = chargeableTask;\n\n            this._chargeService.updateTotals(businessModel);\n\n            let viewModel = this._chargesFactory.createChargesViewModel(businessModel);\n\n            this.viewModel.chargeTotal = viewModel.chargeTotal;\n            this.viewModel.grossTotal = viewModel.grossTotal;\n            this.viewModel.discountAmount = viewModel.discountAmount;\n            this.viewModel.netTotal = viewModel.netTotal;\n\n            this.validateAllRules();\n        }\n\n        return Promise.resolve();\n    }\n\n    public getPartItemDescription(item: ChargeItemPartViewModel): string {\n        let warrantyOrReturn: string = \"\";\n\n        const partsLabel = this.getLabel(\"parts\");\n        const previousLabel = this.getLabel(\"previous\");\n        let status = this.getGoodsItemStatusDescription(item.status);\n\n        if (status) {\n            status = status.toLowerCase();\n        }\n\n        let description = `${partsLabel} ${item.isFromPreviousActivity ? ` - ${previousLabel} ${status}` : \"\"}`;\n\n        if (item.isWarranty && item.warrantyQty > 0) {\n            warrantyOrReturn = `x${item.warrantyQty} ${this.getLabel(\"warranty\")}`;\n        }\n\n        if (item.isReturn && item.returnQty > 0) {\n            if (warrantyOrReturn !== \"\") {\n                warrantyOrReturn = warrantyOrReturn + \", \";\n            }\n            warrantyOrReturn = `${warrantyOrReturn}x${item.returnQty} ${this.getLabel(\"return\")}`;\n        }\n\n        if (warrantyOrReturn !== \"\") {\n            return `${description} - ${warrantyOrReturn}`;\n        }\n\n        return description;\n    }\n\n    public getLabourItemDescription(item: ChargeItemLabourViewModel): string {\n        return this.getLabel(\"labour\");\n    }\n\n    public getHasCharge(): boolean {\n        let flag = false;\n        if (this.viewModel && this.viewModel.netTotal) {\n            if (this.viewModel.netTotal.greaterThan(0)) {\n                flag = true;\n            }\n        }\n        return flag;\n    }\n\n    public get noErrors(): boolean {\n\n        let noErrors = true;\n\n        if (this.viewModel && this.viewModel.tasks) {\n            for (let i = 0; i <= this.viewModel.tasks.length - 1; i++) {\n                if (this.viewModel.tasks[i].error) {\n                    noErrors = false;\n                    break;\n                }\n            }\n        }\n\n        return noErrors;\n    }\n\n    public get hasErrors(): boolean {\n        return !this.noErrors;\n    }\n\n    public readWarning(): void {\n        this.viewModel.previousChargeSameApplianceConfirmed = true;\n    }\n\n    @computedFrom(\"viewModel.previousChargeSameApplianceConfirmed\")\n    public get showChargeOkQuestions(): boolean {\n\n        // if previousCharge make sure user has confirmed the message\n\n        if (this.viewModel && this.viewModel.previousChargeSameAppliance) {\n            return this.viewModel.previousChargeSameApplianceConfirmed;\n        }\n\n        return true;\n    }\n\n    public getTotalChargableTime(task: Task): string {\n        let totalChargableTime: number = 0;\n        if (task) {\n            totalChargableTime = task.chargeableTime || 0;\n            task.previousVisits.forEach(pv => totalChargableTime += pv.chargeableTime || 0);\n        }  \n        \n        return totalChargableTime > 1 ? totalChargableTime + \" \" + this.getLabel(\"minutes\") : totalChargableTime + \" \" + this.getLabel(\"minute\");\n    }\n\n    protected saveModel(): Promise<void> {\n\n        return this.populateRules().then(() => {\n\n            this.viewModel.dataState = this.getFinalDataState();\n\n            if (this.viewModel.chargeComplaintActionCategory === this._complaintActionCategoryCharge) {\n                this.viewModel.chargeReasonCode = this._complaintReasonCodeCharge;\n            } else {\n                this.viewModel.chargeReasonCode = undefined;\n            }\n\n            let model = this._chargesFactory.createChargesBusinessModel(this.viewModel);\n            return this._chargeService.saveCharges(model);\n        });\n    }\n\n    protected loadModel(): Promise<void> {\n        if (this._chargeService.areChargesUptoDate() === true) {\n            return this.loadCharges();\n        } else {\n            this.showBusy(`${this.getLabel(\"updatingCharges\")} ...`);\n            return Promise.resolve();\n        }\n    }\n\n    protected clearModel(): Promise<void> {\n\n        this.removeObservables();\n\n        if (this.viewModel) {\n            this.viewModel.discountAmount = undefined;\n            this.viewModel.chargeOption = undefined;\n            this.viewModel.remarks = undefined;\n        }\n\n        this.viewModel.tasks.forEach(task => {\n            task.discountAmount = new bignumber.BigNumber(0);\n            task.discountCode = undefined;\n            task.discountText = \"\";\n        });\n\n        let businessModel = this._chargesFactory.createChargesBusinessModel(this.viewModel);\n\n        this._chargeService.updateTotals(businessModel);\n        this.viewModel = this._chargesFactory.createChargesViewModel(businessModel);\n\n        this.setObservables();\n\n        return Promise.resolve();\n    }\n\n    private getGoodsItemStatusDescription(status: string): string {\n\n        if (!status || !this._goodsItemStatusesCatalog) {\n            return \"\";\n        }\n\n        const item = this._goodsItemStatusesCatalog.find(g => g.status === status);\n\n        if (!item || item.status === \"FP\") {\n            return \"\";\n        }\n\n        return item.description;\n    }\n\n    private setupEvents(): void {\n        this._chargeUpdateCompletedSub = this._eventAggregator.subscribe(ChargeServiceConstants.CHARGE_UPDATE_COMPLETED, () => {\n            if (this._chargeService.areChargesUptoDate() === true) {\n                this.loadCharges().then(() => {\n                    this.showContent();\n                });\n            }\n        });\n    }\n\n    private populateRules(): Promise<void> {\n        return this._businessRuleService.getQueryableRuleGroup(\"chargeService\")\n            .then((ruleGroup) => {\n                // setup rules\n                this._noDiscountCode = ruleGroup.getBusinessRule<string>(\"noDiscountCode\");\n                this._complaintActionCategoryCharge = ruleGroup.getBusinessRule<string>(\"complaintActionCategoryCharge\");\n                this._complaintReasonCodeCharge = ruleGroup.getBusinessRule<string>(\"complaintCategoryBillingQuery\");\n                this._discountPercentageCode = ruleGroup.getBusinessRule<string>(\"discountPercentageCode\");\n                this._discountFixedCode = ruleGroup.getBusinessRule<string>(\"discountFixedCode\");\n            });\n    }\n\n    private setObservables(): void {\n        let sub1 = this._bindingEngine.propertyObserver(this.viewModel, \"chargeOption\")\n            .subscribe((newValue: string, oldValue: string) => {\n                this.chargeOptionChanged(newValue, oldValue);\n            });\n        this._viewModelSubscriptions.push(sub1);\n\n        if (this.viewModel && this.viewModel.tasks) {\n            this.viewModel.tasks.forEach(task => {\n                let sub = this._bindingEngine.propertyObserver(task, \"discountCode\")\n                    .subscribe((newValue: boolean, oldValue: boolean) => {\n                        this.setDiscount(task);\n                    });\n                this._viewModelSubscriptions.push(sub);\n            });\n        }\n    }\n\n    private removeObservables(): void {\n\n        this._viewModelSubscriptions.forEach(s => {\n            s.dispose();\n            s = null;\n        });\n\n        this._viewModelSubscriptions = [];\n    }\n\n    private setHasCharge(): void {\n        this.hasCharge = false;\n        if (this.viewModel && this.viewModel.netTotal) {\n            if (this.viewModel.netTotal.greaterThan(0)) {\n                this.hasCharge = true;\n            }\n        }\n        this.validateAllRules();\n    }\n\n    private loadCharges(): Promise<void> {\n        this.removeObservables();\n        return this._chargeService.loadCharges(this._jobId)\n            .then((charges) => {\n                if (charges) {\n                    this.populateValues(charges);\n                    this.setHasCharge();\n                    this.setInitialDataState(this.viewModel.dataStateId, this.viewModel.dataState);\n                    this.setObservables();\n                    return Promise.resolve();\n                } else {\n                    return this._chargeService.applyCharges(this._jobId)\n                        .then((jobcharges) => {\n                            if (jobcharges) {\n                                this.populateValues(jobcharges);\n                                if (this.chargeDisputeCatalog) {\n                                    this.setChargeDisputeText(this.viewModel.chargeComplaintActionCategory);\n                                    this.viewModel.chargeComplaintActionCategory = this.chargeDisputeCatalog[0].id;\n                                }\n                                this.setInitialDataState(this.viewModel.dataStateId, this.viewModel.dataState);\n                            } else {\n                                this.viewModel = new ChargeMainViewModel();\n                            }\n                            this.setHasCharge();\n                            this.setObservables();\n                        });\n                }\n            });\n    }\n\n    private loadCatalogs(): Promise<void> {\n        let noDiscount = <IDiscount>{};\n        noDiscount.discountCode = this._noDiscountCode;\n        const labelKey = \"nodiscount\";\n        noDiscount.discountDescription = this.labels[labelKey];\n        // noDiscount.discountValue = -999;\n        // noDiscount.discountCategory = \"\";\n\n        return Promise.all([\n            this._catalogService.getDiscounts(),\n            this._catalogService.getChargeOptions(),\n            this._catalogService.getChargeDisputes(),\n            this._catalogService.getGoodsItemStatuses()\n        ]).then(([discounts, chargeOptions, chargeDisputes, goodsItemStatuses]) => {\n            const validDiscounts = this._chargeCatalogHelper.getValidDiscounts(discounts);\n            this.discountCatalog = [noDiscount, ...validDiscounts];\n            this.chargeOptionCatalog = this.toButtonListItemArray(chargeOptions, CatalogConstants.CHARGE_OPTION_ID, CatalogConstants.CHARGE_OPTION_DESCRIPTION);\n            this.chargeDisputeCatalog = chargeDisputes;\n            this._goodsItemStatusesCatalog = goodsItemStatuses;\n        });\n    }\n\n    private buildValidationRules(): Promise<void> {\n        return this.buildValidation([\n            {\n                property: \"viewModel.chargeComplaintActionCategory\",\n                condition: () => this.viewModel && this.viewModel.chargeOption === this._CHARGE_NOT_OK\n            },\n            {\n                property: \"viewModel.chargeOption\",\n                condition: () => this.hasCharge\n            },\n            {\n                property: \"viewModel.remarks\",\n                condition: () => this.viewModel && this.viewModel.chargeOption === this._CHARGE_NOT_OK\n            },\n            {\n                property: \"viewModel.previousChargeSameApplianceConfirmed\",\n                condition: () => this.previousChargeSameAppliance,\n                passes: [\n                    {\n                        test: () => this.viewModel && this.viewModel.previousChargeSameApplianceConfirmed,\n                        message: null\n                    }]\n            }\n        ]);\n    }\n\n    private populateValues(businessModel: Charge): void {\n        this.viewModel = this._chargesFactory.createChargesViewModel(businessModel);\n        businessModel = this._chargesFactory.createChargesBusinessModel(this.viewModel);\n        if (businessModel) {\n            this._chargeService.updateTotals(businessModel);\n        }\n        this.viewModel = this._chargesFactory.createChargesViewModel(businessModel);\n        this.setChargeDisputeText(this.viewModel.chargeComplaintActionCategory);\n    }\n\n    private chargeOptionChanged(newValue: string, oldValue: string): Promise<void> {\n\n        if (newValue === this._CHARGE_NOT_OK) {\n            this.setChargeDisputeText(this.chargeDisputeCatalog[0].id);\n            this.viewModel.chargeComplaintActionCategory = this.chargeDisputeCatalog[0].id;\n        }\n        return this.validateAllRules();\n    }\n\n    private setChargeDisputeText(value: string): void {\n        if (value && this.chargeDisputeCatalog) {\n            let dispute = this.chargeDisputeCatalog.find(x => x.id === value);\n            if (dispute) {\n                this.viewModel.chargeDisputeText = dispute.description + \" - \" + dispute.id;\n            }\n        }\n    }    \n}\n"],"sourceRoot":"../../../.."}