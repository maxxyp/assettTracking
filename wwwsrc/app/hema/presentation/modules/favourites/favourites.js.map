{"version":3,"sources":["hema/presentation/modules/favourites/favourites.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAiBA;QAAgC,8BAAa;QAQzC,oBAAY,YAA2B,EACnC,eAAgC,EAChC,aAA4B,EAC5B,gBAAmC,EACnC,UAAuB;YAJ3B,YAKI,kBAAM,YAAY,EAAE,eAAe,EAAE,aAAa,CAAC,SAKtD;YAHG,KAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;YAC1C,KAAI,CAAC,0BAA0B,GAAG,KAAK,CAAC;YACxC,KAAI,CAAC,WAAW,GAAG,UAAU,CAAC;;QAClC,CAAC;QAEM,kCAAa,GAApB;YAAA,iBASC;YARG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE;iBACnC,IAAI,CAAC,UAAC,KAAK;gBACR,KAAI,CAAC,0BAA0B,GAAG,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC9D,MAAM,CAAC,KAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;YACtD,CAAC,CAAC;iBACD,IAAI,CAAC,UAAC,QAAQ;gBACX,KAAI,CAAC,aAAa,GAAG,QAAQ,CAAC;YAClC,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,kCAAa,GAApB;YACI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yCAAmB,CAAC,sBAAsB,CAAC,CAAC;YAC1E,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;QAC7B,CAAC;QAEM,0CAAqB,GAA5B,UAA6B,IAA2B;YAAxD,iBAEC;YADG,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAjB,CAAiB,CAAC,CAAC;QACvF,CAAC;QAEY,oCAAe,GAA5B,UAA6B,IAA2B;;;;;gCACpD,qBAAM,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAO,IAAI,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,UAAC,CAAC,IAAK,OAAA,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAjB,CAAiB,CAAC,EAAA;;4BAAtF,SAAsF,CAAC;4BACvF,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,yCAAmB,CAAC,sBAAsB,CAAC,CAAC;;;;;SAC7E;QACM,+BAAU,GAAjB,UAAkB,KAAa;YAC3B,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QA9CQ,UAAU;YADtB,0BAAM,CAAC,2BAAY,EAAE,0CAAe,EAAE,8BAAa,EAAE,mCAAgB,EAAE,uBAAU,CAAC;qDAU1D,0CAAe;gBACjB,8BAAa;WAVvB,UAAU,CA+CtB;QAAD,iBAAC;KA/CD,AA+CC,CA/C+B,6BAAa,GA+C5C;IA/CY,gCAAU","file":"favourites.js","sourcesContent":["/// <reference path=\"../../../../../typings/app.d.ts\" />\nimport { inject } from \"aurelia-framework\";\nimport { FavouriteService } from \"../../../business/services/favouriteService\";\nimport { FavouriteList } from \"../../../business/models/favouriteList\";\nimport { Part } from \"../../../business/models/part\";\nimport { ConsumablePart } from \"../../..//business/models/consumablePart\";\nimport { BaseViewModel } from \"../../models/baseViewModel\";\nimport { ILabelService } from \"../../../business/services/interfaces/ILabelService\";\nimport { LabelService } from \"../../../business/services/labelService\";\nimport { EventAggregator } from \"aurelia-event-aggregator\";\nimport { DialogService } from \"aurelia-dialog\";\nimport { IJobService } from \"../../../business/services/interfaces/IJobService\";\nimport { JobService } from \"../../../business/services/jobService\";\nimport { IFavouriteService } from \"../../../business/services/interfaces/IFavouriteService\";\nimport { JobServiceConstants } from \"../../../business/services/constants/jobServiceConstants\";\n\n@inject(LabelService, EventAggregator, DialogService, FavouriteService, JobService)\nexport class Favourites extends BaseViewModel {\n\n    public favouriteList: FavouriteList;\n    public showAddToPartsBasketButton: boolean;\n\n    private _favouriteService: IFavouriteService;\n    private _jobService: IJobService;\n\n    constructor(labelService: ILabelService,\n        eventAggregator: EventAggregator,\n        dialogService: DialogService,\n        favouriteService: IFavouriteService,\n        jobService: IJobService) {\n        super(labelService, eventAggregator, dialogService);\n\n        this._favouriteService = favouriteService;\n        this.showAddToPartsBasketButton = false;\n        this._jobService = jobService;\n    }\n\n    public activateAsync(): Promise<any> {\n        return this._jobService.getActiveJobId()\n            .then((jobId) => {\n                this.showAddToPartsBasketButton = !!(jobId && (jobId !== \"\"));\n                return this._favouriteService.getFavouritesList();\n            })\n            .then((faveList) => {\n                this.favouriteList = faveList;\n            });\n    }\n\n    public detachedAsync(): Promise<void> {\n        this._eventAggregator.publish(JobServiceConstants.JOB_DATA_STATE_CHANGED);\n        return Promise.resolve();\n    }\n\n    public reorderConsumableItem(item: Part | ConsumablePart): Promise<void> {\n        return this._favouriteService.reOrder(item, false).catch((e) => this.showError(e));\n    }\n\n    public async reorderPartItem(item: Part | ConsumablePart): Promise<void> {\n        await this._favouriteService.reOrder(<Part>item, true).catch((e) => this.showError(e));\n        this._eventAggregator.publish(JobServiceConstants.JOB_DATA_STATE_CHANGED);\n    }\n    public deleteItem(index: number): void {\n        this._favouriteService.removeFavourite(index);\n    }\n}\n"],"sourceRoot":"../../../.."}