{"version":3,"sources":["hema/core/elements/timePicker2.ts"],"names":[],"mappings":"AAAA,qDAAqD;;;;;;;;;;;;;IAYrD;QAiCI,qBAAY,OAAgB;YACxB,IAAI,CAAC,gBAAgB,GAAG,mCAAmC,CAAC;YAC5D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC;QAEM,8BAAQ,GAAf;YAAA,iBAoBC;YAnBG,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,UAAC,CAAa;gBACtD,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAC,CAAa;gBACpD,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,YAAY,EAAE,UAAC,CAAa;gBACvD,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAC,CAAa;gBACrD,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAC,CAAa;gBACrD,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACjB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC1B,CAAC;YACD,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3B,CAAC;QAEM,8BAAQ,GAAf;YAAA,iBAgBC;YAfG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,UAAC,CAAa;gBACzD,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,UAAC,CAAa;gBACvD,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,YAAY,EAAE,UAAC,CAAa;gBAC1D,KAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAC,CAAa;gBACxD,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;YACH,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,UAAU,EAAE,UAAC,CAAa;gBACxD,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACjB,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,yBAAG,GAAV;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC/C,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpC,IAAI,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;gBACnH,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACtC,CAAC;QACL,CAAC;QAEM,8BAAQ,GAAf;YACI,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC/C,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBACpC,IAAI,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;gBACpH,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBACjC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YACtC,CAAC;QACL,CAAC;QAEM,0BAAI,GAAX;YAAA,iBAkBC;YAjBG,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAM,KAAK,GAAG,uBAAU,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACnD,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;gBAC1C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;gBAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACvB,CAAC;YAED,qBAAS,CAAC,SAAS,CAAC;gBAChB,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC;oBAClB,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,iBAAG,CAAC,iBAAiB,CAAC,MAAM,EAAE;wBACtD,MAAM,EAAE;4BACJ,KAAK,EAAE,KAAI,CAAC,QAAQ;yBACvB;wBACD,OAAO,EAAE,IAAI;qBAChB,CAAC,CAAC,CAAC;gBACR,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAEM,2BAAK,GAAZ;YACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC;QAEM,2BAAK,GAAZ,UAAa,CAAM;YAAnB,iBAMC;YALG,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpJ,IAAI,CAAC,eAAe,GAAG,qBAAS,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,GAAG,EAAE,EAAV,CAAU,EAAE,GAAG,CAAC,CAAC;YACvE,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,WAAW,IAAI,CAAC,CAAC,IAAI,KAAK,YAAY,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5J,IAAI,CAAC,eAAe,GAAG,qBAAS,CAAC,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,EAAE,GAAG,CAAC,CAAC;YAC5E,CAAC;QACL,CAAC;QAEM,0BAAI,GAAX,UAAY,CAAM;YACd,qBAAS,CAAC,SAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,CAAC;QAC9B,CAAC;QAEM,kCAAY,GAAnB,UAAoB,QAAgB;YAApC,iBAYC;YAXG,qBAAS,CAAC,SAAS,CAAC;gBAChB,IAAM,KAAK,GAAG,uBAAU,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;gBACjD,EAAE,CAAC,CAAC,KAAK,KAAK,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC;oBACjC,MAAM,CAAC;gBACX,CAAC;gBACD,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;oBACT,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,eAAe,CAAC;oBAClC,MAAM,CAAC;gBACX,CAAC;gBACD,KAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YACjC,CAAC,CAAC,CAAC;QACP,CAAC;QAEO,iCAAW,GAAnB;YACI,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClD,CAAC;QAEO,6BAAO,GAAf,UAAgB,IAAY;YACxB,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC7C,IAAI,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAC/C,IAAI,WAAW,GAAG,MAAM,EAAE,CAAC;YAC3B,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;YAChC,WAAW,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACpC,MAAM,CAAC,WAAW,CAAC;QACvB,CAAC;QAEO,qCAAe,GAAvB;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC/B,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC/B,CAAC;QACL,CAAC;QArKD;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;kDAChC;QAErB;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;oDAC9B;QAEvB;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;oEACd;QAEvC;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;mEACf;QAEtC;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;+DACnB;QAElC;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;8DACpB;QAEjC;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;gEACjB;QAEpC;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;qDAC5B;QAEzB;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;qDAC5B;QAEzB;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;gEACjB;QAEpC;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;8DACpB;QAEjC;YADC,6BAAQ,CAAC,EAAE,kBAAkB,EAAE,6BAAW,CAAC,MAAM,EAAE,CAAC;;qDAC5B;QAxBhB,WAAW;YAFvB,kCAAa,CAAC,cAAc,CAAC;YAC7B,qCAAM,CAAC,OAAO,CAAC;6CAkCS,OAAO;WAjCnB,WAAW,CAwKvB;QAAD,kBAAC;KAxKD,AAwKC,IAAA;IAxKY,kCAAW","file":"timePicker2.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\n\nimport { bindable, customElement } from \"aurelia-templating\";\nimport { bindingMode } from \"aurelia-binding\";\nimport * as moment from \"moment\";\nimport { inject } from \"aurelia-dependency-injection\";\nimport { DOM } from \"aurelia-pal\";\nimport { TimeHelper } from \"../../../hema/core/timeHelper\";\nimport { Threading } from \"../../../common/core/threading\";\n\n@customElement(\"time-picker2\")\n@inject(Element)\nexport class TimePicker2 {\n    @bindable({ defaultBindingMode: bindingMode.twoWay })\n    public value: string;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public classes: string;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public controlContainerClasses: string;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public buttonContainerClasses: string;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public buttonMinusClasses: string;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public buttonPlusClasses: string;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public hideKeyboardOnEnter: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public disabled: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public readOnly: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public cancelDefaultSubmit: boolean;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public intervalInMinutes: number;\n    @bindable({ defaultBindingMode: bindingMode.oneWay })\n    public eachSide: boolean;\n    public pickerTextBox: HTMLInputElement;\n    /* HH:mm */\n    private _timeFormatRegEx: RegExp;\n    private _hasFocus: boolean;\n    private _element: Element;\n    private _startStopTimer: number;\n    private _lastKnownValue: string;\n\n    constructor(element: Element) {\n        this._timeFormatRegEx = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n        this._element = element;\n        this._startStopTimer = -1;\n    }\n\n    public attached(): void {\n        this._element.addEventListener(\"mousedown\", (e: MouseEvent) => {\n            this.start(e);\n        });\n        this._element.addEventListener(\"mouseup\", (e: MouseEvent) => {\n            this.stop(e);\n        });\n        this._element.addEventListener(\"touchstart\", (e: TouchEvent) => {\n            this.start(e);\n        });\n        this._element.addEventListener(\"touchend\", (e: TouchEvent) => {\n            this.stop(e);\n        });\n        this._element.addEventListener(\"mouseout\", (e: MouseEvent) => {\n            this.stop(e);\n        });\n        if (!this.eachSide) {\n            this.eachSide = false;\n        }\n        this.populateDefault();\n    }\n\n    public detached(): void {\n        this._element.removeEventListener(\"mousedown\", (e: MouseEvent) => {\n            this.start(e);\n        });\n        this._element.removeEventListener(\"mouseup\", (e: MouseEvent) => {\n            this.stop(e);\n        });\n        this._element.removeEventListener(\"touchstart\", (e: TouchEvent) => {\n            this.start(e);\n        });\n        this._element.removeEventListener(\"touchend\", (e: TouchEvent) => {\n            this.stop(e);\n        });\n        this._element.removeEventListener(\"mouseout\", (e: TouchEvent) => {\n            this.stop(e);\n        });\n    }\n\n    public add(): void {\n        if (this.isValidTime() && this.intervalInMinutes) {\n            let time = this.getTime(this.value);\n            let incrementBy = Math.ceil((time.minute() + 1) / this.intervalInMinutes) * this.intervalInMinutes - time.minute();\n            time.add(incrementBy, \"minutes\");\n            this.value = time.format(\"HH:mm\");\n        }\n    }\n\n    public subtract(): void {\n        if (this.isValidTime() && this.intervalInMinutes) {\n            let time = this.getTime(this.value);\n            let incrementBy = Math.floor((time.minute() - 1) / this.intervalInMinutes) * this.intervalInMinutes - time.minute();\n            time.add(incrementBy, \"minutes\");\n            this.value = time.format(\"HH:mm\");\n        }\n    }\n\n    public blur(): void {\n        this._hasFocus = false;\n        const value = TimeHelper.getTimeString(this.value);\n        if (value && value !== this._lastKnownValue) {\n            this._lastKnownValue = value;\n            this.value = value;\n        }\n\n        Threading.nextCycle(() => {\n            if (!this._hasFocus) {\n                this._element.dispatchEvent(DOM.createCustomEvent(\"blur\", {\n                    detail: {\n                        value: this._element\n                    },\n                    bubbles: true\n                }));\n            }\n        });\n    }\n\n    public focus(): void {\n        this._hasFocus = true;\n    }\n\n    public start(e: any): void {\n        if (e.srcElement.className.indexOf(this.buttonPlusClasses) > -1 && (e.type === \"mousedown\" || e.type === \"touchstart\") && this._startStopTimer === -1) {\n            this._startStopTimer = Threading.startTimer(() => this.add(), 200);\n        } else if (e.srcElement.className.indexOf(this.buttonMinusClasses) > -1 && (e.type === \"mousedown\" || e.type === \"touchstart\") && this._startStopTimer === -1) {\n            this._startStopTimer = Threading.startTimer(() => this.subtract(), 200);\n        }\n    }\n\n    public stop(e: any): void {\n        Threading.stopTimer(this._startStopTimer);\n        this._startStopTimer = -1;\n    }\n\n    public valueChanged(newValue: string): void {\n        Threading.nextCycle(() => {\n            const value = TimeHelper.getTimeString(newValue);\n            if (value === this._lastKnownValue) {\n                return;\n            }\n            if (!value) {\n                this.value = this._lastKnownValue;\n                return;\n            }\n            this._lastKnownValue = value;\n        });\n    }\n\n    private isValidTime(): boolean {\n        return this._timeFormatRegEx.test(this.value);\n    }\n\n    private getTime(time: string): moment.Moment {\n        let hours = parseInt(time.split(\":\")[0], 10);\n        let minutes = parseInt(time.split(\":\")[1], 10);\n        let currentDate = moment();\n        currentDate.set(\"hours\", hours);\n        currentDate.set(\"minutes\", minutes);\n        return currentDate;\n    }\n\n    private populateDefault(): void {\n        if (!this.intervalInMinutes) {\n            this.intervalInMinutes = 1;\n        } else if (this.intervalInMinutes === 0) {\n            this.intervalInMinutes = 1;\n        }\n    }\n}\n"],"sourceRoot":"../../.."}