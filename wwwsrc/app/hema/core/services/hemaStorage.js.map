{"version":3,"sources":["hema/core/services/hemaStorage.ts"],"names":[],"mappings":"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","file":"hemaStorage.js","sourcesContent":["import {IStorage} from \"../../../common/core/services/IStorage\";\nimport {ISynchronousStorage} from \"../../../common/core/services/ISynchronousStorage\";\n\nexport class HemaStorage implements IStorage, ISynchronousStorage {\n    public get<T>(container: string, key : string) : Promise<T> {\n            let ret: T = undefined;\n            let data: string = window.localStorage.getItem(this.calcId(container, key));\n            if (data) {\n                try {\n                    ret = <T>JSON.parse(data);\n                } catch (e) {\n                    return Promise.reject(e);\n                }\n            }\n            return Promise.resolve(ret);\n    }\n\n    public set<T>(container: string, key : string, data : T) : Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            if (data === undefined || data === null) {\n                window.localStorage.removeItem(this.calcId(container, key));\n            } else {\n                window.localStorage.setItem(this.calcId(container, key), JSON.stringify(data));\n            }\n            resolve();\n        });\n    }\n\n    public getSynchronous<T>(container: string, key : string) : T {\n        let data: string = window.localStorage.getItem(this.calcId(container, key));\n        return data ? <T>JSON.parse(data) : undefined;\n    }\n\n    public setSynchronous<T>(container: string, key : string, data : T) : void {\n        if (data === undefined || data === null) {\n            window.localStorage.removeItem(this.calcId(container, key));\n        } else {\n            window.localStorage.setItem(this.calcId(container, key), JSON.stringify(data));\n        }\n    }\n\n    public remove(container: string, key : string) : Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            window.localStorage.removeItem(this.calcId(container, key));\n            resolve();\n        });\n    }\n\n    public clear() : Promise<void> {\n        return new Promise<void>((resolve, reject) => {\n            const archiveKey = \"db:archive:archive\"; // horrible kludge\n            const archive = window.localStorage.getItem(archiveKey);\n            window.localStorage.clear();\n            if (archive) {\n                window.localStorage.setItem(archiveKey, archive);\n            }\n            resolve();\n        });\n    }\n\n    private calcId(container: string, key : string) : string {\n        return container + \"_\" + key;\n    }\n}\n"],"sourceRoot":"../../.."}