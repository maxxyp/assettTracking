{"version":3,"sources":["hema/core/timeHelper.ts"],"names":[],"mappings":"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","file":"timeHelper.js","sourcesContent":["import * as moment from \"moment\";\nimport { StringHelper } from \"../../common/core/stringHelper\";\n\nexport class TimeHelper {\n    public static isValidTime(value: string): boolean {\n        const timeFormatRegEx = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;\n        return timeFormatRegEx.test(value);\n    }\n\n    // purpose is to convert time string to proper time for e.g. 1900 to 19:00\n    // either returns a valid value or returns undefined if its invalid\n    public static getTimeString(value: string): string {\n        if (value) {\n            if (value.indexOf(\":\") === -1) {  // if ':' NOT found \n                let temp;\n                if (value.length > 4) {\n                    /* no colon max length is 4 */\n                    temp = value.substr(0, 4);\n                } else if (value.length < 4) {\n                    /* no colon, not long enough, pad right with zeros */\n                    temp = StringHelper.padRight(value, \"0\", 4);\n                } else {\n                    temp = value;\n                }\n                if (temp) {\n                    const newVal = temp.slice(0, 2) + \":\" + temp.slice(2);\n                    // const isValieTimeFormat = validFormatRegEx.test(newVal);\n                    if (TimeHelper.isValidTime(newVal) && newVal !== \"00:00\") {\n                        return newVal;\n                    }\n                }\n                return undefined;\n            } else { // if ':' found \n                /* has a colon split it into parts */\n                let parts = value.split(\":\");\n                if (parts.length >= 2) {\n                    if (parts[0].length > 2) {\n                        parts[0] = parts[0].substring(0, 2);\n                    } else if (parts.length < 2) {\n                        parts[0] = StringHelper.padLeft(parts[0], \"0\", 2);\n                    }\n\n                    if (parts[1].length > 2) {\n                        parts[1] = parts[1].substring(0, 2);\n                    } else if (parts.length < 2) {\n                        parts[1] = StringHelper.padRight(parts[1], \"0\", 2);\n                    }\n\n                    /* add a colon */\n                    const newVal = parts[0] + \":\" + parts[1];\n                    if (TimeHelper.isValidTime(newVal) && newVal !== \"00:00\") {\n                        return newVal;\n                    }\n                    return undefined;\n                }\n                return undefined;\n            }\n        }\n        return undefined;\n    }\n\n    public static isAfter(time1: string, time2: string, format: string): boolean {\n        return moment(time1, format).isAfter(moment(time2, format));\n    }\n}\n"],"sourceRoot":"../.."}