{"version":3,"sources":["hema/business/models/applianceGasReadingMaster.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAIA;QAAgD,6CAAiB;QAQ7D;YAAA,YACI,kBAAM,qBAAS,CAAC,QAAQ,EAAE,YAAY,CAAC,SAI1C;YAHG,KAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;YACvC,KAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;YAClC,KAAI,CAAC,sCAAsC,GAAG,KAAK,CAAC;;QACxD,CAAC;QAEa,mCAAS,GAAvB,UAAwB,cAAyC;YAC7D,IAAI,0BAA0B,GAAG,cAAc,IAAI,cAAc,CAAC,mBAAmB;mBAC1E,CAAC,cAAc,CAAC,mBAAmB,CAAC,cAAc,KAAK,SAAS;oBAC/D,cAAc,CAAC,mBAAmB,CAAC,cAAc,KAAK,SAAS;oBAC/D,cAAc,CAAC,mBAAmB,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;YAEpE,IAAI,4BAA4B,GAAG,cAAc,IAAI,cAAc,CAAC,qBAAqB;mBAC9E,CAAC,cAAc,CAAC,qBAAqB,CAAC,cAAc,KAAK,SAAS;oBACjE,cAAc,CAAC,qBAAqB,CAAC,cAAc,KAAK,SAAS;oBACjE,cAAc,CAAC,qBAAqB,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;YAEtE,MAAM,CAAC,0BAA0B,IAAI,4BAA4B,CAAC;QACtE,CAAC;QACL,gCAAC;IAAD,CA5BA,AA4BC,CA5B+C,qCAAiB,GA4BhE;IA5BY,8DAAyB","file":"applianceGasReadingMaster.js","sourcesContent":["import {ApplianceGasReadings} from \"./applianceGasReadings\";\nimport { DataStateProvider } from \"./dataStateProvider\";\nimport { DataState } from \"./dataState\";\n\nexport class ApplianceGasReadingMaster  extends DataStateProvider {\n    public workedOnMainReadings: boolean;\n    public workedOnApplianceReadings: boolean;\n    public workedOnSupplementaryApplianceReadings: boolean;\n    public supplementaryBurnerFitted: boolean;\n    public preliminaryReadings: ApplianceGasReadings;\n    public supplementaryReadings: ApplianceGasReadings;\n\n    constructor() {\n        super(DataState.dontCare, \"appliances\");\n        this.workedOnApplianceReadings = false;\n        this.workedOnMainReadings = false;\n        this.workedOnSupplementaryApplianceReadings = false;\n    }\n\n    public static isTouched(readingsMaster: ApplianceGasReadingMaster) : boolean {\n        let isAPreliminaryReadingTaken = readingsMaster && readingsMaster.preliminaryReadings\n                && (readingsMaster.preliminaryReadings.burnerPressure !== undefined ||\n                    readingsMaster.preliminaryReadings.gasRateReading !== undefined ||\n                    readingsMaster.preliminaryReadings.isLpg !== undefined);\n\n        let isASupplementaryReadingTaken = readingsMaster && readingsMaster.supplementaryReadings\n                && (readingsMaster.supplementaryReadings.burnerPressure !== undefined ||\n                    readingsMaster.supplementaryReadings.gasRateReading !== undefined ||\n                    readingsMaster.supplementaryReadings.isLpg !== undefined);\n\n        return isAPreliminaryReadingTaken || isASupplementaryReadingTaken;\n    }\n}\n"],"sourceRoot":"../../.."}