{"version":3,"sources":["hema/business/models/businessRules/taskBusinessRuleHelper.ts"],"names":[],"mappings":";;;IAAA;QAAA;QAaA,CAAC;QAZiB,0CAAmB,GAAjC,UAAkC,SAA+B,EAAE,MAAc;YAC7E,MAAM,CAAE,SAAS,CAAC,mBAA8B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,MAAM,EAAZ,CAAY,CAAC,CAAC;QACxF,CAAC;QAEa,2CAAoB,GAAlC,UAAmC,SAA+B,EAAE,MAAc;YAC9E,MAAM,CAAE,SAAS,CAAC,oBAA+B,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,KAAK,MAAM,EAAZ,CAAY,CAAC,CAAC;QACzF,CAAC;QAEa,iCAAU,GAAxB,UAAyB,SAA+B,EAAE,MAAc;YACpE,MAAM,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAE,SAAS,EAAE,MAAM,CAAC;mBAC7C,CAAC,IAAI,CAAC,oBAAoB,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;QACzD,CAAC;QACL,6BAAC;IAAD,CAbA,AAaC,IAAA;IAbY,wDAAsB","file":"taskBusinessRuleHelper.js","sourcesContent":["export class TaskBusinessRuleHelper {\n    public static isNotDoingJobStatus(ruleGroup: {[key: string]: any}, status: string) : boolean {\n        return (ruleGroup.notDoingJobStatuses as string).split(\",\").some(s => s === status);\n    }\n\n    public static isNotDoingTaskStatus(ruleGroup: {[key: string]: any}, status: string) : boolean {\n        return (ruleGroup.notDoingTaskStatuses as string).split(\",\").some(s => s === status);\n    }\n\n    public static isLiveTask(ruleGroup: {[key: string]: any}, status: string): boolean {\n        return !this.isNotDoingJobStatus (ruleGroup, status)\n            && !this.isNotDoingTaskStatus(ruleGroup, status);\n    }\n}\n"],"sourceRoot":"../../../.."}