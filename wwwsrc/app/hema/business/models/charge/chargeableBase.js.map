{"version":3,"sources":["hema/business/models/charge/chargeableBase.ts"],"names":[],"mappings":";;;IAEA;QAAA;QAmBA,CAAC;QAlBa,6CAAoB,GAA9B,UAA+B,SAA8B,EAAE,GAAwB;YACnF,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC5B,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;YACnE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,SAAS,CAAC;YACrB,CAAC;QACL,CAAC;QAES,2CAAkB,GAA5B,UAA6B,SAA8B,EAAE,GAAwB;YACjF,sDAAsD;YACtD,oDAAoD;YACpD,IAAI,SAAS,GAAwB,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAEhE,EAAE,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,SAAS,IAAI,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACrE,SAAS,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACvD,CAAC;YACD,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QACL,qBAAC;IAAD,CAnBA,AAmBC,IAAA;IAnBqB,wCAAc","file":"chargeableBase.js","sourcesContent":["import * as bignumber from \"bignumber\";\n\nexport abstract class ChargeableBase {\n    protected calculateGrossAmount(netAmount: bignumber.BigNumber, vat: bignumber.BigNumber): bignumber.BigNumber {\n        if (vat && vat.greaterThan(0)) {\n            return netAmount.plus(this.calculateVatAmount(netAmount, vat));\n        } else {\n            return netAmount;\n        }\n    }\n\n    protected calculateVatAmount(netAmount: bignumber.BigNumber, vat: bignumber.BigNumber): bignumber.BigNumber {\n        // since VAT values will always be in multiplier of 10\n        // for e.g. 175 = 17.5%, 200=20%, 50=5% etc.        \n        let vatAmount: bignumber.BigNumber = new bignumber.BigNumber(0);\n\n        if (vat && vat.greaterThan(0) && netAmount && netAmount.greaterThan(0)) {\n            vatAmount = (netAmount.times(vat)).dividedBy(1000);\n        }\n        return vatAmount;\n    }\n}\n"],"sourceRoot":"../../../.."}