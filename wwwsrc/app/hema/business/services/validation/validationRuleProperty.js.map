{"version":3,"sources":["hema/business/services/validation/validationRuleProperty.ts"],"names":[],"mappings":"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","file":"validationRuleProperty.js","sourcesContent":["import {IValidationRule} from \"./IValidationRule\";\nimport {ValidationPropertyResult} from \"./rules/validationPropertyResult\";\nimport {ObjectHelper} from \"../../../../common/core/objectHelper\";\nimport {PassesRule} from \"./rules/passesRule\";\n\nexport class ValidationRuleProperty {\n    private _propertyName: string;\n    private _groups: string[];\n    private _condition: () => boolean;\n    private _validationRules: IValidationRule[];\n    private _validationRuleMessages: (string | (() => string))[];\n    private _message: string;\n\n    constructor(propertyName: string) {\n        this._propertyName = propertyName;\n        this._groups = [];\n        this._validationRules = [];\n        this._validationRuleMessages = [];\n    }\n\n    public addCondition(condition: () => boolean) : void {\n        this._condition = condition;\n    }\n\n    public addRule(validationRule: IValidationRule, message: (string | (() => string))) : void {\n        this._validationRules.push(validationRule);\n        this._validationRuleMessages.push(message);\n    }\n\n    public addGroups(groups: string[]) : void {\n        if (groups) {\n            this._groups = this._groups || [];\n            this._groups = this._groups.concat(groups);\n        }\n    }\n\n    public getGroups() : string[] {\n        return this._groups;\n    }\n\n    public getValidationRules() : IValidationRule[] {\n        return this._validationRules;\n    }\n\n    public getValidationRuleMessages() : (string | (() => string))[] {\n        return this._validationRuleMessages;\n    }\n\n    public setMessage(message: string) : void {\n        this._message = message;\n    }\n\n    public getMessage() : string {\n        return this._message;\n    }\n\n    public requiresValidating() : boolean {\n        let requiresValidating: boolean = true;\n\n        if (this._condition && !this._condition()) {\n            requiresValidating = false;\n        }\n\n        return requiresValidating;\n    }\n\n    public validate(subject: any) : Promise<ValidationPropertyResult> {\n        let validationPropertyResult: ValidationPropertyResult = new ValidationPropertyResult();\n        validationPropertyResult.property = this._propertyName;\n\n        let requiresValidating: boolean = this.requiresValidating();\n\n        if (requiresValidating && this._validationRules.length > 0) {\n            let ruleCounter = 0;\n            let value = ObjectHelper.getPathValue(subject, this._propertyName);\n\n            let doNextRule = () : Promise<ValidationPropertyResult> => {\n                return this._validationRules[ruleCounter].test(value)\n                    .then((isValid) => {\n                        validationPropertyResult.isValid = isValid;\n\n                        if (!isValid) {\n                            let isPasses: boolean = this._validationRules[ruleCounter] instanceof PassesRule;\n                            if (this._message && !isPasses) {\n                                validationPropertyResult.message = this._message;\n                            } else {\n                                if (this._validationRuleMessages[ruleCounter] instanceof Function) {\n                                    validationPropertyResult.message = (<() => string>this._validationRuleMessages[ruleCounter])();\n                                } else {\n                                    validationPropertyResult.message = <string>this._validationRuleMessages[ruleCounter];\n                                }\n                            }\n\n                            return validationPropertyResult;\n                        } else {\n                            ruleCounter++;\n                            if (ruleCounter < this._validationRules.length) {\n                                return doNextRule();\n                            } else {\n                                return validationPropertyResult;\n                            }\n                        }\n                    });\n            };\n\n            return doNextRule();\n        } else {\n            validationPropertyResult.isValid = true;\n            return Promise.resolve(validationPropertyResult);\n        }\n    }\n}\n"],"sourceRoot":"../../../.."}