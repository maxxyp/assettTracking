{"version":3,"sources":["hema/business/services/validation/rules/requiredRule.ts"],"names":[],"mappings":";;;IAIA;QAAA;QA2BA,CAAC;QAxBU,kCAAW,GAAlB,UAAmB,QAAmC;YAClD,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC9B,CAAC;QAEM,2BAAI,GAAX,UAAY,KAAU;YAClB,IAAI,UAAU,GAAG,IAAI,CAAC;YAEtB,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,YAAY,QAAQ,CAAC,CAAC,CAAC;oBACrC,UAAU,GAAmB,IAAI,CAAC,SAAU,EAAE,CAAC;gBACnD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACJ,UAAU,GAAY,IAAI,CAAC,SAAS,CAAC;gBACzC,CAAC;YACL,CAAC;YAED,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;gBACb,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,KAAK,IAAI;oBACjC,KAAK,KAAK,SAAS;oBACnB,CAAC,CAAC,2BAAY,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBACpD,CAAC,CAAC,uBAAU,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACvE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC;QACL,CAAC;QACL,mBAAC;IAAD,CA3BA,AA2BC,IAAA;IA3BY,oCAAY","file":"requiredRule.js","sourcesContent":["import {IValidationRule} from \"../IValidationRule\";\nimport {StringHelper} from \"../../../../../common/core/stringHelper\";\nimport {DateHelper} from \"../../../../core/dateHelper\";\n\nexport class RequiredRule implements IValidationRule {\n    private _required: boolean | (() => boolean);\n\n    public setRequired(required: boolean | (() => boolean)) : void {\n        this._required = required;\n    }\n\n    public test(value: any): Promise<boolean> {\n        let isRequired = true;\n\n        if (this._required !== undefined) {\n            if (this._required instanceof Function) {\n                isRequired = (<() => boolean>this._required)();\n            } else {\n                isRequired = <boolean>this._required;\n            }\n        }\n\n        if (isRequired) {\n            return Promise.resolve(value !== null &&\n                value !== undefined &&\n                !(StringHelper.isString(value) && !/\\S/.test(value)) &&\n                !(DateHelper.isDate(value) && !DateHelper.isValidDate(value)));\n        } else {\n            return Promise.resolve(true);\n        }\n    }\n}\n"],"sourceRoot":"../../../../.."}