{"version":3,"sources":["hema/business/services/validation/rules/isBetweenRule.ts"],"names":[],"mappings":";;;IAGA;QAKI,uBAAY,GAAW,EAAE,GAAW,EAAE,UAAmB;YACrD,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAChB,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAClC,CAAC;QAEM,4BAAI,GAAX,UAAY,KAAU;YAClB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC9D,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjC,CAAC;YACD,IAAI,SAAS,GAAG,2BAAY,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;YACtD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;gBACrB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YAClC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC;YACzF,CAAC;QACL,CAAC;QACL,oBAAC;IAAD,CAtBA,AAsBC,IAAA;IAtBY,sCAAa","file":"isBetweenRule.js","sourcesContent":["import {IValidationRule} from \"../IValidationRule\";\nimport {NumberHelper} from \"../../../../../common/core/numberHelper\";\n\nexport class IsBetweenRule implements IValidationRule {\n    private _min: number;\n    private _max: number;\n    private _allowEmpty: boolean;\n\n    constructor(min: number, max: number, allowEmpty: boolean) {\n        this._min = min;\n        this._max = max;\n        this._allowEmpty = allowEmpty;\n    }\n\n    public test(value: any): Promise<boolean> {\n        if (this._allowEmpty && (value === undefined || value === null)) {\n            return Promise.resolve(true);\n        }\n        let tryCoerce = NumberHelper.tryCoerceToNumber(value);\n        if (!tryCoerce.isValid) {\n            return Promise.resolve(false);\n        } else {\n            return Promise.resolve(tryCoerce.value >= this._min && tryCoerce.value <= this._max);\n        }\n    }\n}\n"],"sourceRoot":"../../../../.."}