{"version":3,"sources":["hema/business/services/storageService.ts"],"names":[],"mappings":";;;;;;;;;;;;IAyBA;QAII,wBAAY,OAAiB,EAAE,WAAgC;YAC3D,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;YACxB,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QACpC,CAAC;QAEM,uCAAc,GAArB;YAAA,iBAKC;YAJG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;iBACxB,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,EAA9B,CAA8B,CAAC;iBAC1C,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,EAApC,CAAoC,CAAC;iBAChD,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAtB,CAAsB,CAAC,CAAC;QAC5C,CAAC;QAEM,wCAAe,GAAtB;YAAA,iBAUC;YATG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAQ,mCAAgB,CAAC,sBAAsB,EACnE,mCAAgB,CAAC,0BAA0B,CAAC;iBAC3C,IAAI,CAAC,UAAA,IAAI;gBACN,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,SAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,CAAC;YAC1C,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3F,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,wCAAe,GAAtB,UAAuB,IAAW;YAAlC,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAQ,mCAAgB,CAAC,sBAAsB,EACnE,mCAAgB,CAAC,0BAA0B,EAAE,IAAI,CAAC;iBACjD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3F,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,4CAAmB,GAA1B;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAuB,mCAAgB,CAAC,sBAAsB,EAClF,mCAAgB,CAAC,iCAAiC,CAAC;iBAClD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,qBAAqB,EAAE,qCAAqC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACjH,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,4CAAmB,GAA1B,UAA2B,gBAAsC;YAAjE,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAuB,mCAAgB,CAAC,sBAAsB,EAClF,mCAAgB,CAAC,iCAAiC,EAAE,gBAAgB,CAAC;iBACpE,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,qBAAqB,EAAE,qCAAqC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACjH,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,kDAAyB,GAAhC;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAkB,mCAAgB,CAAC,sBAAsB,EAC7E,mCAAgB,CAAC,oCAAoC,CAAC;iBACrD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,2BAA2B,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,kDAAyB,GAAhC,UAAiC,eAAgC;YAAjE,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAkB,mCAAgB,CAAC,sBAAsB,EAC7E,mCAAgB,CAAC,oCAAoC,EAAE,eAAe,CAAC;iBACtE,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,2BAA2B,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,oCAAW,GAAlB;YAAA,iBAUC;YATG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAQ,mCAAgB,CAAC,sBAAsB,EACnE,mCAAgB,CAAC,qBAAqB,CAAC;iBACtC,IAAI,CAAC,UAAA,IAAI;gBACN,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,SAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAf,CAAe,CAAC,CAAC;YAC1C,CAAC,CAAC;iBACD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,aAAa,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACvF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,oCAAW,GAAlB,UAAmB,IAAW;YAA9B,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAQ,mCAAgB,CAAC,sBAAsB,EACnE,mCAAgB,CAAC,qBAAqB,EAAE,IAAI,CAAC;iBAC5C,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,aAAa,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACvF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,oCAAW,GAAlB;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAY,mCAAgB,CAAC,sBAAsB,EACvE,mCAAgB,CAAC,qBAAqB,CAAC;iBACtC,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,aAAa,EAAE,kBAAkB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,oCAAW,GAAlB,UAAmB,QAAmB;YAAtC,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAY,mCAAgB,CAAC,sBAAsB,EACvE,mCAAgB,CAAC,qBAAqB,EAAE,QAAQ,CAAC;iBAChD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,aAAa,EAAE,kBAAkB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,0CAAiB,GAAxB;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAgB,mCAAgB,CAAC,sBAAsB,EAC3E,mCAAgB,CAAC,4BAA4B,CAAC;iBAC7C,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,mBAAmB,EAAE,yBAAyB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,0CAAiB,GAAxB,UAAyB,aAA4B;YAArD,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAgB,mCAAgB,CAAC,sBAAsB,EAC3E,mCAAgB,CAAC,4BAA4B,EAAE,aAAa,CAAC;iBAC5D,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,mBAAmB,EAAE,wBAAwB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAClG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,iDAAwB,GAA/B;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAwB,mCAAgB,CAAC,sBAAsB,EACnF,mCAAgB,CAAC,oCAAoC,CAAC;iBACrD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,0BAA0B,EAAE,iCAAiC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAClH,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,iDAAwB,GAA/B,UAAgC,MAA6B;YAA7D,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAwB,mCAAgB,CAAC,sBAAsB,EACnF,mCAAgB,CAAC,oCAAoC,EAAE,MAAM,CAAC;iBAC7D,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,0BAA0B,EAAE,iCAAiC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAClH,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,2CAAkB,GAAzB,UAA0B,IAAa;YAAvC,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,mCAAgB,CAAC,sBAAsB,EACrE,mCAAgB,CAAC,oCAAoC,EAAE,IAAI,CAAC;iBAC3D,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,oBAAoB,EAAE,yBAAyB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACpG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,2CAAkB,GAAzB;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAU,mCAAgB,CAAC,sBAAsB,EACrE,mCAAgB,CAAC,oCAAoC,CAAC;iBACrD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,mBAAmB,EAAE,yBAAyB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,oCAAW,GAAlB;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAW,mCAAgB,CAAC,sBAAsB,EACtE,mCAAgB,CAAC,qBAAqB,CAAC;iBACtC,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,aAAa,EAAE,kBAAkB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,oCAAW,GAAlB,UAAmB,QAAkB;YAArC,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAW,mCAAgB,CAAC,sBAAsB,EACtE,mCAAgB,CAAC,qBAAqB,EAAE,QAAQ,CAAC;iBAChD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,aAAa,EAAE,kBAAkB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,qCAAY,GAAnB;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,kBAAkB,EAChE,mCAAgB,CAAC,eAAe,CAAC;iBAChC,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,cAAc,EAAE,oBAAoB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACzF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,qCAAY,GAAnB,UAAoB,SAAiB;YAArC,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,kBAAkB,EAChE,mCAAgB,CAAC,eAAe,EAAE,SAAS,CAAC;iBAC3C,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,cAAc,EAAE,oBAAoB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACzF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,sCAAa,GAApB;YACI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,kBAAkB,EAAE,mCAAgB,CAAC,gBAAgB,CAAC,CAAC;QAC7G,CAAC;QAEM,sCAAa,GAApB,UAAqB,MAAc;YAAnC,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,kBAAkB,EAChE,mCAAgB,CAAC,gBAAgB,EAAE,MAAM,CAAC;iBACzC,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,eAAe,EAAE,qBAAqB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3F,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,yCAAgB,GAAvB;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,kBAAkB,EAChE,mCAAgB,CAAC,WAAW,CAAC;iBAC5B,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACjG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,yCAAgB,GAAvB,UAAwB,aAAqB;YAA7C,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,kBAAkB,EAChE,mCAAgB,CAAC,WAAW,EAAE,aAAa,CAAC;iBAC3C,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,kBAAkB,EAAE,wBAAwB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACjG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,uCAAc,GAArB;YAAA,iBAQC;YAPG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,yBAAyB,EACvE,mCAAgB,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,UAAC,cAAc;gBACxD,MAAM,CAAC,cAAc,CAAC,CAAC,CAAsB,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACxF,CAAC,CAAC;iBACG,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,gBAAgB,EAAE,8BAA8B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,uCAAc,GAArB,UAAsB,WAAgC;YAAtD,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,yBAAyB,EACvE,mCAAgB,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;iBACzF,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,gBAAgB,EAAE,8BAA8B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACrG,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,8CAAqB,GAA5B;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,wBAAwB,EACtE,mCAAgB,CAAC,wBAAwB,CAAC;iBACzC,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,uBAAuB,EAAE,6BAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3G,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,8CAAqB,GAA5B,UAA6B,UAAkB;YAA/C,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,wBAAwB,EACtE,mCAAgB,CAAC,wBAAwB,EAAE,UAAU,CAAC;iBACrD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,uBAAuB,EAAE,6BAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3G,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,kDAAyB,GAAhC;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,kBAAkB,EAChE,mCAAgB,CAAC,yBAAyB,CAAC;iBAC1C,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,2BAA2B,EAAE,mCAAmC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACrH,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,kDAAyB,GAAhC,UAAiC,SAAiB;YAAlD,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAS,mCAAgB,CAAC,kBAAkB,EAChE,mCAAgB,CAAC,yBAAyB,EAAE,SAAS,CAAC;iBACrD,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,2BAA2B,EAAE,mCAAmC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACrH,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,mDAA0B,GAAjC,UAAkC,aAAqB;YACnD,IAAI,CAAC;gBACD,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,cAAc,CAAiB,aAAa,EAAE,gBAAgB,CAAC,CAAC;gBAC7F,IAAI,GAAG,IAAI,IAAI,EAAE,CAAC;gBAClB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,2BAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAxB,CAAwB,CAAC,CAAC;YACnD,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,yBAAyB,EAAE,6BAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC7G,CAAC;QACL,CAAC;QAEM,mDAA0B,GAAjC,UAAkC,aAAqB,EAAE,aAA6B;YAClF,IAAI,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAiB,aAAa,EAAE,mCAAgB,CAAC,mBAAmB,EAAE,aAAa,CAAC,CAAC;YAChI,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,4BAA4B,EAAE,6BAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAChH,CAAC;QACL,CAAC;QAEM,6CAAoB,GAA3B;YACI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC;gBACf,IAAI,CAAC,YAAY,EAAE;gBACnB,IAAI,CAAC,gBAAgB,EAAE;gBACvB,IAAI,CAAC,aAAa,EAAE;aACvB,CAAC;iBACG,IAAI,CAAC,UAAC,IAAI;gBACP,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC;YACnF,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,6CAAoB,GAA3B;YAAA,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAqC,mCAAgB,CAAC,sBAAsB,EAChG,mCAAgB,CAAC,wBAAwB,CAAC;iBACzC,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,sBAAsB,EAAE,8BAA8B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC3G,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,6CAAoB,GAA3B,UAA4B,iBAAqD;YAAjF,iBAMC;YALG,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAqC,mCAAgB,CAAC,sBAAsB,EAChG,mCAAgB,CAAC,wBAAwB,EAAE,iBAAiB,CAAC;iBAC5D,KAAK,CAAC,UAAC,KAAK;gBACT,MAAM,IAAI,qCAAiB,CAAC,KAAI,EAAE,sBAAsB,EAAE,6BAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1G,CAAC,CAAC,CAAC;QACX,CAAC;QAEM,kDAAyB,GAAhC;YACI,IAAI,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAyB,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,oCAAoC,CAAC,CAAC;YACpK,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,cAAc,EAAE,0BAA0B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC/F,CAAC;QACL,CAAC;QAEM,kDAAyB,GAAhC,UAAiC,sBAA8C;YAC3E,IAAI,CAAC;gBACD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAyB,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,oCAAoC,EAAE,sBAAsB,CAAC,CAAC;YACrL,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,cAAc,EAAE,0BAA0B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC/F,CAAC;QACL,CAAC;QAEM,qCAAY,GAAnB;YACI,IAAI,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAY,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,8BAA8B,CAAC,CAAC;YACjJ,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,cAAc,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACxF,CAAC;QACL,CAAC;QAEM,qCAAY,GAAnB,UAAoB,SAAoB;YACpC,IAAI,CAAC;gBACD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAY,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,8BAA8B,EAAE,SAAS,CAAC,CAAC;YACrJ,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,cAAc,EAAE,mBAAmB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACxF,CAAC;QACL,CAAC;QAEM,+CAAsB,GAA7B;YACI,IAAI,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAsB,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,iCAAiC,CAAC,CAAC;YAC9J,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,wBAAwB,EAAE,8BAA8B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC7G,CAAC;QACL,CAAC;QAEM,+CAAsB,GAA7B,UAA8B,mBAAwC;YAClE,IAAI,CAAC;gBACD,IAAI,CAAC,YAAY,CAAC,cAAc,CAAsB,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,iCAAiC,EAAE,mBAAmB,CAAC,CAAC;YAC5K,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,wBAAwB,EAAE,8BAA8B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC7G,CAAC;QACL,CAAC;QAEM,iDAAwB,GAA/B;YACI,IAAI,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAwB,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,mCAAmC,CAAC,CAAC;YAClK,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,0BAA0B,EAAE,wBAAwB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACzG,CAAC;QACL,CAAC;QAEM,iDAAwB,GAA/B,UAAgC,qBAA4C;YACxE,IAAI,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAwB,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,mCAAmC,EAAE,qBAAqB,CAAC,CAAC;YACzL,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,0BAA0B,EAAE,wBAAwB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YACzG,CAAC;QACL,CAAC;QAEM,6CAAoB,GAA3B;YACI,IAAI,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAc,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,gCAAgC,CAAC,CAAC;YACrJ,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,sBAAsB,EAAE,6BAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1G,CAAC;QACL,CAAC;QAEM,6CAAoB,GAA3B,UAA4B,QAAqB;YAC7C,IAAI,CAAC;gBACD,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,cAAc,CAAc,mCAAgB,CAAC,sBAAsB,EAAE,mCAAgB,CAAC,gCAAgC,EAAE,QAAQ,CAAC,CAAC;YAC/J,CAAC;YAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACb,MAAM,IAAI,qCAAiB,CAAC,IAAI,EAAE,sBAAsB,EAAE,6BAA6B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1G,CAAC;QACL,CAAC;QAjYQ,cAAc;YAD1B,0BAAM,CAAC,yBAAW,EAAE,yBAAW,CAAC;;WACpB,cAAc,CAkY1B;QAAD,qBAAC;KAlYD,AAkYC,IAAA;IAlYY,wCAAc","file":"storageService.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\r\nimport {inject} from \"aurelia-framework\";\r\n\r\nimport {IStorageService} from \"./interfaces/IStorageService\";\r\nimport {IStorage} from \"../../../common/core/services/IStorage\";\r\nimport {StorageConstants} from \"../constants/storageConstants\";\r\nimport {Job} from \"../models/job\";\r\nimport {Message} from \"../models/message\";\r\nimport {Engineer} from \"../models/engineer\";\r\nimport {BusinessException} from \"../models/businessException\";\r\nimport {HemaStorage} from \"../../core/services/hemaStorage\";\r\nimport {ApplicationSettings} from \"../../business/models/applicationSettings\";\r\nimport {ConsumablesBasket as ConsumablePartsBasket} from \"../../business/models/consumablesBasket\";\r\nimport {FavouriteList} from \"../models/favouriteList\";\r\nimport {JobApiFailure} from \"../models/jobApiFailure\";\r\nimport {RetryPayload} from \"../../../common/resilience/models/retryPayload\";\r\nimport {JobPartsCollection} from \"../models/jobPartsCollection\";\r\nimport {ISynchronousStorage} from \"../../../common/core/services/ISynchronousStorage\";\r\nimport {MaterialAdjustments} from \"../models/materialAdjustments\";\r\nimport {Materials} from \"../models/materials\";\r\nimport {MaterialSearchResults} from \"../models/materialSearchResults\";\r\nimport {MaterialHighValueTools} from \"../models/materialHighValueTools\";\r\nimport { GeoPosition } from \"../../../common/geo/models/geoPosition\";\r\n\r\n@inject(HemaStorage, HemaStorage)\r\nexport class StorageService implements IStorageService {\r\n    private _storage: IStorage;\r\n    private _syncStorage: ISynchronousStorage;\r\n\r\n    constructor(storage: IStorage, syncStorage: ISynchronousStorage) {\r\n        this._storage = storage;\r\n        this._syncStorage = syncStorage;\r\n    }\r\n\r\n    public deleteEngineer(): Promise<void> {\r\n        return this.setJobsToDo(null)\r\n            .then(() => this.setPartsCollections(null))\r\n            .then(() => this.setWorkListJobApiFailures(null))\r\n            .then(() => this.setEngineer(null));\r\n    }\r\n\r\n    public getWorkListJobs(): Promise<Job[]> {\r\n        return this._storage.get<Job[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ALL_WORK_JOBS)\r\n            .then(data => {\r\n                data = data || [];\r\n                return data.map(d => Job.fromJson(d));\r\n            })\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getWorkListJobs\", \"Getting work list\", null, error);\r\n            });\r\n    }\r\n\r\n    public setWorkListJobs(jobs: Job[]): Promise<void> {\r\n        return this._storage.set<Job[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ALL_WORK_JOBS, jobs)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setWorkListJobs\", \"Setting work list\", null, error);\r\n            });\r\n    }\r\n\r\n    public getPartsCollections(): Promise<JobPartsCollection[]> {\r\n        return this._storage.get<JobPartsCollection[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ALL_PARTSCOLLECTIONS)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getPartsCollections\", \"Getting work list parts collections\", null, error);\r\n            });\r\n    }\r\n\r\n    public setPartsCollections(partsCollections: JobPartsCollection[]): Promise<void> {\r\n        return this._storage.set<JobPartsCollection[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ALL_PARTSCOLLECTIONS, partsCollections)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setPartsCollections\", \"Setting work list parts collections\", null, error);\r\n            });\r\n    }\r\n\r\n    public getWorkListJobApiFailures(): Promise<JobApiFailure[]> {\r\n        return this._storage.get<JobApiFailure[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ALL_WORK_JOB_API_ERRORS)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getWorkListJobApiFailures\", \"Getting work list\", null, error);\r\n            });\r\n    }\r\n\r\n    public setWorkListJobApiFailures(jobApiFailuress: JobApiFailure[]): Promise<void> {\r\n        return this._storage.set<JobApiFailure[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ALL_WORK_JOB_API_ERRORS, jobApiFailuress)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getWorkListJobApiFailures\", \"Setting work list\", null, error);\r\n            });\r\n    }\r\n\r\n    public getJobsToDo(): Promise<Job[]> {\r\n        return this._storage.get<Job[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ALL_JOBS)\r\n            .then(data => {\r\n                data = data || [];\r\n                return data.map(d => Job.fromJson(d));\r\n            })\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getJobsToDo\", \"Getting job to do\", null, error);\r\n            });\r\n    }\r\n\r\n    public setJobsToDo(jobs: Job[]): Promise<void> {\r\n        return this._storage.set<Job[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ALL_JOBS, jobs)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setJobsToDo\", \"Setting job to do\", null, error);\r\n            });\r\n    }\r\n\r\n    public getMessages(): Promise<Message[]> {\r\n        return this._storage.get<Message[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_MESSAGES)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getMessages\", \"Getting messages\", null, error);\r\n            });\r\n    }\r\n\r\n    public setMessages(messages: Message[]): Promise<void> {\r\n        return this._storage.set<Message[]>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_MESSAGES, messages)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setMessages\", \"Setting messages\", null, error);\r\n            });\r\n    }\r\n\r\n    public getFavouritesList(): Promise<FavouriteList> {\r\n        return this._storage.get<FavouriteList>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_FAVOURITES_LIST)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getFavouritesList\", \"Getting Favourite List \", null, error);\r\n            });\r\n    }\r\n\r\n    public setFavouritesList(favouriteList: FavouriteList): Promise<void> {\r\n        return this._storage.set<FavouriteList>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_FAVOURITES_LIST, favouriteList)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setFavouritesList\", \"Setting Favourite List\", null, error);\r\n            });\r\n    }\r\n\r\n    public getConsumablePartsBasket(): Promise<ConsumablePartsBasket> {\r\n        return this._storage.get<ConsumablePartsBasket>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_CONSUMABLE_PARTS_BASKET)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getConsumablePartsBasket\", \"Getting consumable parts basket\", null, error);\r\n            });\r\n    }\r\n\r\n    public setConsumablePartsBasket(basket: ConsumablePartsBasket): Promise<void> {\r\n        return this._storage.set<ConsumablePartsBasket>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_CONSUMABLE_PARTS_BASKET, basket)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setConsumablePartsBasket\", \"Setting consumable parts basket\", null, error);\r\n            });\r\n    }\r\n\r\n    public setConsumablesRead(read: boolean): Promise<void> {\r\n        return this._storage.set<boolean>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_CONSUMABLE_UPDATES_READ, read)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setConsumablesRead\", \"Setting consumable read\", null, error);\r\n            });\r\n    }\r\n\r\n    public getConsumablesRead(): Promise<boolean> {\r\n        return this._storage.get<boolean>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_CONSUMABLE_UPDATES_READ)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getConsumableRead\", \"Getting consumable read\", null, error);\r\n            });\r\n    }\r\n\r\n    public getEngineer(): Promise<Engineer> {\r\n        return this._storage.get<Engineer>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ENGINEER)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getEngineer\", \"Getting engineer\", null, error);\r\n            });\r\n    }\r\n\r\n    public setEngineer(engineer: Engineer): Promise<void> {\r\n        return this._storage.set<Engineer>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_STORAGE_ENGINEER, engineer)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setEngineer\", \"Setting engineer\", null, error);\r\n            });\r\n    }\r\n\r\n    public getUserPatch(): Promise<string> {\r\n        return this._storage.get<string>(StorageConstants.HEMA_USER_SETTINGS,\r\n            StorageConstants.HEMA_USER_PATCH)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getUserPatch\", \"Getting user Patch\", null, error);\r\n            });\r\n    }\r\n\r\n    public setUserPatch(userPatch: string): Promise<void> {\r\n        return this._storage.set<string>(StorageConstants.HEMA_USER_SETTINGS,\r\n            StorageConstants.HEMA_USER_PATCH, userPatch)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setUserPatch\", \"Setting user patch\", null, error);\r\n            });\r\n    }\r\n\r\n    public getUserRegion(): Promise<string> {\r\n        return this._storage.get<string>(StorageConstants.HEMA_USER_SETTINGS, StorageConstants.HEMA_USER_REGION);\r\n    }\r\n\r\n    public setUserRegion(region: string): Promise<void> {\r\n        return this._storage.set<string>(StorageConstants.HEMA_USER_SETTINGS,\r\n            StorageConstants.HEMA_USER_REGION, region)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setUserRegion\", \"Setting user region\", null, error);\r\n            });\r\n    }\r\n\r\n    public getWorkingSector(): Promise<string> {\r\n        return this._storage.get<string>(StorageConstants.HEMA_USER_SETTINGS,\r\n            StorageConstants.HEMA_SECTOR)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getWorkingSector\", \"Getting working sector\", null, error);\r\n            });\r\n    }\r\n\r\n    public setWorkingSector(workingSector: string): Promise<void> {\r\n        return this._storage.set<string>(StorageConstants.HEMA_USER_SETTINGS,\r\n            StorageConstants.HEMA_SECTOR, workingSector)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setWorkingSector\", \"Setting Working Sector\", null, error);\r\n            });\r\n    }\r\n\r\n    public getAppSettings(): Promise<ApplicationSettings> {\r\n        return this._storage.get<string>(StorageConstants.HEMA_APPLICATION_SETTINGS,\r\n            StorageConstants.HEMA_APP_SETTINGS).then((settingsString) => {\r\n            return settingsString ? <ApplicationSettings>JSON.parse(settingsString) : undefined;\r\n        })\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getAppSettings\", \"Getting Application Settings\", null, error);\r\n            });\r\n    }\r\n\r\n    public setAppSettings(appSettings: ApplicationSettings): Promise<void> {\r\n        return this._storage.set<string>(StorageConstants.HEMA_APPLICATION_SETTINGS,\r\n            StorageConstants.HEMA_APP_SETTINGS, appSettings ? JSON.stringify(appSettings) : undefined)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setAppSettings\", \"Setting Application Settings\", null, error);\r\n            });\r\n    }\r\n\r\n    public getSimulationEngineer(): Promise<string> {\r\n        return this._storage.get<string>(StorageConstants.HEMA_SIMULATION_SETTINGS,\r\n            StorageConstants.HEMA_SIMULATION_ENGINEER)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getSimulationEngineer\", \"Getting Simulation Engineer\", null, error);\r\n            });\r\n    }\r\n\r\n    public setSimulationEngineer(engineerId: string): Promise<void> {\r\n        return this._storage.set<string>(StorageConstants.HEMA_SIMULATION_SETTINGS,\r\n            StorageConstants.HEMA_SIMULATION_ENGINEER, engineerId)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setSimulationEngineer\", \"Setting Simulation Engineer\", null, error);\r\n            });\r\n    }\r\n\r\n    public getLastSuccessfulSyncTime(): Promise<number> {\r\n        return this._storage.get<number>(StorageConstants.HEMA_INIT_SETTINGS,\r\n            StorageConstants.HEMA_REFERENCE_STALE_TIME)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getLastSuccessfulSyncTime\", \"Getting Last Successful Sync Time\", null, error);\r\n            });\r\n    }\r\n\r\n    public setLastSuccessfulSyncTime(staleTime: number): Promise<void> {\r\n        return this._storage.set<number>(StorageConstants.HEMA_INIT_SETTINGS,\r\n            StorageConstants.HEMA_REFERENCE_STALE_TIME, staleTime)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setLastSuccessfulSyncTime\", \"Setting Last Successful Sync Time\", null, error);\r\n            });\r\n    }\r\n\r\n    public getResilienceRetryPayloads(containerName: string): RetryPayload[] {\r\n        try {\r\n            let data = this._syncStorage.getSynchronous<RetryPayload[]>(containerName, \"RETRY_PAYLOADS\");\r\n            data = data || [];\r\n            return data.map(d => RetryPayload.fromJson(d));\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"resilienceRetryPayloads\", \"Getting resilience payloads\", null, error);\r\n        }\r\n    }\r\n\r\n    public setResilienceRetryPayloads(containerName: string, retryPayloads: RetryPayload[]): void {\r\n        try {\r\n            return this._syncStorage.setSynchronous<RetryPayload[]>(containerName, StorageConstants.HEMA_RETRY_PAYLOADS, retryPayloads);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"setResilienceRetryPayloads\", \"Setting resilience payloads\", null, error);\r\n        }\r\n    }\r\n\r\n    public userSettingsComplete(): Promise<boolean> {\r\n        return Promise.all([\r\n            this.getUserPatch(),\r\n            this.getWorkingSector(),\r\n            this.getUserRegion()\r\n        ])\r\n            .then((vals) => {\r\n                return vals[0] !== undefined && vals[1] !== undefined && vals[2] !== undefined;\r\n            });\r\n    }\r\n\r\n    public getFeatureToggleList(): Promise<{ [featureName: string]: boolean }> {\r\n        return this._storage.get<{ [featureName: string]: boolean }>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_FEATURE_TOGGLE_LIST)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"getFeatureToggleList\", \"Getting Feature Toggle List \", null, error);\r\n            });\r\n    }\r\n\r\n    public setFeatureToggleList(featureToggleList: { [featureName: string]: boolean }): Promise<void> {\r\n        return this._storage.set<{ [featureName: string]: boolean }>(StorageConstants.HEMA_STORAGE_CONTAINER,\r\n            StorageConstants.HEMA_FEATURE_TOGGLE_LIST, featureToggleList)\r\n            .catch((error) => {\r\n                throw new BusinessException(this, \"setFeatureToggleList\", \"Setting Feature Toggle List\", null, error);\r\n            });\r\n    }\r\n\r\n    public getMaterialHighValueTools(): MaterialHighValueTools {\r\n        try {\r\n            return this._syncStorage.getSynchronous<MaterialHighValueTools>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_MATERIAL_HIGHVALUETOOLS);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"getMaterials\", \"Getting high value tools\", null, error);\r\n        }\r\n    }\r\n\r\n    public setMaterialHighValueTools(materialHighValueTools: MaterialHighValueTools): void {\r\n        try {\r\n            this._syncStorage.setSynchronous<MaterialHighValueTools>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_MATERIAL_HIGHVALUETOOLS, materialHighValueTools);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"setMaterials\", \"Setting high value tools\", null, error);\r\n        }\r\n    }\r\n\r\n    public getMaterials(): Materials {\r\n        try {\r\n            return this._syncStorage.getSynchronous<Materials>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_MATERIAL_VANSTOCK);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"getMaterials\", \"Getting materials\", null, error);\r\n        }\r\n    }\r\n\r\n    public setMaterials(materials: Materials): void {\r\n        try {\r\n            this._syncStorage.setSynchronous<Materials>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_MATERIAL_VANSTOCK, materials);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"setMaterials\", \"Setting materials\", null, error);\r\n        }\r\n    }\r\n\r\n    public getMaterialAdjustments(): MaterialAdjustments {\r\n        try {\r\n            return this._syncStorage.getSynchronous<MaterialAdjustments>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_MATERIAL_ADJUSTMENTS);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"getMaterialAdjustments\", \"Getting material adjustments\", null, error);\r\n        }\r\n    }\r\n\r\n    public setMaterialAdjustments(materialAdjustments: MaterialAdjustments): void {\r\n        try {\r\n            this._syncStorage.setSynchronous<MaterialAdjustments>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_MATERIAL_ADJUSTMENTS, materialAdjustments);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"setMaterialAdjustments\", \"Setting material adjustments\", null, error);\r\n        }\r\n    }\r\n\r\n    public getMaterialSearchResults(): MaterialSearchResults {\r\n        try {\r\n            return this._syncStorage.getSynchronous<MaterialSearchResults>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_MATERIAL_SEARCHRESULTS);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"getMaterialSearchResults\", \"Getting search results\", null, error);\r\n        }\r\n    }\r\n\r\n    public setMaterialSearchResults(materialSearchResults: MaterialSearchResults): void {\r\n        try {\r\n            return this._syncStorage.setSynchronous<MaterialSearchResults>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_MATERIAL_SEARCHRESULTS, materialSearchResults);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"setMaterialSearchResults\", \"Setting search results\", null, error);\r\n        }\r\n    }\r\n\r\n    public getLastKnownLocation(): GeoPosition {\r\n        try {\r\n            return this._syncStorage.getSynchronous<GeoPosition>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_LAST_KNOWN_LOCATION);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"getLastKnownLocation\", \"Getting last known location\", null, error);\r\n        }\r\n    }\r\n\r\n    public setLastKnownLocation(location: GeoPosition): void {\r\n        try {\r\n            return this._syncStorage.setSynchronous<GeoPosition>(StorageConstants.HEMA_STORAGE_CONTAINER, StorageConstants.HEMA_STORAGE_LAST_KNOWN_LOCATION, location);\r\n        } catch (error) {\r\n            throw new BusinessException(this, \"setLastKnownLocation\", \"Setting last known location\", null, error);\r\n        }\r\n    }    \r\n}\r\n"],"sourceRoot":"../../.."}