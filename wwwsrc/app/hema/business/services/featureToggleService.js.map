{"version":3,"sources":["hema/business/services/featureToggleService.ts"],"names":[],"mappings":"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","file":"featureToggleService.js","sourcesContent":["import {IFeatureToggleService} from \"./interfaces/IFeatureToggleService\";\nimport {inject} from \"aurelia-dependency-injection\";\nimport {IMaterial} from \"../../api/models/vanStock/IMaterial\";\nimport {ResilientService} from \"../../../common/resilience/services/resilientService\";\nimport {ConfigurationService} from \"../../../common/core/services/configurationService\";\nimport {StorageService} from \"./storageService\";\nimport {EventAggregator} from \"aurelia-event-aggregator\";\nimport {ResilientHttpClientFactory} from \"../../../common/resilience/services/resilientHttpClientFactory\";\nimport {WuaNetworkDiagnostics} from \"../../../common/core/wuaNetworkDiagnostics\";\nimport {IConfigurationService} from \"../../../common/core/services/IConfigurationService\";\nimport {IStorageService} from \"./interfaces/IStorageService\";\nimport {IHttpHeaderProvider} from \"../../../common/resilience/services/interfaces/IHttpHeaderProvider\";\nimport {ApiException} from \"../../../common/resilience/apiException\";\nimport {BusinessException} from \"../models/businessException\";\nimport {VanStockHeaderProvider} from \"../../api/services/vanStockHeaderProvider\";\nimport * as Logging from \"aurelia-logging\";\n\n@inject(ConfigurationService, StorageService, EventAggregator, VanStockHeaderProvider, ResilientHttpClientFactory, WuaNetworkDiagnostics)\nexport class FeatureToggleService extends ResilientService implements IFeatureToggleService {\n\n    private _isAssetTrackingEnabled: boolean;\n    private _initialised: boolean;\n\n    private _storage: IStorageService;\n    private _log: Logging.Logger;\n\n    constructor(configurationService: IConfigurationService, storageService: IStorageService,\n                eventAggregator: EventAggregator, headerProvider: IHttpHeaderProvider, resilientClientFactory: ResilientHttpClientFactory,\n                wuaNetworkDiagnostics: WuaNetworkDiagnostics) {\n\n        super(configurationService, \"assetTrackingEndpoint\", storageService, eventAggregator, headerProvider, resilientClientFactory, wuaNetworkDiagnostics);\n\n        this._initialised = false;\n        this._storage = storageService;\n        this._log = Logging.getLogger(\"featureToggleService\");\n    }\n\n    public async initialise(engineerId: string): Promise<void> {\n\n        // prevent duplicate calls of initialise, developer should only call this once\n\n        if (this._initialised) {\n            this._log.warn(\"initialise should only be called once\");\n            return Promise.resolve();\n        }\n\n        if (engineerId === undefined || engineerId === null || engineerId === \"\") {\n            throw new BusinessException(this, \"initialise\", \"empty engineer id\", null, null);\n        }\n\n        this._isAssetTrackingEnabled = false;\n        this._initialised = true;\n\n        try {\n            // check if van stock data exists, undefined => not in local storage\n            const items = await this._storage.getMaterials();\n\n            if (items) {\n                this._log.info(\"asset tracking materials already in local storage, asset tracking enabled!\");\n                this._isAssetTrackingEnabled = true;\n                return Promise.resolve();\n            }\n\n            // call api\n\n            const data = await this.getData<IMaterial[]>(\"materials\", {engineerId: this.convertEngineerId(engineerId)});\n            if (data) {\n                this._log.info(\"asset tracking materials endpoint returned materials, asset tracking enabled!\");\n                this._isAssetTrackingEnabled = true;\n            }\n        } catch (error) {\n\n            this._log.warn(\"asset tracking materials endpoint failed\");\n            //  no local materials data, check response of api call to get materials, 404 status implies not asset tracked\n\n            if (error && error instanceof ApiException) {\n                let statusCode = (error as ApiException).httpStatusCode;\n\n                if (!!statusCode && statusCode.indexOf(\"404\") >= 0) {\n                    this._log.warn(\"materials endpoint returned 404, asset tracking disabled\");\n                } else {\n                    this._log.error(\"materials endpoint error\", error);\n                }\n            } else {\n                this._log.error(\"problem getting materials\", error);\n            }\n        }\n    }\n\n    public isAssetTrackingEnabled(): boolean {\n        if (!this._initialised) {\n            throw new BusinessException(this, \"isAssetTrackingEnabled\", \"Initialisation has not been ran, call initialise method before calling isAssetTrackingEnabled\", null, null);\n        }\n\n        return this._isAssetTrackingEnabled;\n    }\n\n    private convertEngineerId(input: string): string {\n        // return parseInt((input || \"\").replace(/\\D/g, \"\"), 10);\n        return input;\n    }\n}\n"],"sourceRoot":"../../.."}