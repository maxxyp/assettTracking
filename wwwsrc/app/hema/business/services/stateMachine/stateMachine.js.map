{"version":3,"sources":["hema/business/services/stateMachine/stateMachine.ts"],"names":[],"mappings":"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","file":"stateMachine.js","sourcesContent":["import {State} from \"./state\";\nimport {BusinessException} from \"../../models/businessException\";\n\nexport class StateMachine<T> {\n    private _states: State<T>[];\n\n    constructor(states: State<T>[]) {\n        this._states = states;\n\n        for (let i = 0; i < states.length; i++) {\n            states[i].targetStates = [];\n\n            if (states[i].targetValues) {\n                for (let j = 0; j < states[i].targetValues.length; j++) {\n                    states[i].targetStates.push(this.lookupState(states[i].targetValues[j]));\n                }\n            }\n        }\n    }\n\n    public getTargetStates(state: T): State<T>[] {\n        let targetStates: State<T>[] = [];\n\n        let currentState: State<T> = this.lookupState(state);\n\n        if (currentState && currentState.targetStates) {\n            for (let i = 0; i < currentState.targetStates.length; i++) {\n                targetStates.push(currentState.targetStates[i]);\n            }\n        }\n\n        return targetStates;\n    }\n\n    public trySetState(state: T, targetState: T): boolean {\n        let stateChanged: boolean = false;\n\n        let currentState: State<T> = this.lookupState(state);\n        if (currentState) {\n            /* don't do anything if we are already in that state */\n            if (currentState.value !== targetState) {\n                if (currentState.targetStates && currentState.targetStates.length) {\n                    let idx = currentState.targetValues.indexOf(targetState);\n                    if (idx >= 0) {\n                        stateChanged = true;\n                        currentState = currentState.targetStates[idx];\n                    } else {\n                        throw new BusinessException(this, \"setState.noTarget\",\n                            \"Set State failed: requested state '{0}' is not a target state of current state '{1}'\", [targetState, currentState.name], null);\n                    }\n                } else {\n                    throw new BusinessException(this, \"setState.noTargets\", \"Set State failed: state '{0}' has no target states\", [currentState.name], null);\n                }\n            }\n        } else {\n            throw new BusinessException(this, \"setState.noNull\", \"Set State failed: can not transition from null state\", null, null);\n        }\n\n        return stateChanged;\n    }\n\n    public lookupState(value: T): State<T> {\n        for (let i = 0; i < this._states.length; i++) {\n            if (this._states[i].value === value) {\n                return this._states[i];\n            }\n        }\n\n        throw new BusinessException(this, \"lookupState\", \"Lookup State failed for state '{0}'\", [value], null);\n    }\n}\n"],"sourceRoot":"../../../.."}