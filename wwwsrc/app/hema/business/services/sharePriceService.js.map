{"version":3,"sources":["hema/business/services/sharePriceService.ts"],"names":[],"mappings":";;;;;;;;;;;;IAUA;QAII,2BAAY,iBAAwC;YAChD,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,CAAC;QAChD,CAAC;QAEM,yCAAa,GAApB;YAAA,iBAGC;YAFG,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE;iBACzC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,KAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAApB,CAAoB,CAAC,CAAC;QAC3C,CAAC;QAEO,sCAAU,GAAjB,UAAkB,SAAoB;YACnC,IAAI,MAAM,GAAG,IAAI,eAAM,EAAE,CAAC;YAC1B,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACzC,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC;YAC9B,MAAM,CAAC,gBAAgB,GAAG,SAAS,CAAC,EAAE,CAAC;YACvC,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC,MAAM,CAAC;QAClB,CAAC;QAtBQ,iBAAiB;YAD7B,0BAAM,CAAC,qCAAoB,CAAC;;WAChB,iBAAiB,CAuB7B;QAAD,wBAAC;KAvBD,AAuBC,IAAA;IAvBY,8CAAiB","file":"sharePriceService.js","sourcesContent":["import {inject} from \"aurelia-framework\";\n\nimport {ISharePriceService} from \"./interfaces/ISharePriceService\";\nimport {Ticker} from \"../models/sharePrice/ticker\"; \n\nimport {ISharePriceService as IApiSharePriceService} from \"../../api/services/interfaces/ISharePriceService\";\nimport {SharePriceService as ApiSharePriceService} from \"../../api/services/sharePriceService\";\nimport {ITicker as ApiTicker} from \"../../api/models/sharePrice/ITicker\";\n\n@inject(ApiSharePriceService)\nexport class SharePriceService implements ISharePriceService {\n\n    private _sharePriceService: IApiSharePriceService;\n\n    constructor(sharePriceService: IApiSharePriceService) {\n        this._sharePriceService = sharePriceService;\n    }\n\n    public getSharePrice(): Promise<Ticker> {\n        return this._sharePriceService.getSharePrice()\n            .then(res => this.mapToModel(res));\n    }\n\n     public mapToModel(apiTicker: ApiTicker): Ticker {\n        let ticker = new Ticker();\n        ticker.change = apiTicker.c;\n        ticker.date = new Date(apiTicker.lt_dts);\n        ticker.exchange = apiTicker.e;\n        ticker.percentageChange = apiTicker.cp;\n        ticker.price = apiTicker.l;\n        ticker.symbol = apiTicker.t;\n        return ticker;\n    }\n}\n"],"sourceRoot":"../../.."}