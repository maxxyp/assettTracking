{"version":3,"sources":["hema/business/services/interfaces/ITaskService.ts"],"names":[],"mappings":"","file":"ITaskService.js","sourcesContent":["import { Task as TaskBusinessModel } from \"../../models/task\";\nimport { TaskSummaryViewModel } from \"../../../presentation/models/taskSummaryViewModel\";\nimport { Job } from \"../../models/job\";\n\nexport interface ITaskService {\n    getTasks(jobId: string): Promise<TaskBusinessModel[]>;\n    getTasksAndCompletedTasks(jobId: string): Promise<TaskBusinessModel[]>;\n    getAllTasksEverAtProperty(jobId: string): Promise<TaskBusinessModel[]>;\n    getTaskItem(jobId: string, taskId: string): Promise<TaskBusinessModel>;\n    saveTask(jobId: string, task: TaskBusinessModel): Promise<void>;\n    updateTaskAppliance(jobId: string, taskId: string, applianceType: string, applianceId: string, actionType: string, chargeType: string): Promise<TaskBusinessModel>;\n    deleteTask(jobId: string, taskId: string): Promise<void>;\n    createTask(jobId: string, task: TaskBusinessModel): Promise<void>;\n    updateTaskTimes(jobId: string, taskTimes: TaskSummaryViewModel[]): Promise<void>;\n\n    buildReinstatedTaskTimes(\n        currentTask: { startTime: string, endTime: string, orderNo: number, workDuration: number, chargeableTime: number},\n        jobId: string): Promise<{ startTime: string, endTime: string, workDuration: number, chargeableTime: number}>;\n\n    rebuildTaskTimes(job: Job): Promise<void>;\n}\n"],"sourceRoot":"../../../.."}