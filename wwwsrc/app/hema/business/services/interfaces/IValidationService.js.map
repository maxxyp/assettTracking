{"version":3,"sources":["hema/business/services/interfaces/IValidationService.ts"],"names":[],"mappings":"","file":"IValidationService.js","sourcesContent":["import {ValidationController} from \"../validation/validationController\";\nimport {ValidationCombinedResult} from \"../validation/validationCombinedResult\";\nimport {IDynamicRule} from \"../validation/IDynamicRule\";\n\nexport interface IValidationService {\n    build(subject: any, key: string, dynamicRules: IDynamicRule[]): Promise<ValidationController>;\n\n    addDynamicRule(validationController: ValidationController, dynamicRule: IDynamicRule): void;\n    removeDynamicRule(validationController: ValidationController, propertyName: string): void;\n\n    validate(validationController: ValidationController, subject: any, propertyName?: string) : Promise<ValidationCombinedResult>;\n}\n"],"sourceRoot":"../../../.."}