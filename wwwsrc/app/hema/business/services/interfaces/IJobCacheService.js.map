{"version":3,"sources":["hema/business/services/interfaces/IJobCacheService.ts"],"names":[],"mappings":"","file":"IJobCacheService.js","sourcesContent":["import {Job} from \"../../models/job\";\nimport { JobApiFailure } from \"../../models/jobApiFailure\";\nimport { JobPartsCollection } from \"../../models/jobPartsCollection\";\n\nexport interface IJobCacheService {\n    getJobsToDo(): Promise<Job[]>;\n    clearJobsToDo(): Promise<void>;\n\n    getJob(jobId: string) : Promise<Job>;\n    setJob(job: Job) : Promise<void>;\n\n    getWorkListJobs(): Promise<Job[]>;\n    setWorkListJobs(jobs: Job[]): Promise<void>;\n    clearWorkListJobs(): Promise<void>;\n    getPartsCollections(): Promise<JobPartsCollection[]>;\n    setPartsCollections(partsCollections: JobPartsCollection[]): Promise<void>;\n\n    getWorkListJobApiFailures(): Promise<JobApiFailure[]>;\n    setWorkListJobApiFailures(jobApiFailures: JobApiFailure[]): Promise<void>;\n    existsALiveJobNotInWorklist(): Promise<boolean>;\n}\n"],"sourceRoot":"../../../.."}