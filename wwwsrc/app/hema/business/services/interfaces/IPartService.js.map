{"version":3,"sources":["hema/business/services/interfaces/IPartService.ts"],"names":[],"mappings":"","file":"IPartService.js","sourcesContent":["\nimport {Guid} from \"../../../../common/core/guid\";\nimport {PartsBasket as PartsBasketBusinessModel} from \"../../models/partsBasket\";\nimport {Part} from \"../../models/part\";\nimport {WarrantyEstimate} from \"../../models/warrantyEstimate\";\nimport {PartsToday} from \"../../models/partsToday\";\nimport {PartNotUsedReturn} from \"../../models/partNotUsedReturn\";\nimport {PartWarrantyReturn} from \"../../models/partWarrantyReturn\";\nimport {DataState} from \"../../models/dataState\";\nimport {PartsBasketViewModel} from \"../../../presentation/models/partsBasketViewModel\";\nimport { Job } from \"../../models/job\";\n\nexport interface IPartService {\n    getPartsBasket(jobId: string): Promise<PartsBasketBusinessModel>;\n    savePartsBasket(jobId: string, partsBasket: PartsBasketViewModel): Promise<void>;\n    getFittedParts(jobId: string): Promise<Part[]>; // todo can we rename this to previouslyOrderedParts\n    getTodaysParts(jobId: string): Promise<PartsToday>;\n    saveTodaysPartsReturns(jobId: string, dataState: DataState, partReturns: {partId: Guid, warrantyReturn: PartWarrantyReturn, notusedReturn: PartNotUsedReturn}[]): Promise<void>;\n    getPartWarrantyEstimate(jobId: string, stockRefId: string, taskId: string) : Promise<WarrantyEstimate>;\n    getMainPartForTask(jobId: string, taskId: string): Promise<Part>;\n    clearMainPartForTask(jobId: string, taskId: string): Promise<void>;\n    setPartsRequiredForTask(jobId: string): Promise<boolean>;\n    getPartStatusValidity(part: Part, job: Job): Promise<boolean>;\n    deletePartsAssociatedWithTask(jobId: string, taskId: string): Promise<void>;\n}\n"],"sourceRoot":"../../../.."}