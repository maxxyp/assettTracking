{"version":3,"sources":["hema/business/services/interfaces/IStorageService.ts"],"names":[],"mappings":"","file":"IStorageService.js","sourcesContent":["import {Job} from \"../../models/job\";\r\nimport {JobApiFailure} from \"../../models/jobApiFailure\";\r\nimport {Message} from \"../../models/message\";\r\nimport {Engineer} from \"../../models/engineer\";\r\nimport {ApplicationSettings} from \"../../../business/models/applicationSettings\";\r\nimport { ConsumablesBasket as ConsumablePartsBasket } from \"../../../business/models/consumablesBasket\";\r\nimport { FavouriteList } from \"../../models/favouriteList\";\r\nimport { RetryPayload } from \"../../../../common/resilience/models/retryPayload\";\r\nimport { JobPartsCollection } from \"../../models/jobPartsCollection\";\r\nimport { MaterialAdjustments } from \"../../models/materialAdjustments\";\r\nimport { Materials } from \"../../models/materials\";\r\nimport { MaterialSearchResults } from \"../../models/materialSearchResults\";\r\nimport { MaterialHighValueTools } from \"../../models/materialHighValueTools\";\r\nimport { GeoPosition } from \"../../../../common/geo/models/geoPosition\";\r\n\r\nexport interface IStorageService {\r\n    getWorkListJobs(): Promise<Job[]>;\r\n    setWorkListJobs(jobs: Job[]): Promise<void>;\r\n\r\n    getPartsCollections(): Promise<JobPartsCollection[]>;\r\n    setPartsCollections(partsCollections: JobPartsCollection[]): Promise<void>;\r\n\r\n    getWorkListJobApiFailures(): Promise<JobApiFailure[]>;\r\n    setWorkListJobApiFailures(jobApiFailures: JobApiFailure[]): Promise<void>;\r\n\r\n    getJobsToDo(): Promise<Job[]>;\r\n    setJobsToDo(jobs: Job[]): Promise<void>;\r\n\r\n    getMessages(): Promise<Message[]>;\r\n    setMessages(messages: Message[]): Promise<void>;\r\n\r\n    getEngineer(): Promise<Engineer>;\r\n    setEngineer(engineer: Engineer): Promise<void>;\r\n    deleteEngineer(): Promise<void>;\r\n\r\n    getUserPatch(): Promise<string>;\r\n    setUserPatch(userPatch: string): Promise<void>;\r\n\r\n    getUserRegion(): Promise<string>;\r\n    setUserRegion(region: string): Promise<void>;\r\n\r\n    getWorkingSector(): Promise<string>;\r\n    setWorkingSector(workingSector: string): Promise<void>;\r\n\r\n    getFavouritesList(): Promise<FavouriteList>;\r\n    setFavouritesList(favouriteList: FavouriteList): Promise<void>;\r\n\r\n    getConsumablePartsBasket(): Promise<ConsumablePartsBasket>;\r\n    setConsumablePartsBasket(basket: ConsumablePartsBasket): Promise<void>;\r\n\r\n    getConsumablesRead(): Promise<boolean>;\r\n    setConsumablesRead(read: boolean): Promise<void>;\r\n\r\n    getAppSettings(): Promise<ApplicationSettings>;\r\n    setAppSettings(appSettings: ApplicationSettings): Promise<void>;\r\n\r\n    getSimulationEngineer(): Promise<string>;\r\n    setSimulationEngineer(engineerId: string): Promise<void>;\r\n\r\n    getLastSuccessfulSyncTime() : Promise<number>;\r\n    setLastSuccessfulSyncTime(syncTime: number): Promise<void>;\r\n\r\n    userSettingsComplete(): Promise<boolean>;\r\n\r\n    getResilienceRetryPayloads(containerName: string): RetryPayload[];\r\n    setResilienceRetryPayloads(containerName: string, retryPayloads: RetryPayload[]) : void;\r\n\r\n    getFeatureToggleList(): Promise<{[featureName: string]: boolean}>;\r\n    setFeatureToggleList(featureToggleList: {[featureName: string]: boolean}): Promise<void>;\r\n\r\n    getMaterialHighValueTools(): MaterialHighValueTools;\r\n    setMaterialHighValueTools(materialHighValueTools: MaterialHighValueTools): void;\r\n\r\n    getMaterials(): Materials;\r\n    setMaterials(materials: Materials): void;\r\n\r\n    getMaterialAdjustments(): MaterialAdjustments;\r\n    setMaterialAdjustments(materialAdjustments: MaterialAdjustments): void;\r\n\r\n    getMaterialSearchResults(): MaterialSearchResults;\r\n    setMaterialSearchResults(materialSearchResults: MaterialSearchResults): void;\r\n\r\n    getLastKnownLocation(): GeoPosition;\r\n    setLastKnownLocation(location: GeoPosition): void;\r\n}\r\n"],"sourceRoot":"../../../.."}