{"version":3,"sources":["hema/business/services/favouriteService.ts"],"names":[],"mappings":"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","file":"favouriteService.js","sourcesContent":["/// <reference path=\"../../../../typings/app.d.ts\" />\nimport { inject } from \"aurelia-framework\";\nimport { FavouriteList } from \"../models/favouriteList\";\nimport { Part } from \"../models/part\";\nimport { ConsumablePart } from \"../models/consumablePart\";\nimport { IFavouriteService } from \"./interfaces/IFavouriteService\";\nimport { IStorageService } from \"./interfaces/IStorageService\";\nimport { StorageService } from \"./storageService\";\nimport { IConsumableService } from \"../../business/services/interfaces/IConsumableService\";\nimport { ConsumableService } from \"../../business/services/consumableService\";\nimport { IPartService } from \"./interfaces/IPartService\";\nimport { PartService } from \"./partService\";\nimport { IJobService } from \"./interfaces/IJobService\";\nimport { JobService } from \"./jobService\";\nimport { IBusinessRuleService } from \"./interfaces/IBusinessRuleService\";\nimport { BusinessRuleService } from \"./businessRuleService\";\nimport { BusinessException } from \"../models/businessException\";\n\n// import * as bignumber from \"bignumber\";\n\n@inject(StorageService, JobService, ConsumableService, PartService, BusinessRuleService)\nexport class FavouriteService implements IFavouriteService {\n    public favouritesList: FavouriteList;\n\n    private _storageService: IStorageService;\n    private _jobService: IJobService;\n    private _consumablesService: IConsumableService;\n    private _partService: IPartService;\n    private _businessRuleService: IBusinessRuleService;\n\n    constructor(storageService: IStorageService, jobService: IJobService,\n                consumableService: IConsumableService,\n                partService: IPartService,\n                businessRuleService: IBusinessRuleService) {\n        this._storageService = storageService;\n        this._jobService = jobService;\n        this._consumablesService = consumableService;\n        this._partService = partService;\n        this._businessRuleService = businessRuleService;\n        // todo promise in contructor??\n        this.getFavouritesList().then(favouriteList => {\n            this.favouritesList = favouriteList;\n        });\n    }\n\n    public addFavouriteConsumablePart(favouriteItem: ConsumablePart): Promise<void> {\n        return this.addFavourite(favouriteItem, \"ConsumablePart\");\n    }\n\n    public addFavouritePart(favouriteItem: Part): Promise<void> {\n        return this.addFavourite(favouriteItem, \"Part\");\n    }\n\n    public removeFavourite(index: number): Promise<void> {\n        this.favouritesList.favourites.splice(index, 1);\n        return this.saveFavouritesList();\n    }\n\n    public reOrder(favouriteItem: Part | ConsumablePart, isPart: boolean): Promise<void> {\n        if (!isPart) {\n            return this._consumablesService.addConsumableToBasket(<ConsumablePart>favouriteItem).then(() => Promise.resolve());\n        }\n\n        return this._businessRuleService.getQueryableRuleGroup(\"partsBasket\")\n            .then(ruleGroup => {\n                if (ruleGroup) {\n                    let partOrderStatus = ruleGroup.getBusinessRule<string>(\"partOrderStatus\");\n                    if (partOrderStatus) {\n                        return this._jobService.getActiveJobId()\n                            .then(jobId => {\n                                return this._partService.getPartsBasket(jobId)\n                                    .then(basket => {\n                                        (<Part>favouriteItem).partOrderStatus = partOrderStatus;\n                                        (<Part>favouriteItem).isMainPart = false;\n                                        (<Part>favouriteItem).isFavourite = true;\n                                        basket.partsToOrder.push(<Part>favouriteItem);\n                                        return this._partService.savePartsBasket(jobId, basket)\n                                            .then(() => this._partService.setPartsRequiredForTask(jobId))\n                                            .thenReturn();\n                                    });\n                            });\n                    } else {\n                        throw new BusinessException(this, \"FavouriteService.reOrder\", \"business rule group missing\", null, null);\n                    }\n                } else {\n                    throw new BusinessException(this, \"FavouriteService.reOrder\", \"business rule missing\", null, null);\n                }\n            });\n    }\n\n    public getFavouritesList(): Promise<FavouriteList> {\n        return this._storageService.getFavouritesList().then((favouritesList) => {\n            if (favouritesList) {\n\n                // hydrate\n                const newFavourites = favouritesList.favourites.map(f => {\n                    if (!f || !Object.keys(f).some(p => p === \"price\")) {\n                        return f;\n                    }\n                    return Part.fromJson(f);\n                });\n\n                return this.favouritesList = {...favouritesList, favourites: newFavourites};\n            } else {\n                return new FavouriteList();\n            }\n        });\n    }\n\n    private addFavourite(favouriteItem: Part | ConsumablePart, type: string): Promise<void> {\n        return this.getFavouritesList().then(favouriteList => {\n            let faveItem: Part = JSON.parse(JSON.stringify(favouriteItem));\n            let foundPart = favouriteList.favourites.findIndex(favePart => favePart.description === faveItem.description);\n            if (foundPart === -1) {\n                faveItem.quantity = 1;\n                if (type === \"Part\") {\n                    // clear down any warranty information\n                    if (faveItem.warrantyReturn) {\n                        faveItem.warrantyReturn.isWarrantyReturn = undefined;\n                        faveItem.warrantyReturn.quantityToClaimOrReturn = 1;\n                        faveItem.warrantyReturn.reasonForClaim = undefined;\n                        faveItem.warrantyReturn.removedPartStockReferenceId = undefined;\n                    }\n                    faveItem.isMainPart = undefined;\n                    faveItem.partOrderStatus = undefined;\n                    faveItem.taskId = undefined;\n                }\n                this.favouritesList.favourites.push(faveItem);\n                return this.saveFavouritesList();\n            } else {\n                return Promise.resolve();\n            }\n        });\n    }\n\n    private saveFavouritesList(): Promise<void> {\n        return this._storageService.setFavouritesList(this.favouritesList);\n    }\n\n}\n"],"sourceRoot":"../../.."}