{"version":3,"sources":["hema/business/factories/addressFactory.ts"],"names":[],"mappings":";;;IAMA;QAAA;QAyBA,CAAC;QAxBU,mDAA0B,GAAjC,UAAkC,eAAgC;YAC9D,IAAI,oBAAoB,GAAyB,IAAI,iBAAoB,EAAE,CAAC;YAE5E,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;gBAClB,oBAAoB,CAAC,YAAY,GAAG,eAAe,CAAC,YAAY,CAAC;gBACjE,oBAAoB,CAAC,WAAW,GAAG,eAAe,CAAC,WAAW,CAAC;gBAC/D,oBAAoB,CAAC,UAAU,GAAG,eAAe,CAAC,UAAU,CAAC;gBAC7D,oBAAoB,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;gBACjD,oBAAoB,CAAC,IAAI,GAAG,eAAe,CAAC,IAAI,CAAC;gBACjD,oBAAoB,CAAC,MAAM,GAAG,eAAe,CAAC,MAAM,CAAC;gBACrD,oBAAoB,CAAC,WAAW,GAAG,eAAe,CAAC,WAAW,CAAC;gBAC/D,oBAAoB,CAAC,UAAU,GAAG,eAAe,CAAC,UAAU,CAAC;gBAC7D,EAAE,CAAC,CAAC,eAAe,CAAC,UAAU,IAAI,oBAAoB,CAAC,WAAW,CAAC,CAAC,CAAC;oBACjE,oBAAoB,CAAC,QAAQ,GAAG,eAAe,CAAC,WAAW,GAAG,GAAG,GAAG,eAAe,CAAC,UAAU,CAAC;gBACnG,CAAC;gBACD,oBAAoB,CAAC,OAAO,GAAG,eAAe,CAAC,OAAO,CAAC;YAC3D,CAAC;YAED,MAAM,CAAC,oBAAoB,CAAC;QAChC,CAAC;QAEM,8CAAqB,GAA5B,UAA6B,oBAA0C;YACnE,MAAM,CAAwB,EAAE,CAAC;QACrC,CAAC;QACL,qBAAC;IAAD,CAzBA,AAyBC,IAAA;IAzBY,wCAAc","file":"addressFactory.js","sourcesContent":["import {IAddressFactory} from \"./interfaces/IAddressFactory\";\r\n\r\nimport {IAddress as AddressApiModel} from \"../../api/models/fft/jobs/IAddress\";\r\nimport {Address as AddressBusinessModel} from \"../models/address\";\r\nimport {IAddress as AddressUpdateApiModel} from \"../../api/models/fft/jobs/jobupdate/IAddress\";\r\n\r\nexport class AddressFactory implements IAddressFactory {\r\n    public createAddressBusinessModel(addressApiModel: AddressApiModel): AddressBusinessModel {\r\n        let addressBusinessModel: AddressBusinessModel = new AddressBusinessModel();\r\n\r\n        if (addressApiModel) {\r\n            addressBusinessModel.premisesName = addressApiModel.premisesName;\r\n            addressBusinessModel.houseNumber = addressApiModel.houseNumber;\r\n            addressBusinessModel.flatNumber = addressApiModel.flatNumber;\r\n            addressBusinessModel.line = addressApiModel.line;\r\n            addressBusinessModel.town = addressApiModel.town;\r\n            addressBusinessModel.county = addressApiModel.county;\r\n            addressBusinessModel.postCodeOut = addressApiModel.postCodeOut;\r\n            addressBusinessModel.postCodeIn = addressApiModel.postCodeIn;\r\n            if (addressApiModel.postCodeIn && addressBusinessModel.postCodeOut) {\r\n                addressBusinessModel.postCode = addressApiModel.postCodeOut + \" \" + addressApiModel.postCodeIn;\r\n            }\r\n            addressBusinessModel.country = addressApiModel.country;\r\n        }\r\n\r\n        return addressBusinessModel;\r\n    }\r\n\r\n    public createAddressApiModel(addressBusinessModel: AddressBusinessModel): AddressUpdateApiModel {\r\n        return <AddressUpdateApiModel>{};\r\n    }\r\n}\r\n"],"sourceRoot":"../../.."}