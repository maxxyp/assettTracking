{"version":3,"sources":["hema/business/factories/propertySafetyFactory.ts"],"names":[],"mappings":"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","file":"propertySafetyFactory.js","sourcesContent":["import {IPropertySafetyFactory} from \"./interfaces/IPropertySafetyFactory\";\nimport {ISafetyDetail as SafetyDetailApiModel} from \"../../api/models/fft/jobs/ISafetyDetail\";\nimport {IUnsafeDetail as UnSafeDetailApiModel} from \"../../api/models/fft/jobs/IUnsafeDetail\";\nimport {PropertySafety as PropertySafetyBusinessModel} from \"../models/propertySafety\";\nimport {PreviousPropertySafetyDetail} from \"../models/previousPropertySafetyDetail\";\nimport {PropertyGasSafetyDetail} from \"../models/propertyGasSafetyDetail\";\nimport {PropertyElectricalSafetyDetail} from \"../models/propertyElectricalSafetyDetail\";\nimport {PropertyUnsafeDetail} from \"../models/propertyUnsafeDetail\";\nimport { PropertySafetyType } from \"../models/propertySafetyType\";\nimport {ISafety as SafetyDetailUpdateApiModel} from \"../../api/models/fft/jobs/jobupdate/ISafety\";\nimport {IUnsafeDetail as UnSafeDetailUpdateApiModel} from \"../../api/models/fft/jobs/jobupdate/IUnsafeDetail\";\nimport {ObjectHelper} from \"../../../common/core/objectHelper\";\nimport {CatalogConstants} from \"../services/constants/catalogConstants\";\n\nexport class PropertySafetyFactory implements IPropertySafetyFactory {\n\n    public createPropertySafetyBusinessModel(propertySafetyType: PropertySafetyType, safetyDetail: SafetyDetailApiModel, unsafeDetail: UnSafeDetailApiModel): PropertySafetyBusinessModel {\n        let propertySafety: PropertySafetyBusinessModel = new PropertySafetyBusinessModel();\n\n        propertySafety.propertyGasSafetyDetail = new PropertyGasSafetyDetail();\n        propertySafety.propertyElectricalSafetyDetail = new PropertyElectricalSafetyDetail();\n        propertySafety.propertyUnsafeDetail = new PropertyUnsafeDetail();\n\n        let hasUnsafeSituation = unsafeDetail && ObjectHelper.isObject(unsafeDetail) && ObjectHelper.hasKeys(unsafeDetail);\n\n        if (safetyDetail && hasUnsafeSituation) {\n\n            // previousPropertySafety information is only valid if there is an unsafe sitiuation.\n            // therefore only create previousPropertySafetyDetail if there is an unsafe situation\n            propertySafety.previousPropertySafetyDetail = new PreviousPropertySafetyDetail();\n\n            if (propertySafetyType === PropertySafetyType.gas) {\n                propertySafety.previousPropertySafetyDetail.lastVisitDate = safetyDetail.lastGasVisitDate;\n                propertySafety.previousPropertySafetyDetail.safetyNoticeNotLeftReason = safetyDetail.safetyNoticeNotLeftReason;\n            } else if (propertySafetyType === PropertySafetyType.electrical) {\n                propertySafety.previousPropertySafetyDetail.lastVisitDate = safetyDetail.lastElectricVisitDate;\n            } else {\n                // if the job comes down as an \"other\" job, try gas then electric dates\n                propertySafety.previousPropertySafetyDetail.lastVisitDate = safetyDetail.lastGasVisitDate || safetyDetail.lastElectricVisitDate;\n            }\n\n            propertySafety.previousPropertySafetyDetail.cappedOrTurnedOff = unsafeDetail.cappedOrTurnedOff;\n            propertySafety.previousPropertySafetyDetail.conditionAsLeft = unsafeDetail.conditionAsLeft;\n            propertySafety.previousPropertySafetyDetail.labelAttachedOrRemoved = unsafeDetail.labelAttachedOrRemoved;\n            propertySafety.previousPropertySafetyDetail.letterLeft = unsafeDetail.letterLeft;\n            propertySafety.previousPropertySafetyDetail.ownedByCustomer = unsafeDetail.ownedByCustomer;\n            propertySafety.previousPropertySafetyDetail.reasons = unsafeDetail.reasons;\n            propertySafety.previousPropertySafetyDetail.report = unsafeDetail.report;\n            propertySafety.previousPropertySafetyDetail.ownersNameAndDetails = unsafeDetail.ownersNameAndDetails;\n            propertySafety.previousPropertySafetyDetail.signatureObtained = unsafeDetail.signatureObtained;\n\n        }\n\n        return propertySafety;\n    }\n\n    public createPropertySafetyApiModel(propertySafetyType: PropertySafetyType, propertySafetyBusinessModel: PropertySafetyBusinessModel, hasRisks: boolean,\n            isjobPartLJReportable: boolean): SafetyDetailUpdateApiModel {\n        let safetyDetailUpdateApiModel: SafetyDetailUpdateApiModel = <SafetyDetailUpdateApiModel>{};\n        if (propertySafetyBusinessModel) {\n            if (propertySafetyType === PropertySafetyType.electrical) {\n                if (propertySafetyBusinessModel.propertyElectricalSafetyDetail) {\n                    safetyDetailUpdateApiModel.electricalELIReading = propertySafetyBusinessModel.propertyElectricalSafetyDetail.noEliReadings ?\n                        undefined : propertySafetyBusinessModel.propertyElectricalSafetyDetail.eliReading;\n                    safetyDetailUpdateApiModel.eliReason = propertySafetyBusinessModel.propertyElectricalSafetyDetail.noEliReadings ?\n                        propertySafetyBusinessModel.propertyElectricalSafetyDetail.eliReadingReason : undefined;\n                    safetyDetailUpdateApiModel.consumerUnitOrFuseBoxSatisfactory = propertySafetyBusinessModel.propertyElectricalSafetyDetail.consumerUnitSatisfactory;\n                    safetyDetailUpdateApiModel.electricalSystemType = propertySafetyBusinessModel.propertyElectricalSafetyDetail.systemType;\n                    safetyDetailUpdateApiModel.rcdPresent = propertySafetyBusinessModel.propertyElectricalSafetyDetail.rcdPresent\n                        ? propertySafetyBusinessModel.propertyElectricalSafetyDetail.rcdPresent === \"Y\"\n                        : undefined;\n                    safetyDetailUpdateApiModel.eliSafeAccordingToTheTableInTops = propertySafetyBusinessModel.propertyElectricalSafetyDetail.eliSafeAccordingToTops;\n                }\n            } else if (propertySafetyType === PropertySafetyType.gas) {\n                if (propertySafetyBusinessModel.propertyGasSafetyDetail) {\n\n                    safetyDetailUpdateApiModel.gasELIReading = propertySafetyBusinessModel.propertyGasSafetyDetail.eliReading === CatalogConstants.SAFETY_READING_CAT_NO_READING_TAKEN\n                        ? undefined\n                        : propertySafetyBusinessModel.propertyGasSafetyDetail.eliReading;\n\n                    safetyDetailUpdateApiModel.eliReason = propertySafetyBusinessModel.propertyGasSafetyDetail.eliReadingReason;\n\n                    safetyDetailUpdateApiModel.safetyNoticeNotLeftReason = propertySafetyBusinessModel.propertyGasSafetyDetail.safetyAdviseNoticeLeft ?\n                        propertySafetyBusinessModel.propertyGasSafetyDetail.safetyAdviseNoticeLeftReason : \"\";\n                    safetyDetailUpdateApiModel.gasInstallationTightnessTestDone = propertySafetyBusinessModel.propertyGasSafetyDetail.gasInstallationTightnessTestDone;\n                    safetyDetailUpdateApiModel.pressureDrop = propertySafetyBusinessModel.propertyGasSafetyDetail.gasInstallationTightnessTestDone ?\n                        propertySafetyBusinessModel.propertyGasSafetyDetail.pressureDrop : undefined;\n                    safetyDetailUpdateApiModel.gasMeterInstallationSafe = propertySafetyBusinessModel.propertyGasSafetyDetail.gasMeterInstallationSatisfactory;\n                }\n            }\n            safetyDetailUpdateApiModel.jobPartLJReportable = isjobPartLJReportable;\n        }\n\n        safetyDetailUpdateApiModel.riskIdentifiedAtProperty = !!hasRisks;\n\n        return safetyDetailUpdateApiModel;\n    }\n\n    public createPropertyUnsafetyApiModel(propertySafetyType: PropertySafetyType, propertySafetyBusinessModel: PropertySafetyBusinessModel): UnSafeDetailUpdateApiModel {\n        let unSafeDetailUpdateApiModel: UnSafeDetailUpdateApiModel = <UnSafeDetailUpdateApiModel>{};\n\n        if (propertySafetyBusinessModel && propertySafetyBusinessModel.propertyUnsafeDetail) {\n            if (propertySafetyType === PropertySafetyType.electrical || propertySafetyType === PropertySafetyType.gas) {\n                unSafeDetailUpdateApiModel.report = propertySafetyBusinessModel.propertyUnsafeDetail.report;\n                unSafeDetailUpdateApiModel.conditionAsLeft = propertySafetyBusinessModel.propertyUnsafeDetail.conditionAsLeft;\n                unSafeDetailUpdateApiModel.labelAttachedOrRemoved = propertySafetyBusinessModel.propertyUnsafeDetail.labelAttachedRemoved;\n                unSafeDetailUpdateApiModel.cappedOrTurnedOff = propertySafetyBusinessModel.propertyUnsafeDetail.cappedTurnedOff;\n                unSafeDetailUpdateApiModel.ownedByCustomer = propertySafetyBusinessModel.propertyUnsafeDetail.ownedByCustomer;\n                unSafeDetailUpdateApiModel.signatureObtained = propertySafetyBusinessModel.propertyUnsafeDetail.signatureObtained;\n                unSafeDetailUpdateApiModel.letterLeft = propertySafetyBusinessModel.propertyUnsafeDetail.letterLeft;\n                unSafeDetailUpdateApiModel.reasons = propertySafetyBusinessModel.propertyUnsafeDetail.reasons;\n\n                unSafeDetailUpdateApiModel.ownersNameAndDetails = undefined; // not used only for historical purposes only\n\n            }\n        }\n\n        return unSafeDetailUpdateApiModel;\n    }\n}\n"],"sourceRoot":"../../.."}