{"version":3,"sources":["main.ts"],"names":[],"mappings":"AAAA,4CAA4C;;;;IAW5C,mBAA0B,OAAgB;QACtC,qBAAqB,CAAC,OAAO,CAAC,CAAC;QAE/B,MAAM,CAAC,iBAAO,CAAC,SAAS,CAAC,OAAO,EAAE;YAC9B,mDAAmD;YACnD,wDAAwD;YACxD,8CAA8C;YAC9C,+CAA+C;YAC/C,mDAAmD;YACnD,+CAA+C;YAC/C,yCAAyC;YACzC,0CAA0C;YAC1C,4CAA4C;YAC5C,8DAA8D;YAC9D,gDAAgD;YAChD,0CAA0C;YAC1C,kCAAkC;YAClC,+BAA+B;YAC/B,0CAA0C;YAC1C,kCAAkC;YAClC,gCAAgC;YAChC,8BAA8B;YAC9B,+BAA+B;YAC/B,6BAA6B;YAC7B,gCAAgC;YAChC,+BAA+B;YAC/B,6BAA6B;YAC7B,8BAA8B;YAC9B,wCAAwC;YACxC,4BAA4B;YAC5B,+BAA+B;YAC/B,+BAA+B;YAC/B,gCAAgC;YAChC,+BAA+B;YAC/B,2BAA2B;YAC3B,8BAA8B;YAC9B,+BAA+B;YAC/B,oCAAoC;YACpC,6BAA6B;YAC7B,4BAA4B;YAC5B,+BAA+B;YAC/B,iCAAiC;YACjC,4CAA4C;YAC5C,mCAAmC;YACnC,qCAAqC;YACrC,0BAA0B;YAC1B,gCAAgC;YAChC,mDAAmD;YACnD,+CAA+C;YAC/C,yCAAyC;YACzC,kDAAkD;YAClD,uDAAuD;YACvD,kDAAkD;YAClD,0CAA0C;YAC1C,0CAA0C;YAC1C,4CAA4C;YAC5C,gDAAgD;YAChD,6CAA6C;YAC7C,kDAAkD;YAClD,mDAAmD;YACnD,0CAA0C;YAC1C,6CAA6C;YAC7C,iDAAiD;YACjD,2DAA2D;YAC3D,0DAA0D;YAC1D,yEAAyE;YACzE,gEAAgE;YAChE,8DAA8D;YAC9D,sCAAsC;YACtC,6DAA6D;SAChE,EAAE,IAAI,CAAC,CAAC;IACb,CAAC;IAvED,8BAuEC;IAED,+BAA+B,OAAgB;QAC3C,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,YAAY,EAAE;YAC9C,MAAM,CAAC,wCAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,+BAAc,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC,CAAC,CAAC,6BAAa,CAAC,CAAC,CAAC,uBAAU,CAAC,CAAC;QACvG,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,cAAM,OAAA,wCAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,iCAAe,CAAC,EAAvC,CAAuC,CAAC,CAAC;QACtG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,cAAM,OAAA,wCAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,mCAAgB,CAAC,EAAxC,CAAwC,CAAC,CAAC;IAC5G,CAAC","file":"main.js","sourcesContent":["/// <reference path=\"../typings/app.d.ts\" />\n\nimport {Aurelia} from \"aurelia-framework\";\nimport {Startup} from \"./common/core/startup\";\nimport {Container} from \"aurelia-dependency-injection\";\nimport {BasicHttpClient} from \"./common/core/basicHttpClient\";\nimport {SimulationClient} from \"./common/simulation/simulationClient\";\nimport {WuaHttpClient} from \"./common/core/wuaHttpClient\";\nimport {PlatformHelper} from \"./common/core/platformHelper\";\nimport {HttpClient} from \"./common/core/httpClient\";\n\nexport function configure(aurelia: Aurelia): Promise<Aurelia> {\n    setupResilientClients(aurelia);\n\n    return Startup.configure(aurelia, [\n        \"common/ui/services/helpOverlayService/helpOverlay\",\n        \"common/ui/services/helpOverlayService/helpOverlayAdmin\",\n        \"common/ui/converters/stringifyValueConverter\",\n        \"common/ui/converters/dateFormatValueConverter\",\n        \"common/ui/converters/dateTimeFormatValueConverter\",\n        \"common/ui/converters/htmlFormatValueConverter\",\n        \"common/ui/converters/sortValueConverter\",\n        \"common/ui/converters/limitValueConverter\",\n        \"common/ui/converters/groupByValueConverter\",\n        \"common/ui/converters/sanitizeSpecialCharactersValueConverter\",\n        \"common/ui/converters/daysDisplayValueConverter\",\n        \"common/ui/attributes/hideKeyboardOnEnter\",\n        \"common/ui/attributes/numericOnly\",\n        \"common/ui/attributes/timeOnly\",\n        \"common/ui/attributes/cancelDefaultSubmit\",\n        \"common/ui/attributes/formManager\",\n        \"common/ui/attributes/fixHeader\",\n        \"common/ui/elements/accordion\",\n        \"common/ui/elements/buttonList\",\n        \"common/ui/elements/checkbox\",\n        \"common/ui/elements/collapsible\",\n        \"common/ui/elements/datePicker\",\n        \"common/ui/elements/dropDown\",\n        \"common/ui/elements/footerNav\",\n        \"common/ui/elements/formManagerArrayMap\",\n        \"common/ui/elements/helpTip\",\n        \"common/ui/elements/navBarMenu\",\n        \"common/ui/elements/pleaseWait\",\n        \"common/ui/elements/progressBar\",\n        \"common/ui/elements/starRating\",\n        \"common/ui/elements/toggle\",\n        \"common/ui/elements/numberBox\",\n        \"common/ui/elements/timePicker\",\n        \"common/ui/elements/timeRangePicker\",\n        \"common/ui/elements/textArea\",\n        \"common/ui/elements/textBox\",\n        \"common/ui/elements/buttonList\",\n        \"common/ui/elements/toastManager\",\n        \"common/ui/elements/incrementalNumberPicker\",\n        \"common/ui/elements/numberAdjuster\",\n        \"common/ui/elements/editableDropdown\",\n        \"common/ui/elements/badge\",\n        \"hema/core/elements/timePicker2\",\n        \"hema/presentation/elements/navSections/iconNavBar\",\n        \"hema/presentation/elements/navSections/navBar\",\n        \"hema/presentation/elements/stateButtons\",\n        \"hema/presentation/elements/navigation/fullscreen\",\n        \"hema/presentation/elements/navigation/prevNextButtons\",\n        \"hema/presentation/elements/navigation/tabButtons\",\n        \"hema/presentation/elements/catalogLookup\",\n        \"hema/presentation/elements/engineerState\",\n        \"hema/presentation/elements/yesNoButtonList\",\n        \"hema/presentation/elements/task-appliance.html\",\n        \"hema/presentation/elements/task-charge.html\",\n        \"hema/presentation/elements/task-description.html\",\n        \"hema/presentation/elements/task-support-info.html\",\n        \"hema/presentation/elements/task-job.html\",\n        \"hema/presentation/elements/task-action.html\",\n        \"hema/presentation/elements/worklistNotification\",\n        \"hema/presentation/converters/dataStateStyleValueConverter\",\n        \"hema/presentation/converters/secondsToTimeValueConverter\",\n        \"hema/presentation/converters/chargeTypeToServiceLevelCodeValueConverter\",\n        \"hema/presentation/converters/engineerStatusStyleValueConverter\",\n        \"hema/presentation/converters/numberToBigNumberValueConverter\",\n        \"hema/presentation/elements/viewState\",\n        \"hema/presentation/converters/numberToCurrencyValueConverter\"\n    ], null);\n}\n\nfunction setupResilientClients(aurelia: Aurelia): void {\n    aurelia.container.registerSingleton(\"HttpClient\", () => {\n        return Container.instance.get(PlatformHelper.getPlatform() === \"wua\" ? WuaHttpClient : HttpClient);\n    });\n    aurelia.container.registerSingleton(\"BasicHttpClient\", () => Container.instance.get(BasicHttpClient));\n    aurelia.container.registerSingleton(\"SimulationClient\", () => Container.instance.get(SimulationClient));\n}\n"],"sourceRoot":"."}